/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*********************!*\
  !*** ./src/app.jsx ***!
  \*********************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(/*! react */ 1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 158);
	
	var _connection = __webpack_require__(/*! ./connection.js */ 159);
	
	var _connection2 = _interopRequireDefault(_connection);
	
	var _RoundTrip = __webpack_require__(/*! ./components/RoundTrip.jsx */ 160);
	
	var _RoundTrip2 = _interopRequireDefault(_RoundTrip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var App = function (_React$Component) {
		_inherits(App, _React$Component);
	
		function App(props) {
			_classCallCheck(this, App);
	
			var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
	
			_this.connection = new _connection2.default();
			return _this;
		}
	
		_createClass(App, [{
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(_RoundTrip2.default, { connection: this.connection })
				);
			}
		}]);
	
		return App;
	}(_react2.default.Component);
	
	(0, _reactDom.render)(_react2.default.createElement(App, null), document.getElementById('app'));

/***/ },
/* 1 */
/*!***************************!*\
  !*** ../~/react/react.js ***!
  \***************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! ./lib/React */ 2);

/***/ },
/* 2 */
/*!*******************************!*\
  !*** ../~/react/lib/React.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var ReactDOM = __webpack_require__(/*! ./ReactDOM */ 3);
	var ReactDOMServer = __webpack_require__(/*! ./ReactDOMServer */ 148);
	var ReactIsomorphic = __webpack_require__(/*! ./ReactIsomorphic */ 152);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var deprecated = __webpack_require__(/*! ./deprecated */ 157);
	
	// `version` will be added here by ReactIsomorphic.
	var React = {};
	
	assign(React, ReactIsomorphic);
	
	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),
	
	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});
	
	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;
	
	module.exports = React;

/***/ },
/* 3 */
/*!**********************************!*\
  !*** ../~/react/lib/ReactDOM.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactDOMTextComponent = __webpack_require__(/*! ./ReactDOMTextComponent */ 6);
	var ReactDefaultInjection = __webpack_require__(/*! ./ReactDefaultInjection */ 71);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 146);
	
	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 91);
	var renderSubtreeIntoContainer = __webpack_require__(/*! ./renderSubtreeIntoContainer */ 147);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	ReactDefaultInjection.inject();
	
	var render = ReactPerf.measure('React', 'render', ReactMount.render);
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,
	
	    // shams
	    Object.create, Object.freeze];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 4 */
/*!*******************************!*\
  !*** ../~/process/browser.js ***!
  \*******************************/
/***/ function(module, exports) {

	'use strict';
	
	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ },
/* 5 */
/*!*******************************************!*\
  !*** ../~/react/lib/ReactCurrentOwner.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 6 */
/*!***********************************************!*\
  !*** ../~/react/lib/ReactDOMTextComponent.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 7);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 22);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 26);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 21);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 20);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 70);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function ReactDOMTextComponent(props) {
	  // This constructor and its argument is currently used by mocks.
	};
	
	assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function construct(text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;
	
	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function mountComponent(rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function receiveComponent(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },
	
	  unmountComponent: function unmountComponent() {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 7 */
/*!***********************************************!*\
  !*** ../~/react/lib/DOMChildrenOperations.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var Danger = __webpack_require__(/*! ./Danger */ 8);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 16);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 19);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 20);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	
	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
	
	  parentNode.insertBefore(childNode, beforeChild);
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
	
	  updateTextContent: setTextContent,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function processUpdates(updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;
	
	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;
	
	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
	
	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;
	
	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }
	
	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }
	
	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 8 */
/*!********************************!*\
  !*** ../~/react/lib/Danger.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var createNodesFromMarkup = __webpack_require__(/*! fbjs/lib/createNodesFromMarkup */ 10);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var getMarkupWrap = __webpack_require__(/*! fbjs/lib/getMarkupWrap */ 14);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function dangerouslyRenderMarkup(markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
	
	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 9 */
/*!*********************************************!*\
  !*** ../~/fbjs/lib/ExecutionEnvironment.js ***!
  \*********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 10 */
/*!**********************************************!*\
  !*** ../~/fbjs/lib/createNodesFromMarkup.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 9);
	
	var createArrayFromMixed = __webpack_require__(/*! ./createArrayFromMixed */ 11);
	var getMarkupWrap = __webpack_require__(/*! ./getMarkupWrap */ 14);
	var invariant = __webpack_require__(/*! ./invariant */ 13);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 11 */
/*!*********************************************!*\
  !*** ../~/fbjs/lib/createArrayFromMixed.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var toArray = __webpack_require__(/*! ./toArray */ 12);
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 12 */
/*!********************************!*\
  !*** ../~/fbjs/lib/toArray.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var invariant = __webpack_require__(/*! ./invariant */ 13);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 13 */
/*!**********************************!*\
  !*** ../~/fbjs/lib/invariant.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 14 */
/*!**************************************!*\
  !*** ../~/fbjs/lib/getMarkupWrap.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 9);
	
	var invariant = __webpack_require__(/*! ./invariant */ 13);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 15 */
/*!**************************************!*\
  !*** ../~/fbjs/lib/emptyFunction.js ***!
  \**************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */
	
	"use strict";
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 16 */
/*!****************************************************!*\
  !*** ../~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 17);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 17 */
/*!**********************************!*\
  !*** ../~/fbjs/lib/keyMirror.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! ./invariant */ 13);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 18 */
/*!***********************************!*\
  !*** ../~/react/lib/ReactPerf.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,
	
	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,
	
	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function measureMethods(object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },
	
	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function measure(objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function wrapper() {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },
	
	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function injectMeasure(measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};
	
	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}
	
	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 19 */
/*!**************************************!*\
  !*** ../~/react/lib/setInnerHTML.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function setInnerHTML(node, html) {
	  node.innerHTML = html;
	};
	
	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function setInnerHTML(node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function setInnerHTML(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 20 */
/*!****************************************!*\
  !*** ../~/react/lib/setTextContent.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 21);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 19);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function setTextContent(node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function setTextContent(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 21 */
/*!*****************************************************!*\
  !*** ../~/react/lib/escapeTextContentForBrowser.js ***!
  \*****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 22 */
/*!***********************************************!*\
  !*** ../~/react/lib/DOMPropertyOperations.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	
	var quoteAttributeValueForBrowser = __webpack_require__(/*! ./quoteAttributeValueForBrowser */ 24);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function warnUnknownProperty(name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function createMarkupForID(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function setAttributeForID(node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function createMarkupForProperty(name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function setValueForProperty(node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },
	
	  setValueForAttribute: function setValueForAttribute(node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function deleteValueForProperty(node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 23 */
/*!*************************************!*\
  !*** ../~/react/lib/DOMProperty.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function isCustomAttribute(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function getDefaultValueForProperty(nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 24 */
/*!*******************************************************!*\
  !*** ../~/react/lib/quoteAttributeValueForBrowser.js ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 21);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 25 */
/*!********************************!*\
  !*** ../~/fbjs/lib/warning.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 15);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 26 */
/*!**********************************************************!*\
  !*** ../~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 27);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function unmountIDFromEnvironment(rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 27 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactDOMIDOperations.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 7);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 22);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function updatePropertyByID(id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
	
	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },
	
	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};
	
	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});
	
	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 28 */
/*!************************************!*\
  !*** ../~/react/lib/ReactMount.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 29);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactDOMFeatureFlags = __webpack_require__(/*! ./ReactDOMFeatureFlags */ 41);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 44);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 47);
	var ReactMarkupChecksum = __webpack_require__(/*! ./ReactMarkupChecksum */ 48);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 53);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 58);
	var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 59);
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 62);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 19);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 67);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 70);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
	
	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};
	
	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}
	
	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}
	
	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
	
	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }
	
	  return id;
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}
	
	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
	
	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}
	
	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}
	
	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
	
	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}
	
	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	
	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);
	
	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function TopLevelWrapper() {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function scrollMonitor(container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }
	
	    return prevComponent;
	  },
	
	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function _registerComponent(nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	
	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },
	
	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
	
	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = instancesByReactRootID[getReactRootID(container)];
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function render(nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function registerContainer(container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function unmountComponentAtNode(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }
	
	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },
	
	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function findReactContainerForID(id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];
	
	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }
	
	    return container;
	  },
	
	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function findReactNodeByID(id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },
	
	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function getFirstReactDOM(node) {
	    return findFirstReactDOMImpl(node);
	  },
	
	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function findComponentRoot(ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;
	
	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }
	
	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;
	
	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;
	
	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.
	
	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }
	
	        child = child.nextSibling;
	      }
	
	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;
	
	        return targetChild;
	      }
	    }
	
	    firstChildren.length = 0;
	
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },
	
	  _mountImageIntoNode: function _mountImageIntoNode(markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },
	
	  ownerDocumentContextKey: ownerDocumentContextKey,
	
	  /**
	   * React ID utilities.
	   */
	
	  getReactRootID: getReactRootID,
	
	  getID: getID,
	
	  setID: setID,
	
	  getNode: getNode,
	
	  getNodeFromInstance: getNodeFromInstance,
	
	  isValid: isValid,
	
	  purgeID: purgeID
	};
	
	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 29 */
/*!**************************************************!*\
  !*** ../~/react/lib/ReactBrowserEventEmitter.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 31);
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 32);
	var ReactEventEmitterMixin = __webpack_require__(/*! ./ReactEventEmitterMixin */ 37);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 38);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 40);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function setEnabled(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function isEnabled() {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function listenTo(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },
	
	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginHub.registrationNameModules,
	
	  putListener: EventPluginHub.putListener,
	
	  getListener: EventPluginHub.getListener,
	
	  deleteListener: EventPluginHub.deleteListener,
	
	  deleteAllListeners: EventPluginHub.deleteAllListeners
	
	});
	
	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 30 */
/*!****************************************!*\
  !*** ../~/react/lib/EventConstants.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 17);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 31 */
/*!****************************************!*\
  !*** ../~/react/lib/EventPluginHub.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 32);
	var EventPluginUtils = __webpack_require__(/*! ./EventPluginUtils */ 33);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 34);
	
	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 35);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 36);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;
	
	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,
	
	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function injectInstanceHandle(InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },
	
	    getInstanceHandle: function getInstanceHandle() {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginRegistry.registrationNameModules,
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function putListener(id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : invariant(false) : undefined;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function getListener(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function deleteListener(id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function deleteAllListeners(id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }
	
	      delete listenerBank[registrationName][id];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function enqueueEvents(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function processEventQueue(simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function __purge() {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function __getListenerBank() {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 32 */
/*!*********************************************!*\
  !*** ../~/react/lib/EventPluginRegistry.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function injectEventPluginOrder(InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function _resetEventPlugins() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 33 */
/*!******************************************!*\
  !*** ../~/react/lib/EventPluginUtils.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 34);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function injectMount(InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function validateEventDispatches(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getNode: function getNode(id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function getID(node) {
	    return injection.Mount.getID(node);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 34 */
/*!*****************************************!*\
  !*** ../~/react/lib/ReactErrorUtils.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function rethrowCaughtError() {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 35 */
/*!****************************************!*\
  !*** ../~/react/lib/accumulateInto.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 36 */
/*!********************************************!*\
  !*** ../~/react/lib/forEachAccumulated.js ***!
  \********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	var forEachAccumulated = function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

/***/ },
/* 37 */
/*!************************************************!*\
  !*** ../~/react/lib/ReactEventEmitterMixin.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 31);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function handleTopLevel(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 38 */
/*!*****************************************!*\
  !*** ../~/react/lib/ViewportMetrics.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function refreshScrollValues(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 39 */
/*!***************************************!*\
  !*** ../~/react/lib/Object.assign.js ***!
  \***************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */
	
	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign
	
	'use strict';
	
	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }
	
	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }
	
	    var from = Object(nextSource);
	
	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.
	
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }
	
	  return to;
	}
	
	module.exports = assign;

/***/ },
/* 40 */
/*!******************************************!*\
  !*** ../~/react/lib/isEventSupported.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 41 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactDOMFeatureFlags.js ***!
  \**********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 42 */
/*!**************************************!*\
  !*** ../~/react/lib/ReactElement.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 43);
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }
	
	  return element;
	};
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
	
	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	
	  return newElement;
	};
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 43 */
/*!*******************************************!*\
  !*** ../~/react/lib/canDefineProperty.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function get() {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 44 */
/*!*****************************************************!*\
  !*** ../~/react/lib/ReactEmptyComponentRegistry.js ***!
  \*****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */
	
	'use strict';
	
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	
	var nullComponentIDsRegistry = {};
	
	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}
	
	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}
	
	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}
	
	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};
	
	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 45 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactInstanceHandles.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactRootIndex = __webpack_require__(/*! ./ReactRootIndex */ 46);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;
	
	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;
	
	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}
	
	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}
	
	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}
	
	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}
	
	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}
	
	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}
	
	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}
	
	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {
	
	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function createReactRootID() {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },
	
	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function createReactID(rootID, name) {
	    return rootID + name;
	  },
	
	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function getReactRootIDFromNodeID(id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },
	
	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function traverseEnterLeave(leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },
	
	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function traverseTwoPhase(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },
	
	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function traverseTwoPhaseSkipTarget(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },
	
	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function traverseAncestors(targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },
	
	  getFirstCommonAncestorID: getFirstCommonAncestorID,
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,
	
	  isAncestorIDOf: isAncestorIDOf,
	
	  SEPARATOR: SEPARATOR
	
	};
	
	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 46 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactRootIndex.js ***!
  \****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function injectCreateReactRootIndex(_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};
	
	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};
	
	module.exports = ReactRootIndex;

/***/ },
/* 47 */
/*!******************************************!*\
  !*** ../~/react/lib/ReactInstanceMap.js ***!
  \******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function remove(key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function get(key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function has(key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function set(key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 48 */
/*!*********************************************!*\
  !*** ../~/react/lib/ReactMarkupChecksum.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(/*! ./adler32 */ 49);
	
	var TAG_END = /\/?>/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function addChecksumToMarkup(markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function canReuseMarkup(markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 49 */
/*!*********************************!*\
  !*** ../~/react/lib/adler32.js ***!
  \*********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 50 */
/*!*****************************************!*\
  !*** ../~/react/lib/ReactReconciler.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(/*! ./ReactRef */ 51);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 51 */
/*!**********************************!*\
  !*** ../~/react/lib/ReactRef.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(/*! ./ReactOwner */ 52);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 52 */
/*!************************************!*\
  !*** ../~/react/lib/ReactOwner.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function isValidOwner(object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 53 */
/*!******************************************!*\
  !*** ../~/react/lib/ReactUpdateQueue.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 47);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function enqueueSetProps(publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },
	
	  enqueueSetPropsInternal: function enqueueSetPropsInternal(internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function enqueueReplaceProps(publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },
	
	  enqueueReplacePropsInternal: function enqueueReplacePropsInternal(internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  enqueueElementInternal: function enqueueElementInternal(internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 54 */
/*!**************************************!*\
  !*** ../~/react/lib/ReactUpdates.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 55);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	var Transaction = __webpack_require__(/*! ./Transaction */ 57);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}
	
	var NESTED_UPDATES = {
	  initialize: function initialize() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function close() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function initialize() {
	    this.callbackQueue.reset();
	  },
	  close: function close() {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}
	
	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function destructor() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function perform(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function flushBatchedUpdates() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 55 */
/*!***************************************!*\
  !*** ../~/react/lib/CallbackQueue.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function destructor() {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 56 */
/*!*************************************!*\
  !*** ../~/react/lib/PooledClass.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function standardReleaser(instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 57 */
/*!*************************************!*\
  !*** ../~/react/lib/Transaction.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function reinitializeTransaction() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function isInTransaction() {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function perform(method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function initializeAll(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function closeAll(startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 58 */
/*!************************************!*\
  !*** ../~/fbjs/lib/emptyObject.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 59 */
/*!*************************************!*\
  !*** ../~/fbjs/lib/containsNode.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isTextNode = __webpack_require__(/*! ./isTextNode */ 60);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;
	
	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;
	
	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 60 */
/*!***********************************!*\
  !*** ../~/fbjs/lib/isTextNode.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isNode = __webpack_require__(/*! ./isNode */ 61);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 61 */
/*!*******************************!*\
  !*** ../~/fbjs/lib/isNode.js ***!
  \*******************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 62 */
/*!***************************************************!*\
  !*** ../~/react/lib/instantiateReactComponent.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactCompositeComponent = __webpack_require__(/*! ./ReactCompositeComponent */ 63);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 68);
	var ReactNativeComponent = __webpack_require__(/*! ./ReactNativeComponent */ 69);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper() {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : invariant(false) : undefined;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }
	
	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 63 */
/*!*************************************************!*\
  !*** ../~/react/lib/ReactCompositeComponent.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 64);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 47);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 65);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 66);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 53);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 58);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 67);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function construct(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	
	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedComponent = null;
	
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    // Initialize the public class
	    var inst;
	    var renderedElement;
	
	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = 'prototype' in Component;
	
	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }
	
	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);
	
	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }
	
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent() {
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }
	
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function _maskContext(context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function _processContext(context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function _processChildContext(currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(_typeof(Component.childContextTypes) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function _processProps(newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function _checkPropTypes(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }
	
	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	
	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.
	
	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	
	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }
	
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function _processPendingState(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);
	
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },
	
	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function _replaceNodeWithMarkupByID(prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function _renderValidatedComponent() {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function attachRef(ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function detachRef(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function getName() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function getPublicInstance() {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 64 */
/*!***************************************************!*\
  !*** ../~/react/lib/ReactComponentEnvironment.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function injectEnvironment(environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 65 */
/*!************************************************!*\
  !*** ../~/react/lib/ReactPropTypeLocations.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 17);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 66 */
/*!****************************************************!*\
  !*** ../~/react/lib/ReactPropTypeLocationNames.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 67 */
/*!****************************************************!*\
  !*** ../~/react/lib/shouldUpdateReactComponent.js ***!
  \****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
	  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 68 */
/*!*********************************************!*\
  !*** ../~/react/lib/ReactEmptyComponent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 44);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function injectEmptyComponent(component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}
	
	var ReactEmptyComponent = function ReactEmptyComponent(instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function construct(element) {},
	  mountComponent: function mountComponent(rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function receiveComponent() {},
	  unmountComponent: function unmountComponent(rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 69 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactNativeComponent.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function injectTextComponentClass(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function injectComponentClasses(componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 70 */
/*!********************************************!*\
  !*** ../~/react/lib/validateDOMNesting.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    parentTag: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.parentTag = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function findOwnerStack(instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function validateDOMNesting(childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };
	
	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 71 */
/*!***********************************************!*\
  !*** ../~/react/lib/ReactDefaultInjection.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(/*! ./BeforeInputEventPlugin */ 72);
	var ChangeEventPlugin = __webpack_require__(/*! ./ChangeEventPlugin */ 80);
	var ClientReactRootIndex = __webpack_require__(/*! ./ClientReactRootIndex */ 83);
	var DefaultEventPluginOrder = __webpack_require__(/*! ./DefaultEventPluginOrder */ 84);
	var EnterLeaveEventPlugin = __webpack_require__(/*! ./EnterLeaveEventPlugin */ 85);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var HTMLDOMPropertyConfig = __webpack_require__(/*! ./HTMLDOMPropertyConfig */ 89);
	var ReactBrowserComponentMixin = __webpack_require__(/*! ./ReactBrowserComponentMixin */ 90);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 26);
	var ReactDefaultBatchingStrategy = __webpack_require__(/*! ./ReactDefaultBatchingStrategy */ 92);
	var ReactDOMComponent = __webpack_require__(/*! ./ReactDOMComponent */ 93);
	var ReactDOMTextComponent = __webpack_require__(/*! ./ReactDOMTextComponent */ 6);
	var ReactEventListener = __webpack_require__(/*! ./ReactEventListener */ 118);
	var ReactInjection = __webpack_require__(/*! ./ReactInjection */ 121);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactReconcileTransaction = __webpack_require__(/*! ./ReactReconcileTransaction */ 125);
	var SelectEventPlugin = __webpack_require__(/*! ./SelectEventPlugin */ 130);
	var ServerReactRootIndex = __webpack_require__(/*! ./ServerReactRootIndex */ 131);
	var SimpleEventPlugin = __webpack_require__(/*! ./SimpleEventPlugin */ 132);
	var SVGDOMPropertyConfig = __webpack_require__(/*! ./SVGDOMPropertyConfig */ 141);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(/*! ./ReactDefaultPerf */ 142);
	      ReactDefaultPerf.start();
	    }
	  }
	}
	
	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 72 */
/*!************************************************!*\
  !*** ../~/react/lib/BeforeInputEventPlugin.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 73);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var FallbackCompositionState = __webpack_require__(/*! ./FallbackCompositionState */ 74);
	var SyntheticCompositionEvent = __webpack_require__(/*! ./SyntheticCompositionEvent */ 76);
	var SyntheticInputEvent = __webpack_require__(/*! ./SyntheticInputEvent */ 78);
	
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 73 */
/*!******************************************!*\
  !*** ../~/react/lib/EventPropagators.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 31);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 35);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 36);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 74 */
/*!**************************************************!*\
  !*** ../~/react/lib/FallbackCompositionState.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 75);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	assign(FallbackCompositionState.prototype, {
	  destructor: function destructor() {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function getText() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function getData() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 75 */
/*!************************************************!*\
  !*** ../~/react/lib/getTextContentAccessor.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 76 */
/*!***************************************************!*\
  !*** ../~/react/lib/SyntheticCompositionEvent.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 77 */
/*!****************************************!*\
  !*** ../~/react/lib/SyntheticEvent.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}
	
	assign(SyntheticEvent.prototype, {
	
	  preventDefault: function preventDefault() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function stopPropagation() {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function persist() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function destructor() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 78 */
/*!*********************************************!*\
  !*** ../~/react/lib/SyntheticInputEvent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 79 */
/*!******************************!*\
  !*** ../~/fbjs/lib/keyOf.js ***!
  \******************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 80 */
/*!*******************************************!*\
  !*** ../~/react/lib/ChangeEventPlugin.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 31);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 73);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 81);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 40);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 82);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}
	
	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}
	
	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function get() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function set(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}
	
	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	
	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }
	
	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 81 */
/*!****************************************!*\
  !*** ../~/react/lib/getEventTarget.js ***!
  \****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 82 */
/*!********************************************!*\
  !*** ../~/react/lib/isTextInputElement.js ***!
  \********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 83 */
/*!**********************************************!*\
  !*** ../~/react/lib/ClientReactRootIndex.js ***!
  \**********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var nextReactRootIndex = 0;
	
	var ClientReactRootIndex = {
	  createReactRootIndex: function createReactRootIndex() {
	    return nextReactRootIndex++;
	  }
	};
	
	module.exports = ClientReactRootIndex;

/***/ },
/* 84 */
/*!*************************************************!*\
  !*** ../~/react/lib/DefaultEventPluginOrder.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 85 */
/*!***********************************************!*\
  !*** ../~/react/lib/EnterLeaveEventPlugin.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 73);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 86);
	
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var extractedEvents = [null, null];
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
	
	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;
	
	    return extractedEvents;
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 86 */
/*!*********************************************!*\
  !*** ../~/react/lib/SyntheticMouseEvent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 87);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 38);
	
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 88);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function button(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function relatedTarget(event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function pageX(event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function pageY(event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 87 */
/*!******************************************!*\
  !*** ../~/react/lib/SyntheticUIEvent.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 81);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function view(event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function detail(event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 88 */
/*!***********************************************!*\
  !*** ../~/react/lib/getEventModifierState.js ***!
  \***********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 89 */
/*!***********************************************!*\
  !*** ../~/react/lib/HTMLDOMPropertyConfig.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,
	
	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 90 */
/*!****************************************************!*\
  !*** ../~/react/lib/ReactBrowserComponentMixin.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */
	
	'use strict';
	
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 47);
	
	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 91);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var didWarnKey = '_getDOMNodeDidWarn';
	
	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function getDOMNode() {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};
	
	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 91 */
/*!*************************************!*\
  !*** ../~/react/lib/findDOMNode.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 47);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 92 */
/*!******************************************************!*\
  !*** ../~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	var Transaction = __webpack_require__(/*! ./Transaction */ 57);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function close() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 93 */
/*!*******************************************!*\
  !*** ../~/react/lib/ReactDOMComponent.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var AutoFocusUtils = __webpack_require__(/*! ./AutoFocusUtils */ 94);
	var CSSPropertyOperations = __webpack_require__(/*! ./CSSPropertyOperations */ 96);
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 22);
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 29);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 26);
	var ReactDOMButton = __webpack_require__(/*! ./ReactDOMButton */ 104);
	var ReactDOMInput = __webpack_require__(/*! ./ReactDOMInput */ 105);
	var ReactDOMOption = __webpack_require__(/*! ./ReactDOMOption */ 109);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 112);
	var ReactDOMTextarea = __webpack_require__(/*! ./ReactDOMTextarea */ 113);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactMultiChild = __webpack_require__(/*! ./ReactMultiChild */ 114);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 53);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 43);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 21);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 40);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 19);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 20);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 117);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 70);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	
	var ELEMENT_NODE_TYPE = 1;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function get() {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}
	
	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}
	
	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}
	
	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}
	
	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function friendlyStringify(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || _typeof(props.style) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}
	
	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
	
	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}
	
	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  construct: function construct(element) {
	    this._currentElement = element;
	  },
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function mountComponent(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }
	
	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function _createInitialChildren(transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function receiveComponent(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function unmountComponent() {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }
	
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },
	
	  getPublicInstance: function getPublicInstance() {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);
	
	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }
	
	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }
	
	};
	
	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});
	
	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 94 */
/*!****************************************!*\
  !*** ../~/react/lib/AutoFocusUtils.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	
	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 91);
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 95);
	
	var Mixin = {
	  componentDidMount: function componentDidMount() {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};
	
	var AutoFocusUtils = {
	  Mixin: Mixin,
	
	  focusDOMComponent: function focusDOMComponent() {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 95 */
/*!**********************************!*\
  !*** ../~/fbjs/lib/focusNode.js ***!
  \**********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 96 */
/*!***********************************************!*\
  !*** ../~/react/lib/CSSPropertyOperations.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 97);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	
	var camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ 98);
	var dangerousStyleValue = __webpack_require__(/*! ./dangerousStyleValue */ 100);
	var hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ 101);
	var memoizeStringOnly = __webpack_require__(/*! fbjs/lib/memoizeStringOnly */ 103);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	
	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };
	
	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };
	
	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function warnValidStyle(name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function setValueForStyles(node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 97 */
/*!*************************************!*\
  !*** ../~/react/lib/CSSProperty.js ***!
  \*************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 98 */
/*!******************************************!*\
  !*** ../~/fbjs/lib/camelizeStyleName.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(/*! ./camelize */ 99);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 99 */
/*!*********************************!*\
  !*** ../~/fbjs/lib/camelize.js ***!
  \*********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */
	
	"use strict";
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 100 */
/*!*********************************************!*\
  !*** ../~/react/lib/dangerousStyleValue.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 97);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 101 */
/*!*******************************************!*\
  !*** ../~/fbjs/lib/hyphenateStyleName.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(/*! ./hyphenate */ 102);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 102 */
/*!**********************************!*\
  !*** ../~/fbjs/lib/hyphenate.js ***!
  \**********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */
	
	'use strict';
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 103 */
/*!******************************************!*\
  !*** ../~/fbjs/lib/memoizeStringOnly.js ***!
  \******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 104 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactDOMButton.js ***!
  \****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function getNativeProps(inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }
	
	    return nativeProps;
	  }
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 105 */
/*!***************************************!*\
  !*** ../~/react/lib/ReactDOMInput.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 27);
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 106);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	var instancesByReactID = {};
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function getNativeProps(inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  mountReadyWrapper: function mountReadyWrapper(inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },
	
	  unmountWrapper: function unmountWrapper(inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },
	
	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 106 */
/*!******************************************!*\
  !*** ../~/react/lib/LinkedValueUtils.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 107);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 65);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}
	
	var propTypes = {
	  value: function value(props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function checked(props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function checkPropTypes(tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function getValue(inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function getChecked(inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function executeOnChange(inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 107 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactPropTypes.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 66);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 108);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 108 */
/*!***************************************!*\
  !*** ../~/react/lib/getIteratorFn.js ***!
  \***************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 109 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactDOMOption.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 110);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 112);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var valueContextKey = ReactDOMSelect.valueContextKey;
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function mountWrapper(inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }
	
	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];
	
	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  getNativeProps: function getNativeProps(inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = '';
	
	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });
	
	    if (content) {
	      nativeProps.children = content;
	    }
	
	    return nativeProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 110 */
/*!***************************************!*\
  !*** ../~/react/lib/ReactChildren.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 111);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 111 */
/*!*********************************************!*\
  !*** ../~/react/lib/traverseAllChildren.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 108);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};
	
	var userProvidedKeyEscapeRegex = /[=.:]/g;
	
	var didWarnAboutMaps = false;
	
	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}
	
	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 112 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactDOMSelect.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 106);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,
	
	  getNativeProps: function getNativeProps(inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },
	
	  processChildContext: function processChildContext(inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },
	
	  postUpdateWrapper: function postUpdateWrapper(inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 113 */
/*!******************************************!*\
  !*** ../~/react/lib/ReactDOMTextarea.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 106);
	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 27);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function getNativeProps(inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 114 */
/*!*****************************************!*\
  !*** ../~/react/lib/ReactMultiChild.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 64);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 16);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	var ReactChildReconciler = __webpack_require__(/*! ./ReactChildReconciler */ 115);
	
	var flattenChildren = __webpack_require__(/*! ./flattenChildren */ 116);
	
	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;
	
	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];
	
	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];
	
	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}
	
	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function mountChildren(nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function updateTextContent(nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function updateMarkup(nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function unmountChildren() {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function moveChild(child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function createChild(child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function removeChild(child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },
	
	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function setTextContent(textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },
	
	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function setMarkup(markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function _mountChildByNameAtIndex(child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function _unmountChild(child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 115 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactChildReconciler.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 50);
	
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 62);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 67);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 111);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function updateChildren(prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function unmountChildren(renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 116 */
/*!*****************************************!*\
  !*** ../~/react/lib/flattenChildren.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 111);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 117 */
/*!*************************************!*\
  !*** ../~/fbjs/lib/shallowEqual.js ***!
  \*************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 118 */
/*!********************************************!*\
  !*** ../~/react/lib/ReactEventListener.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 119);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 81);
	var getUnboundedScrollPosition = __webpack_require__(/*! fbjs/lib/getUnboundedScrollPosition */ 120);
	
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function destructor() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }
	
	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}
	
	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);
	
	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
	
	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function setEnabled(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function isEnabled() {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function monitorScrollValue(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 119 */
/*!**************************************!*\
  !*** ../~/fbjs/lib/EventListener.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 15);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 120 */
/*!***************************************************!*\
  !*** ../~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \***************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 121 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactInjection.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 31);
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 64);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 122);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 68);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 29);
	var ReactNativeComponent = __webpack_require__(/*! ./ReactNativeComponent */ 69);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	var ReactRootIndex = __webpack_require__(/*! ./ReactRootIndex */ 46);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 122 */
/*!************************************!*\
  !*** ../~/react/lib/ReactClass.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 123);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 65);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 66);
	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 124);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 58);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 17);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function displayName(Constructor, _displayName) {
	    Constructor.displayName = _displayName;
	  },
	  mixins: function mixins(Constructor, _mixins) {
	    if (_mixins) {
	      for (var i = 0; i < _mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, _mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, _childContextTypes);
	  },
	  contextTypes: function contextTypes(Constructor, _contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, _contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = _getDefaultProps;
	    }
	  },
	  propTypes: function propTypes(Constructor, _propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, _propTypes);
	  },
	  statics: function statics(Constructor, _statics) {
	    mixStaticSpecIntoComponent(Constructor, _statics);
	  },
	  autobind: function autobind() {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}
	
	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	
	  var proto = Constructor.prototype;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    validateMethodOverride(proto, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function replaceState(newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted() {
	    return this.updater.isMounted(this);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function setProps(partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function replaceProps(newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};
	
	var ReactClassComponent = function ReactClassComponent() {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function createClass(spec) {
	    var Constructor = function Constructor(props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function injectMixin(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 123 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactComponent.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 124);
	
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 43);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 58);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 124 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactNoopUpdateQueue.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function enqueueSetProps(publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function enqueueReplaceProps(publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }
	
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 125 */
/*!***************************************************!*\
  !*** ../~/react/lib/ReactReconcileTransaction.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 55);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 29);
	var ReactDOMFeatureFlags = __webpack_require__(/*! ./ReactDOMFeatureFlags */ 41);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 126);
	var Transaction = __webpack_require__(/*! ./Transaction */ 57);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function initialize() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function close(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function close() {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 126 */
/*!*********************************************!*\
  !*** ../~/react/lib/ReactInputSelection.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(/*! ./ReactDOMSelection */ 127);
	
	var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 59);
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 95);
	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 129);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function getSelectionInformation() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function restoreSelection(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function getSelection(input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function setSelection(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 127 */
/*!*******************************************!*\
  !*** ../~/react/lib/ReactDOMSelection.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	
	var getNodeForCharacterOffset = __webpack_require__(/*! ./getNodeForCharacterOffset */ 128);
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 75);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 128 */
/*!***************************************************!*\
  !*** ../~/react/lib/getNodeForCharacterOffset.js ***!
  \***************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 129 */
/*!*****************************************!*\
  !*** ../~/fbjs/lib/getActiveElement.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';
	
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 130 */
/*!*******************************************!*\
  !*** ../~/react/lib/SelectEventPlugin.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 73);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 9);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 126);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 129);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 82);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 117);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function didPutListener(id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 131 */
/*!**********************************************!*\
  !*** ../~/react/lib/ServerReactRootIndex.js ***!
  \**********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
	
	var ServerReactRootIndex = {
	  createReactRootIndex: function createReactRootIndex() {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};
	
	module.exports = ServerReactRootIndex;

/***/ },
/* 132 */
/*!*******************************************!*\
  !*** ../~/react/lib/SimpleEventPlugin.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 30);
	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 119);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 73);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var SyntheticClipboardEvent = __webpack_require__(/*! ./SyntheticClipboardEvent */ 133);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	var SyntheticFocusEvent = __webpack_require__(/*! ./SyntheticFocusEvent */ 134);
	var SyntheticKeyboardEvent = __webpack_require__(/*! ./SyntheticKeyboardEvent */ 135);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 86);
	var SyntheticDragEvent = __webpack_require__(/*! ./SyntheticDragEvent */ 138);
	var SyntheticTouchEvent = __webpack_require__(/*! ./SyntheticTouchEvent */ 139);
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 87);
	var SyntheticWheelEvent = __webpack_require__(/*! ./SyntheticWheelEvent */ 140);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 136);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 79);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function didPutListener(id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function willDeleteListener(id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 133 */
/*!*************************************************!*\
  !*** ../~/react/lib/SyntheticClipboardEvent.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 77);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function clipboardData(event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 134 */
/*!*********************************************!*\
  !*** ../~/react/lib/SyntheticFocusEvent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 87);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 135 */
/*!************************************************!*\
  !*** ../~/react/lib/SyntheticKeyboardEvent.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 87);
	
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 136);
	var getEventKey = __webpack_require__(/*! ./getEventKey */ 137);
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 88);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function charCode(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function keyCode(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function which(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 136 */
/*!******************************************!*\
  !*** ../~/react/lib/getEventCharCode.js ***!
  \******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 137 */
/*!*************************************!*\
  !*** ../~/react/lib/getEventKey.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 136);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 138 */
/*!********************************************!*\
  !*** ../~/react/lib/SyntheticDragEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 86);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 139 */
/*!*********************************************!*\
  !*** ../~/react/lib/SyntheticTouchEvent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 87);
	
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 88);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 140 */
/*!*********************************************!*\
  !*** ../~/react/lib/SyntheticWheelEvent.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 86);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function deltaX(event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 141 */
/*!**********************************************!*\
  !*** ../~/react/lib/SVGDOMPropertyConfig.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 142 */
/*!******************************************!*\
  !*** ../~/react/lib/ReactDefaultPerf.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 23);
	var ReactDefaultPerfAnalysis = __webpack_require__(/*! ./ReactDefaultPerfAnalysis */ 143);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	var ReactPerf = __webpack_require__(/*! ./ReactPerf */ 18);
	
	var performanceNow = __webpack_require__(/*! fbjs/lib/performanceNow */ 144);
	
	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}
	
	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}
	
	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,
	
	  start: function start() {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }
	
	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },
	
	  stop: function stop() {
	    ReactPerf.enableMeasure = false;
	  },
	
	  getLastMeasurements: function getLastMeasurements() {
	    return ReactDefaultPerf._allMeasurements;
	  },
	
	  printExclusive: function printExclusive(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },
	
	  printInclusive: function printInclusive(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  getMeasurementsSummaryMap: function getMeasurementsSummaryMap(measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },
	
	  printWasted: function printWasted(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  printDOM: function printDOM(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  _recordWrite: function _recordWrite(id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },
	
	  measure: function measure(moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      var totalTime;
	      var rv;
	      var start;
	
	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if ((typeof id === 'undefined' ? 'undefined' : _typeof(id)) === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {
	
	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }
	
	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';
	
	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
	
	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }
	
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }
	
	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };
	
	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};
	
	module.exports = ReactDefaultPerf;

/***/ },
/* 143 */
/*!**************************************************!*\
  !*** ../~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */
	
	'use strict';
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	
	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};
	
	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}
	
	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}
	
	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;
	
	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });
	
	  return arr;
	}
	
	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;
	
	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }
	
	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }
	
	      var displayName = measurement.displayNames[id];
	
	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;
	
	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };
	
	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });
	
	  return arr;
	}
	
	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}
	
	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};
	
	module.exports = ReactDefaultPerfAnalysis;

/***/ },
/* 144 */
/*!***************************************!*\
  !*** ../~/fbjs/lib/performanceNow.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */
	
	'use strict';
	
	var performance = __webpack_require__(/*! ./performance */ 145);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 145 */
/*!************************************!*\
  !*** ../~/fbjs/lib/performance.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 9);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 146 */
/*!**************************************!*\
  !*** ../~/react/lib/ReactVersion.js ***!
  \**************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.8';

/***/ },
/* 147 */
/*!****************************************************!*\
  !*** ../~/react/lib/renderSubtreeIntoContainer.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 28);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 148 */
/*!****************************************!*\
  !*** ../~/react/lib/ReactDOMServer.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */
	
	'use strict';
	
	var ReactDefaultInjection = __webpack_require__(/*! ./ReactDefaultInjection */ 71);
	var ReactServerRendering = __webpack_require__(/*! ./ReactServerRendering */ 149);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 146);
	
	ReactDefaultInjection.inject();
	
	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};
	
	module.exports = ReactDOMServer;

/***/ },
/* 149 */
/*!**********************************************!*\
  !*** ../~/react/lib/ReactServerRendering.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';
	
	var ReactDefaultBatchingStrategy = __webpack_require__(/*! ./ReactDefaultBatchingStrategy */ 92);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactInstanceHandles = __webpack_require__(/*! ./ReactInstanceHandles */ 45);
	var ReactMarkupChecksum = __webpack_require__(/*! ./ReactMarkupChecksum */ 48);
	var ReactServerBatchingStrategy = __webpack_require__(/*! ./ReactServerBatchingStrategy */ 150);
	var ReactServerRenderingTransaction = __webpack_require__(/*! ./ReactServerRenderingTransaction */ 151);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 54);
	
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 58);
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 62);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 150 */
/*!*****************************************************!*\
  !*** ../~/react/lib/ReactServerBatchingStrategy.js ***!
  \*****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function batchedUpdates(callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};
	
	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 151 */
/*!*********************************************************!*\
  !*** ../~/react/lib/ReactServerRenderingTransaction.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 56);
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 55);
	var Transaction = __webpack_require__(/*! ./Transaction */ 57);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 15);
	
	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },
	
	  close: emptyFunction
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 152 */
/*!*****************************************!*\
  !*** ../~/react/lib/ReactIsomorphic.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 110);
	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 123);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 122);
	var ReactDOMFactories = __webpack_require__(/*! ./ReactDOMFactories */ 153);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 154);
	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 107);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 146);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var onlyChild = __webpack_require__(/*! ./onlyChild */ 156);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function createMixin(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 153 */
/*!*******************************************!*\
  !*** ../~/react/lib/ReactDOMFactories.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 154);
	
	var mapObject = __webpack_require__(/*! fbjs/lib/mapObject */ 155);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 154 */
/*!***********************************************!*\
  !*** ../~/react/lib/ReactElementValidator.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 65);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 66);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 5);
	
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 43);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 108);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	var loggedTypeFailures = {};
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}
	
	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	
	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;
	
	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  return addenda;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function createElement(type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function createFactory(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function get() {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function cloneElement(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 155 */
/*!**********************************!*\
  !*** ../~/fbjs/lib/mapObject.js ***!
  \**********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ },
/* 156 */
/*!***********************************!*\
  !*** ../~/react/lib/onlyChild.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 42);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 13);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 157 */
/*!************************************!*\
  !*** ../~/react/lib/deprecated.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */
	
	'use strict';
	
	var assign = __webpack_require__(/*! ./Object.assign */ 39);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 25);
	
	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function newFn() {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }
	
	  return fn;
	}
	
	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 4)))

/***/ },
/* 158 */
/*!*******************************!*\
  !*** ../~/react-dom/index.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! react/lib/ReactDOM */ 3);

/***/ },
/* 159 */
/*!***************************!*\
  !*** ./src/connection.js ***!
  \***************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* global io */
	
	var Connection = function Connection() {
		_classCallCheck(this, Connection);
	
		this.socket = io();
		console.log('this.socket');
		// console.log(this.socket);
	};
	
	exports.default = Connection;

/***/ },
/* 160 */
/*!**************************************!*\
  !*** ./src/components/RoundTrip.jsx ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(/*! react */ 1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _HighChart = __webpack_require__(/*! ./HighChart.jsx */ 161);
	
	var _HighChart2 = _interopRequireDefault(_HighChart);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	//import Chart from './Chart.jsx';
	
	
	//import Plotly from './Plotly.jsx';
	
	var RoundTrip = function (_React$Component) {
		_inherits(RoundTrip, _React$Component);
	
		function RoundTrip(props) {
			_classCallCheck(this, RoundTrip);
	
			var _this = _possibleConstructorReturn(this, (RoundTrip.__proto__ || Object.getPrototypeOf(RoundTrip)).call(this, props));
	
			_this.state = {
				textInterval: 100,
				interval: 100,
				messages: [],
				messagesSize: 10,
				clientSendTimeAvg: 0,
				serverSendTimeAvg: 0,
				clientRecievedTimeAvg: 0,
				tableDimension: 10,
				tableDigits: 1,
				currentMessage: { data: [] },
				points: [],
				svgPoints: ''
			};
	
			_this._intervalId = false;
	
			return _this;
		}
	
		_createClass(RoundTrip, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var _this2 = this;
	
				this.props.connection.socket.on("ROUND_TRIP_TO_CLIENT", function (message) {
					return _this2.messageRecieved.call(_this2, message);
				});
			}
		}, {
			key: 'messageRecieved',
			value: function messageRecieved(message) {
	
				// console.log("message");
				// console.log(message);
	
				message.clientSendTime = Date.parse(message.clientSendTime);
				message.serverSendTime = Date.parse(message.serverSendTime);
				message.clientRecievedTime = new Date().getTime();
	
				var messages = this.state.messages;
	
				if (messages.length < this.state.messagesSize) {
					messages.push(message);
				} else {
					messages.shift();
					messages.push(message);
				}
	
				var clientToServerSum = 0;
				var serverToClientSum = 0;
				var clientToClientSum = 0;
	
				messages.forEach(function (message) {
	
					message.clientToServer = message.serverSendTime - message.clientSendTime;
					clientToServerSum += message.clientToServer;
	
					message.serverToClient = message.clientRecievedTime - message.serverSendTime;
					serverToClientSum += message.serverToClient;
	
					message.clientToClient = message.clientRecievedTime - message.clientSendTime;
					clientToClientSum += message.clientToClient;
				});
	
				var clientToServerAvg = clientToServerSum / messages.length;
				var serverToClientAvg = serverToClientSum / messages.length;
				var clientToClientAvg = clientToClientSum / messages.length;
	
				// points.x.shift();
				// points.y.shift();
	
				// points.x.push(1);
				// points.y.push(clientToClientAvg);
	
				// let strPoints = points.x.reduce( (x, cur='') => { cur+=  }) 
				// points.shift();
				// points.push({})
				var points = this.state.points;
	
				if (points.length >= 100) {
					points.shift();
				}
				points.push(clientToClientAvg);
	
				// let svgPoints = points.reduce( (point, curr='', index) => { 
				// 	console.log("-----------")
				// 	console.log(curr)
				// 	console.log(index)
				// 	console.log(point)
				// 	console.log(`${index},${point} `)
				// 	return curr ? `${index},${point}` :  
				// } )
	
				var svgPoints = '';
				points.forEach(function (point, index) {
					svgPoints += index * 5 + ',' + point * 10 + ' ';
				});
	
				//console.log(svgPoints);
	
				this.setState({
					currentMessage: message,
					messages: messages,
					clientToServerAvg: clientToServerAvg,
					serverToClientAvg: serverToClientAvg,
					clientToClientAvg: clientToClientAvg,
					points: points,
					svgPoints: svgPoints
				});
			}
	
			// componentWillUpdate(nextProps, nextState) {
	
			// }
	
			// onChangeInterval(event){
			// 	this.setState({textInterval: event.target.value});
			// }
	
		}, {
			key: 'onClickApplyInterval',
			value: function onClickApplyInterval() {
	
				var interval = parseInt(this.state.textInterval);
	
				this.setState({ interval: interval });
	
				clearInterval(this._intervalId);
	
				var me = this;
	
				//this.data = this.initData();
	
				this._intervalId = setInterval(function () {
					//console.log("do something!")
	
					var message = {
						//data: me.data,
						data: me.initData(),
						clientSendTime: new Date(),
						connectionId: me.props.connection.socket.id
					};
	
					me.props.connection.socket.emit("ROUND_TRIP_TO_SERVER", message);
				}, interval);
			}
		}, {
			key: 'updateData',
			value: function updateData() {}
		}, {
			key: 'initData',
			value: function initData() {
	
				var size = this.state.tableDimension;
	
				var data = [];
	
				for (var iRow = 0; iRow < size; iRow++) {
					var row = [];
					for (var iColumn = 0; iColumn < size; iColumn++) {
						row.push((Math.random() * (this.state.tableDigits * 10)).toFixed(0));
						//row.push( Math.random() )
					}
					data.push(row);
				}
	
				return data;
			}
		}, {
			key: 'onClickStop',
			value: function onClickStop() {
				clearInterval(this._intervalId);
			}
		}, {
			key: 'render',
			value: function render() {
				var _this3 = this;
	
				return _react2.default.createElement(
					'div',
					null,
					'RoundTrip',
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(
							'label',
							null,
							'Interval (ms)'
						),
						_react2.default.createElement('input', { type: 'text', value: this.state.textInterval, onChange: function onChange(event) {
								return _this3.setState({ textInterval: event.target.value });
							} }),
						_react2.default.createElement(
							'button',
							{ onClick: this.onClickApplyInterval.bind(this) },
							'Apply Interval'
						),
						_react2.default.createElement(
							'button',
							{ onClick: this.onClickStop.bind(this) },
							'Stop'
						)
					),
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(
							'label',
							null,
							'Table Dimentions:'
						),
						' ',
						_react2.default.createElement('input', { type: 'text', value: this.state.tableDimension, onChange: function onChange(event) {
								return _this3.setState({ tableDimension: event.target.value });
							} })
					),
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(
							'label',
							null,
							'Table Digits'
						),
						' ',
						_react2.default.createElement('input', { type: 'text', value: this.state.tableDigits, onChange: function onChange(event) {
								return _this3.setState({ tableDigits: event.target.value });
							} })
					),
					_react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(
							'table',
							null,
							_react2.default.createElement(
								'tbody',
								null,
								_react2.default.createElement(
									'tr',
									null,
									_react2.default.createElement(
										'td',
										null,
										'Client To Server Average'
									),
									_react2.default.createElement(
										'td',
										null,
										this.state.clientToServerAvg
									)
								),
								_react2.default.createElement(
									'tr',
									null,
									_react2.default.createElement(
										'td',
										null,
										'Server To Client Average'
									),
									_react2.default.createElement(
										'td',
										null,
										this.state.serverToClientAvg
									)
								),
								_react2.default.createElement(
									'tr',
									null,
									_react2.default.createElement(
										'td',
										null,
										'Client To Client (round trip) Average'
									),
									_react2.default.createElement(
										'td',
										null,
										this.state.clientToClientAvg
									)
								)
							)
						),
						_react2.default.createElement(
							'div',
							{ style: { display: 'inline-block', verticalAlign: 'top' } },
							_react2.default.createElement(
								'table',
								null,
								_react2.default.createElement(
									'thead',
									null,
									_react2.default.createElement(
										'tr',
										null,
										_react2.default.createElement(
											'th',
											null,
											'Client send time'
										),
										_react2.default.createElement(
											'th',
											null,
											'Server send time'
										),
										_react2.default.createElement(
											'th',
											null,
											'Client received time'
										)
									)
								),
								_react2.default.createElement(
									'tbody',
									null,
									this.state.messages.map(function (message, index) {
										return _react2.default.createElement(
											'tr',
											{ key: index },
											_react2.default.createElement(
												'td',
												null,
												message.clientSendTime
											),
											_react2.default.createElement(
												'td',
												null,
												message.serverSendTime
											),
											_react2.default.createElement(
												'td',
												null,
												message.clientRecievedTime.toString()
											)
										);
									})
								)
							),
							_react2.default.createElement(
								'table',
								null,
								_react2.default.createElement(
									'tbody',
									null,
									this.state.currentMessage.data.map(function (row, iRow) {
										return _react2.default.createElement(
											'tr',
											{ key: iRow },
											row.map(function (column, iCol) {
												return _react2.default.createElement(
													'td',
													{ key: iCol },
													column
												);
											})
										);
									})
								)
							)
						),
						_react2.default.createElement(
							'div',
							{ style: { display: 'inline-block' } },
							_react2.default.createElement(
								'svg',
								{ width: '500', height: '500', xmlns: 'http://www.w3.org/2000/svg' },
								_react2.default.createElement('polyline', { fill: 'none', stroke: 'black', points: this.state.svgPoints })
							)
						)
					)
				);
			}
		}]);
	
		return RoundTrip;
	}(_react2.default.Component);
	
	exports.default = RoundTrip;

/***/ },
/* 161 */
/*!**************************************!*\
  !*** ./src/components/HighChart.jsx ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(/*! react */ 1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _highstock = __webpack_require__(/*! highcharts/highstock */ 162);
	
	var _highstock2 = _interopRequireDefault(_highstock);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var HighChart = function (_React$Component) {
		_inherits(HighChart, _React$Component);
	
		function HighChart() {
			_classCallCheck(this, HighChart);
	
			return _possibleConstructorReturn(this, (HighChart.__proto__ || Object.getPrototypeOf(HighChart)).apply(this, arguments));
		}
	
		_createClass(HighChart, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
	
				var series = [];
	
				var data = [];
				for (var i = 0; i < 100; i++) {
					data.push([new Date().getTime() + i, 1]);
				}
	
				for (var iData in this.props.data) {
					series.push({
						name: iData,
						data: data
					});
				}
	
				_highstock2.default.setOptions({
					global: {
						useUTC: false
					}
				});
	
				this.chart = _highstock2.default.stockChart(this.refs.chart, {
					title: {
						text: ''
					},
					rangeSelector: {
						// buttons: [{
						//     count: 1,
						//     type: 'minute',
						//     text: '1M'
						// }, {
						//     count: 5,
						//     type: 'minute',
						//     text: '5M'
						// }, {
						//     type: 'all',
						//     text: 'All'
						// }],
						inputEnabled: false,
						selected: 0
					},
					// yAxis: {        
					//     plotLines: [{
					//         value: 0,
					//         width: 1,
					//         color: '#808080'
					//     }]
					// },        
					// legend: {
					//     layout: 'vertical',
					//     align: 'right',
					//     verticalAlign: 'middle',
					//     borderWidth: 0
					// },
					series: series
				});
	
				// var me = this;
				// setInterval(
				// 	function(){
				// 		for(let iData in me.props.data){
	
				// 			let thisSeries = false;
	
				// 			me.chart.series.forEach(series => {if(series.name == iData){thisSeries = series}});
				// 			console.log('thisSeries');
				// 			console.log(thisSeries);
				// 			console.log(me.props.data[iData]);
				// 			if(!thisSeries){return;}
				// 			thisSeries.addPoint(
				// 				[(new Date()).getTime(), me.props.data[iData]] || 0, true, true
				// 			);
	
				// 		}
				// 	},
				// 	100
				// );
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				var _this2 = this;
	
				var _loop = function _loop(iData) {
	
					var thisSeries = false;
	
					_this2.chart.series.forEach(function (series) {
						if (series.name == iData) {
							thisSeries = series;
						}
					});
					// console.log('thisSeries');
					// console.log(thisSeries);
					// console.log(nextProps.data[iData]);
					thisSeries.addPoint([new Date().getTime(), nextProps.data[iData]] || 0, true, true);
				};
	
				// console.log("componentWillReceiveProps")
				// console.log(nextProps);
				for (var iData in nextProps.data) {
					_loop(iData);
				}
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement('span', { ref: 'chart' });
			}
		}]);
	
		return HighChart;
	}(_react2.default.Component);
	
	exports.default = HighChart;

/***/ },
/* 162 */
/*!************************************!*\
  !*** ../~/highcharts/highstock.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 Highstock JS v5.0.6 (2016-12-07)
	
	 (c) 2009-2016 Torstein Honsi
	
	 License: www.highcharts.com/license
	*/
	(function (K, a) {
	  "object" === ( false ? "undefined" : _typeof(module)) && module.exports ? module.exports = K.document ? a(K) : a : K.Highcharts = a(K);
	})("undefined" !== typeof window ? window : undefined, function (K) {
	  K = function () {
	    var a = window,
	        B = a.document,
	        C = a.navigator && a.navigator.userAgent || "",
	        E = B && B.createElementNS && !!B.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect,
	        F = /(edge|msie|trident)/i.test(C) && !window.opera,
	        v = !E,
	        l = /Firefox/.test(C),
	        q = l && 4 > parseInt(C.split("Firefox/")[1], 10);return a.Highcharts ? a.Highcharts.error(16, !0) : { product: "Highstock",
	      version: "5.0.6", deg2rad: 2 * Math.PI / 360, doc: B, hasBidiBug: q, hasTouch: B && void 0 !== B.documentElement.ontouchstart, isMS: F, isWebKit: /AppleWebKit/.test(C), isFirefox: l, isTouchDevice: /(Mobile|Android|Windows Phone)/.test(C), SVG_NS: "http://www.w3.org/2000/svg", chartCount: 0, seriesTypes: {}, symbolSizes: {}, svg: E, vml: v, win: a, charts: [], marginNames: ["plotTop", "marginRight", "marginBottom", "plotLeft"], noop: function noop() {} };
	  }();(function (a) {
	    var B = [],
	        C = a.charts,
	        E = a.doc,
	        F = a.win;a.error = function (v, l) {
	      v = a.isNumber(v) ? "Highcharts error #" + v + ": www.highcharts.com/errors/" + v : v;if (l) throw Error(v);F.console && console.log(v);
	    };a.Fx = function (a, l, q) {
	      this.options = l;this.elem = a;this.prop = q;
	    };a.Fx.prototype = { dSetter: function dSetter() {
	        var a = this.paths[0],
	            l = this.paths[1],
	            q = [],
	            x = this.now,
	            t = a.length,
	            n;if (1 === x) q = this.toD;else if (t === l.length && 1 > x) for (; t--;) {
	          n = parseFloat(a[t]), q[t] = isNaN(n) ? a[t] : x * parseFloat(l[t] - n) + n;
	        } else q = l;this.elem.attr("d", q, null, !0);
	      }, update: function update() {
	        var a = this.elem,
	            l = this.prop,
	            q = this.now,
	            x = this.options.step;if (this[l + "Setter"]) this[l + "Setter"]();else a.attr ? a.element && a.attr(l, q, null, !0) : a.style[l] = q + this.unit;x && x.call(a, q, this);
	      }, run: function run(a, l, q) {
	        var v = this,
	            t = function t(a) {
	          return t.stopped ? !1 : v.step(a);
	        },
	            n;this.startTime = +new Date();this.start = a;this.end = l;this.unit = q;this.now = this.start;this.pos = 0;t.elem = this.elem;t.prop = this.prop;t() && 1 === B.push(t) && (t.timerId = setInterval(function () {
	          for (n = 0; n < B.length; n++) {
	            B[n]() || B.splice(n--, 1);
	          }B.length || clearInterval(t.timerId);
	        }, 13));
	      }, step: function step(a) {
	        var l = +new Date(),
	            v,
	            x = this.options;v = this.elem;
	        var t = x.complete,
	            n = x.duration,
	            h = x.curAnim,
	            b;if (v.attr && !v.element) v = !1;else if (a || l >= n + this.startTime) {
	          this.now = this.end;this.pos = 1;this.update();a = h[this.prop] = !0;for (b in h) {
	            !0 !== h[b] && (a = !1);
	          }a && t && t.call(v);v = !1;
	        } else this.pos = x.easing((l - this.startTime) / n), this.now = this.start + (this.end - this.start) * this.pos, this.update(), v = !0;return v;
	      }, initPath: function initPath(v, l, q) {
	        function x(a) {
	          var e, f;for (d = a.length; d--;) {
	            e = "M" === a[d] || "L" === a[d], f = /[a-zA-Z]/.test(a[d + 3]), e && f && a.splice(d + 1, 0, a[d + 1], a[d + 2], a[d + 1], a[d + 2]);
	          }
	        }function t(a, e) {
	          for (; a.length < p;) {
	            a[0] = e[p - a.length];var f = a.slice(0, u);[].splice.apply(a, [0, 0].concat(f));r && (f = a.slice(a.length - u), [].splice.apply(a, [a.length, 0].concat(f)), d--);
	          }a[0] = "M";
	        }function n(a, e) {
	          for (var f = (p - a.length) / u; 0 < f && f--;) {
	            m = a.slice().splice(a.length / G - u, u * G), m[0] = e[p - u - f * u], A && (m[u - 6] = m[u - 2], m[u - 5] = m[u - 1]), [].splice.apply(a, [a.length / G, 0].concat(m)), r && f--;
	          }
	        }l = l || "";var h,
	            b = v.startX,
	            g = v.endX,
	            A = -1 < l.indexOf("C"),
	            u = A ? 7 : 3,
	            p,
	            m,
	            d;l = l.split(" ");q = q.slice();var r = v.isArea,
	            G = r ? 2 : 1,
	            f;
	        A && (x(l), x(q));if (b && g) {
	          for (d = 0; d < b.length; d++) {
	            if (b[d] === g[0]) {
	              h = d;break;
	            } else if (b[0] === g[g.length - b.length + d]) {
	              h = d;f = !0;break;
	            }
	          }void 0 === h && (l = []);
	        }l.length && a.isNumber(h) && (p = q.length + h * G * u, f ? (t(l, q), n(q, l)) : (t(q, l), n(l, q)));return [l, q];
	      } };a.extend = function (a, l) {
	      var v;a || (a = {});for (v in l) {
	        a[v] = l[v];
	      }return a;
	    };a.merge = function () {
	      var v,
	          l = arguments,
	          q,
	          x = {},
	          t = function t(n, h) {
	        var b, g;"object" !== (typeof n === "undefined" ? "undefined" : _typeof(n)) && (n = {});for (g in h) {
	          h.hasOwnProperty(g) && (b = h[g], a.isObject(b, !0) && "renderTo" !== g && "number" !== typeof b.nodeType ? n[g] = t(n[g] || {}, b) : n[g] = h[g]);
	        }return n;
	      };!0 === l[0] && (x = l[1], l = Array.prototype.slice.call(l, 2));q = l.length;for (v = 0; v < q; v++) {
	        x = t(x, l[v]);
	      }return x;
	    };a.pInt = function (a, l) {
	      return parseInt(a, l || 10);
	    };a.isString = function (a) {
	      return "string" === typeof a;
	    };a.isArray = function (a) {
	      a = Object.prototype.toString.call(a);return "[object Array]" === a || "[object Array Iterator]" === a;
	    };a.isObject = function (v, l) {
	      return v && "object" === (typeof v === "undefined" ? "undefined" : _typeof(v)) && (!l || !a.isArray(v));
	    };a.isNumber = function (a) {
	      return "number" === typeof a && !isNaN(a);
	    };a.erase = function (a, l) {
	      for (var v = a.length; v--;) {
	        if (a[v] === l) {
	          a.splice(v, 1);break;
	        }
	      }
	    };a.defined = function (a) {
	      return void 0 !== a && null !== a;
	    };a.attr = function (v, l, q) {
	      var x, t;if (a.isString(l)) a.defined(q) ? v.setAttribute(l, q) : v && v.getAttribute && (t = v.getAttribute(l));else if (a.defined(l) && a.isObject(l)) for (x in l) {
	        v.setAttribute(x, l[x]);
	      }return t;
	    };a.splat = function (v) {
	      return a.isArray(v) ? v : [v];
	    };a.syncTimeout = function (a, l, q) {
	      if (l) return setTimeout(a, l, q);a.call(0, q);
	    };a.pick = function () {
	      var a = arguments,
	          l,
	          q,
	          x = a.length;for (l = 0; l < x; l++) {
	        if (q = a[l], void 0 !== q && null !== q) return q;
	      }
	    };a.css = function (v, l) {
	      a.isMS && !a.svg && l && void 0 !== l.opacity && (l.filter = "alpha(opacity\x3d" + 100 * l.opacity + ")");a.extend(v.style, l);
	    };a.createElement = function (v, l, q, x, t) {
	      v = E.createElement(v);var n = a.css;l && a.extend(v, l);t && n(v, { padding: 0, border: "none", margin: 0 });q && n(v, q);x && x.appendChild(v);return v;
	    };a.extendClass = function (v, l) {
	      var q = function q() {};q.prototype = new v();a.extend(q.prototype, l);return q;
	    };a.pad = function (a, l, q) {
	      return Array((l || 2) + 1 - String(a).length).join(q || 0) + a;
	    };a.relativeLength = function (a, l) {
	      return (/%$/.test(a) ? l * parseFloat(a) / 100 : parseFloat(a)
	      );
	    };a.wrap = function (a, l, q) {
	      var v = a[l];a[l] = function () {
	        var a = Array.prototype.slice.call(arguments),
	            n = arguments,
	            h = this;h.proceed = function () {
	          v.apply(h, arguments.length ? arguments : n);
	        };a.unshift(v);a = q.apply(this, a);h.proceed = null;return a;
	      };
	    };a.getTZOffset = function (v) {
	      var l = a.Date;return 6E4 * (l.hcGetTimezoneOffset && l.hcGetTimezoneOffset(v) || l.hcTimezoneOffset || 0);
	    };a.dateFormat = function (v, l, q) {
	      if (!a.defined(l) || isNaN(l)) return a.defaultOptions.lang.invalidDate || "";v = a.pick(v, "%Y-%m-%d %H:%M:%S");var x = a.Date,
	          t = new x(l - a.getTZOffset(l)),
	          n,
	          h = t[x.hcGetHours](),
	          b = t[x.hcGetDay](),
	          g = t[x.hcGetDate](),
	          A = t[x.hcGetMonth](),
	          u = t[x.hcGetFullYear](),
	          p = a.defaultOptions.lang,
	          m = p.weekdays,
	          d = p.shortWeekdays,
	          r = a.pad,
	          x = a.extend({ a: d ? d[b] : m[b].substr(0, 3), A: m[b], d: r(g), e: r(g, 2, " "), w: b, b: p.shortMonths[A], B: p.months[A], m: r(A + 1), y: u.toString().substr(2, 2), Y: u, H: r(h), k: h, I: r(h % 12 || 12), l: h % 12 || 12, M: r(t[x.hcGetMinutes]()), p: 12 > h ? "AM" : "PM", P: 12 > h ? "am" : "pm", S: r(t.getSeconds()), L: r(Math.round(l % 1E3), 3) }, a.dateFormats);for (n in x) {
	        for (; -1 !== v.indexOf("%" + n);) {
	          v = v.replace("%" + n, "function" === typeof x[n] ? x[n](l) : x[n]);
	        }
	      }return q ? v.substr(0, 1).toUpperCase() + v.substr(1) : v;
	    };a.formatSingle = function (v, l) {
	      var q = /\.([0-9])/,
	          x = a.defaultOptions.lang;/f$/.test(v) ? (q = (q = v.match(q)) ? q[1] : -1, null !== l && (l = a.numberFormat(l, q, x.decimalPoint, -1 < v.indexOf(",") ? x.thousandsSep : ""))) : l = a.dateFormat(v, l);return l;
	    };a.format = function (v, l) {
	      for (var q = "{", x = !1, t, n, h, b, g = [], A; v;) {
	        q = v.indexOf(q);if (-1 === q) break;t = v.slice(0, q);if (x) {
	          t = t.split(":");n = t.shift().split(".");b = n.length;A = l;for (h = 0; h < b; h++) {
	            A = A[n[h]];
	          }t.length && (A = a.formatSingle(t.join(":"), A));g.push(A);
	        } else g.push(t);v = v.slice(q + 1);q = (x = !x) ? "}" : "{";
	      }g.push(v);return g.join("");
	    };a.getMagnitude = function (a) {
	      return Math.pow(10, Math.floor(Math.log(a) / Math.LN10));
	    };a.normalizeTickInterval = function (v, l, q, x, t) {
	      var n,
	          h = v;q = a.pick(q, 1);n = v / q;l || (l = t ? [1, 1.2, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10] : [1, 2, 2.5, 5, 10], !1 === x && (1 === q ? l = a.grep(l, function (a) {
	        return 0 === a % 1;
	      }) : .1 >= q && (l = [1 / q])));
	      for (x = 0; x < l.length && !(h = l[x], t && h * q >= v || !t && n <= (l[x] + (l[x + 1] || l[x])) / 2); x++) {}return h * q;
	    };a.stableSort = function (a, l) {
	      var q = a.length,
	          v,
	          t;for (t = 0; t < q; t++) {
	        a[t].safeI = t;
	      }a.sort(function (a, h) {
	        v = l(a, h);return 0 === v ? a.safeI - h.safeI : v;
	      });for (t = 0; t < q; t++) {
	        delete a[t].safeI;
	      }
	    };a.arrayMin = function (a) {
	      for (var l = a.length, q = a[0]; l--;) {
	        a[l] < q && (q = a[l]);
	      }return q;
	    };a.arrayMax = function (a) {
	      for (var l = a.length, q = a[0]; l--;) {
	        a[l] > q && (q = a[l]);
	      }return q;
	    };a.destroyObjectProperties = function (a, l) {
	      for (var q in a) {
	        a[q] && a[q] !== l && a[q].destroy && a[q].destroy(), delete a[q];
	      }
	    };a.discardElement = function (v) {
	      var l = a.garbageBin;l || (l = a.createElement("div"));v && l.appendChild(v);l.innerHTML = "";
	    };a.correctFloat = function (a, l) {
	      return parseFloat(a.toPrecision(l || 14));
	    };a.setAnimation = function (v, l) {
	      l.renderer.globalAnimation = a.pick(v, l.options.chart.animation, !0);
	    };a.animObject = function (v) {
	      return a.isObject(v) ? a.merge(v) : { duration: v ? 500 : 0 };
	    };a.timeUnits = { millisecond: 1, second: 1E3, minute: 6E4, hour: 36E5, day: 864E5, week: 6048E5, month: 24192E5, year: 314496E5 };a.numberFormat = function (v, l, q, x) {
	      v = +v || 0;l = +l;var t = a.defaultOptions.lang,
	          n = (v.toString().split(".")[1] || "").length,
	          h,
	          b,
	          g = Math.abs(v);-1 === l ? l = Math.min(n, 20) : a.isNumber(l) || (l = 2);h = String(a.pInt(g.toFixed(l)));b = 3 < h.length ? h.length % 3 : 0;q = a.pick(q, t.decimalPoint);x = a.pick(x, t.thousandsSep);v = (0 > v ? "-" : "") + (b ? h.substr(0, b) + x : "");v += h.substr(b).replace(/(\d{3})(?=\d)/g, "$1" + x);l && (x = Math.abs(g - h + Math.pow(10, -Math.max(l, n) - 1)), v += q + x.toFixed(l).slice(2));return v;
	    };Math.easeInOutSine = function (a) {
	      return -.5 * (Math.cos(Math.PI * a) - 1);
	    };a.getStyle = function (v, l) {
	      return "width" === l ? Math.min(v.offsetWidth, v.scrollWidth) - a.getStyle(v, "padding-left") - a.getStyle(v, "padding-right") : "height" === l ? Math.min(v.offsetHeight, v.scrollHeight) - a.getStyle(v, "padding-top") - a.getStyle(v, "padding-bottom") : (v = F.getComputedStyle(v, void 0)) && a.pInt(v.getPropertyValue(l));
	    };a.inArray = function (a, l) {
	      return l.indexOf ? l.indexOf(a) : [].indexOf.call(l, a);
	    };a.grep = function (a, l) {
	      return [].filter.call(a, l);
	    };a.find = function (a, l) {
	      return [].find.call(a, l);
	    };a.map = function (a, l) {
	      for (var q = [], x = 0, t = a.length; x < t; x++) {
	        q[x] = l.call(a[x], a[x], x, a);
	      }return q;
	    };a.offset = function (a) {
	      var l = E.documentElement;a = a.getBoundingClientRect();return { top: a.top + (F.pageYOffset || l.scrollTop) - (l.clientTop || 0), left: a.left + (F.pageXOffset || l.scrollLeft) - (l.clientLeft || 0) };
	    };a.stop = function (a, l) {
	      for (var q = B.length; q--;) {
	        B[q].elem !== a || l && l !== B[q].prop || (B[q].stopped = !0);
	      }
	    };a.each = function (a, l, q) {
	      return Array.prototype.forEach.call(a, l, q);
	    };a.addEvent = function (v, l, q) {
	      function x(a) {
	        a.target = a.srcElement || F;q.call(v, a);
	      }var t = v.hcEvents = v.hcEvents || {};v.addEventListener ? v.addEventListener(l, q, !1) : v.attachEvent && (v.hcEventsIE || (v.hcEventsIE = {}), v.hcEventsIE[q.toString()] = x, v.attachEvent("on" + l, x));t[l] || (t[l] = []);t[l].push(q);return function () {
	        a.removeEvent(v, l, q);
	      };
	    };a.removeEvent = function (v, l, q) {
	      function x(a, b) {
	        v.removeEventListener ? v.removeEventListener(a, b, !1) : v.attachEvent && (b = v.hcEventsIE[b.toString()], v.detachEvent("on" + a, b));
	      }function t() {
	        var a, b;if (v.nodeName) for (b in l ? (a = {}, a[l] = !0) : a = h, a) {
	          if (h[b]) for (a = h[b].length; a--;) {
	            x(b, h[b][a]);
	          }
	        }
	      }var n,
	          h = v.hcEvents,
	          b;h && (l ? (n = h[l] || [], q ? (b = a.inArray(q, n), -1 < b && (n.splice(b, 1), h[l] = n), x(l, q)) : (t(), h[l] = [])) : (t(), v.hcEvents = {}));
	    };a.fireEvent = function (v, l, q, x) {
	      var t;t = v.hcEvents;var n, h;q = q || {};if (E.createEvent && (v.dispatchEvent || v.fireEvent)) t = E.createEvent("Events"), t.initEvent(l, !0, !0), a.extend(t, q), v.dispatchEvent ? v.dispatchEvent(t) : v.fireEvent(l, t);else if (t) for (t = t[l] || [], n = t.length, q.target || a.extend(q, { preventDefault: function preventDefault() {
	          q.defaultPrevented = !0;
	        }, target: v,
	        type: l }), l = 0; l < n; l++) {
	        (h = t[l]) && !1 === h.call(v, q) && q.preventDefault();
	      }x && !q.defaultPrevented && x(q);
	    };a.animate = function (v, l, q) {
	      var x,
	          t = "",
	          n,
	          h,
	          b;a.isObject(q) || (x = arguments, q = { duration: x[2], easing: x[3], complete: x[4] });a.isNumber(q.duration) || (q.duration = 400);q.easing = "function" === typeof q.easing ? q.easing : Math[q.easing] || Math.easeInOutSine;q.curAnim = a.merge(l);for (b in l) {
	        a.stop(v, b), h = new a.Fx(v, q, b), n = null, "d" === b ? (h.paths = h.initPath(v, v.d, l.d), h.toD = l.d, x = 0, n = 1) : v.attr ? x = v.attr(b) : (x = parseFloat(a.getStyle(v, b)) || 0, "opacity" !== b && (t = "px")), n || (n = l[b]), n.match && n.match("px") && (n = n.replace(/px/g, "")), h.run(x, n, t);
	      }
	    };a.seriesType = function (v, l, q, x, t) {
	      var n = a.getOptions(),
	          h = a.seriesTypes;n.plotOptions[v] = a.merge(n.plotOptions[l], q);h[v] = a.extendClass(h[l] || function () {}, x);h[v].prototype.type = v;t && (h[v].prototype.pointClass = a.extendClass(a.Point, t));return h[v];
	    };a.uniqueKey = function () {
	      var a = Math.random().toString(36).substring(2, 9),
	          l = 0;return function () {
	        return "highcharts-" + a + "-" + l++;
	      };
	    }();F.jQuery && (F.jQuery.fn.highcharts = function () {
	      var v = [].slice.call(arguments);if (this[0]) return v[0] ? (new a[a.isString(v[0]) ? v.shift() : "Chart"](this[0], v[0], v[1]), this) : C[a.attr(this[0], "data-highcharts-chart")];
	    });E && !E.defaultView && (a.getStyle = function (v, l) {
	      var q = { width: "clientWidth", height: "clientHeight" }[l];if (v.style[l]) return a.pInt(v.style[l]);"opacity" === l && (l = "filter");if (q) return v.style.zoom = 1, Math.max(v[q] - 2 * a.getStyle(v, "padding"), 0);v = v.currentStyle[l.replace(/\-(\w)/g, function (a, t) {
	        return t.toUpperCase();
	      })];"filter" === l && (v = v.replace(/alpha\(opacity=([0-9]+)\)/, function (a, t) {
	        return t / 100;
	      }));return "" === v ? 1 : a.pInt(v);
	    });Array.prototype.forEach || (a.each = function (a, l, q) {
	      for (var x = 0, t = a.length; x < t; x++) {
	        if (!1 === l.call(q, a[x], x, a)) return x;
	      }
	    });Array.prototype.indexOf || (a.inArray = function (a, l) {
	      var q,
	          x = 0;if (l) for (q = l.length; x < q; x++) {
	        if (l[x] === a) return x;
	      }return -1;
	    });Array.prototype.filter || (a.grep = function (a, l) {
	      for (var q = [], x = 0, t = a.length; x < t; x++) {
	        l(a[x], x) && q.push(a[x]);
	      }return q;
	    });Array.prototype.find || (a.find = function (a, l) {
	      var q,
	          x = a.length;for (q = 0; q < x; q++) {
	        if (l(a[q], q)) return a[q];
	      }
	    });
	  })(K);(function (a) {
	    var B = a.each,
	        C = a.isNumber,
	        E = a.map,
	        F = a.merge,
	        v = a.pInt;a.Color = function (l) {
	      if (!(this instanceof a.Color)) return new a.Color(l);this.init(l);
	    };a.Color.prototype = { parsers: [{ regex: /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/, parse: function parse(a) {
	          return [v(a[1]), v(a[2]), v(a[3]), parseFloat(a[4], 10)];
	        } }, { regex: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/, parse: function parse(a) {
	          return [v(a[1], 16), v(a[2], 16), v(a[3], 16), 1];
	        } }, { regex: /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/, parse: function parse(a) {
	          return [v(a[1]), v(a[2]), v(a[3]), 1];
	        } }], names: { white: "#ffffff", black: "#000000" }, init: function init(l) {
	        var q, x, t, n;if ((this.input = l = this.names[l] || l) && l.stops) this.stops = E(l.stops, function (h) {
	          return new a.Color(h[1]);
	        });else for (t = this.parsers.length; t-- && !x;) {
	          n = this.parsers[t], (q = n.regex.exec(l)) && (x = n.parse(q));
	        }this.rgba = x || [];
	      }, get: function get(a) {
	        var l = this.input,
	            x = this.rgba,
	            t;this.stops ? (t = F(l), t.stops = [].concat(t.stops), B(this.stops, function (n, h) {
	          t.stops[h] = [t.stops[h][0], n.get(a)];
	        })) : t = x && C(x[0]) ? "rgb" === a || !a && 1 === x[3] ? "rgb(" + x[0] + "," + x[1] + "," + x[2] + ")" : "a" === a ? x[3] : "rgba(" + x.join(",") + ")" : l;return t;
	      }, brighten: function brighten(a) {
	        var l,
	            x = this.rgba;if (this.stops) B(this.stops, function (t) {
	          t.brighten(a);
	        });else if (C(a) && 0 !== a) for (l = 0; 3 > l; l++) {
	          x[l] += v(255 * a), 0 > x[l] && (x[l] = 0), 255 < x[l] && (x[l] = 255);
	        }return this;
	      }, setOpacity: function setOpacity(a) {
	        this.rgba[3] = a;return this;
	      } };a.color = function (l) {
	      return new a.Color(l);
	    };
	  })(K);
	  (function (a) {
	    var B,
	        C,
	        E = a.addEvent,
	        F = a.animate,
	        v = a.attr,
	        l = a.charts,
	        q = a.color,
	        x = a.css,
	        t = a.createElement,
	        n = a.defined,
	        h = a.deg2rad,
	        b = a.destroyObjectProperties,
	        g = a.doc,
	        A = a.each,
	        u = a.extend,
	        p = a.erase,
	        m = a.grep,
	        d = a.hasTouch,
	        r = a.isArray,
	        G = a.isFirefox,
	        f = a.isMS,
	        z = a.isObject,
	        e = a.isString,
	        y = a.isWebKit,
	        c = a.merge,
	        w = a.noop,
	        D = a.pick,
	        I = a.pInt,
	        L = a.removeEvent,
	        k = a.stop,
	        H = a.svg,
	        R = a.SVG_NS,
	        M = a.symbolSizes,
	        O = a.win;B = a.SVGElement = function () {
	      return this;
	    };B.prototype = { opacity: 1, SVG_NS: R, textProps: "direction fontSize fontWeight fontFamily fontStyle color lineHeight width textDecoration textOverflow textOutline".split(" "),
	      init: function init(a, k) {
	        this.element = "span" === k ? t(k) : g.createElementNS(this.SVG_NS, k);this.renderer = a;
	      }, animate: function animate(k, c, e) {
	        c = a.animObject(D(c, this.renderer.globalAnimation, !0));0 !== c.duration ? (e && (c.complete = e), F(this, k, c)) : this.attr(k, null, e);return this;
	      }, colorGradient: function colorGradient(k, J, e) {
	        var f = this.renderer,
	            N,
	            b,
	            w,
	            d,
	            m,
	            H,
	            D,
	            z,
	            p,
	            y,
	            u,
	            g = [],
	            h;k.linearGradient ? b = "linearGradient" : k.radialGradient && (b = "radialGradient");if (b) {
	          w = k[b];m = f.gradients;D = k.stops;y = e.radialReference;r(w) && (k[b] = w = { x1: w[0], y1: w[1], x2: w[2],
	            y2: w[3], gradientUnits: "userSpaceOnUse" });"radialGradient" === b && y && !n(w.gradientUnits) && (d = w, w = c(w, f.getRadialAttr(y, d), { gradientUnits: "userSpaceOnUse" }));for (u in w) {
	            "id" !== u && g.push(u, w[u]);
	          }for (u in D) {
	            g.push(D[u]);
	          }g = g.join(",");m[g] ? y = m[g].attr("id") : (w.id = y = a.uniqueKey(), m[g] = H = f.createElement(b).attr(w).add(f.defs), H.radAttr = d, H.stops = [], A(D, function (k) {
	            0 === k[1].indexOf("rgba") ? (N = a.color(k[1]), z = N.get("rgb"), p = N.get("a")) : (z = k[1], p = 1);k = f.createElement("stop").attr({ offset: k[0], "stop-color": z,
	              "stop-opacity": p }).add(H);H.stops.push(k);
	          }));h = "url(" + f.url + "#" + y + ")";e.setAttribute(J, h);e.gradient = g;k.toString = function () {
	            return h;
	          };
	        }
	      }, applyTextOutline: function applyTextOutline(a) {
	        var k = this.element,
	            c,
	            e,
	            f,
	            b;-1 !== a.indexOf("contrast") && (a = a.replace(/contrast/g, this.renderer.getContrast(k.style.fill)));this.fakeTS = !0;this.ySetter = this.xSetter;c = [].slice.call(k.getElementsByTagName("tspan"));a = a.split(" ");e = a[a.length - 1];(f = a[0]) && "none" !== f && (f = f.replace(/(^[\d\.]+)(.*?)$/g, function (a, k, c) {
	          return 2 * k + c;
	        }), A(c, function (a) {
	          "highcharts-text-outline" === a.getAttribute("class") && p(c, k.removeChild(a));
	        }), b = k.firstChild, A(c, function (a, c) {
	          0 === c && (a.setAttribute("x", k.getAttribute("x")), c = k.getAttribute("y"), a.setAttribute("y", c || 0), null === c && k.setAttribute("y", 0));a = a.cloneNode(1);v(a, { "class": "highcharts-text-outline", fill: e, stroke: e, "stroke-width": f, "stroke-linejoin": "round" });k.insertBefore(a, b);
	        }));
	      }, attr: function attr(a, c, e, f) {
	        var J,
	            b = this.element,
	            w,
	            N = this,
	            d;"string" === typeof a && void 0 !== c && (J = a, a = {}, a[J] = c);if ("string" === typeof a) N = (this[a + "Getter"] || this._defaultGetter).call(this, a, b);else {
	          for (J in a) {
	            c = a[J], d = !1, f || k(this, J), this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(J) && (w || (this.symbolAttr(a), w = !0), d = !0), !this.rotation || "x" !== J && "y" !== J || (this.doTransform = !0), d || (d = this[J + "Setter"] || this._defaultSetter, d.call(this, c, J, b), this.shadows && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(J) && this.updateShadows(J, c, d));
	          }this.doTransform && (this.updateTransform(), this.doTransform = !1);
	        }e && e();return N;
	      }, updateShadows: function updateShadows(a, k, c) {
	        for (var e = this.shadows, f = e.length; f--;) {
	          c.call(e[f], "height" === a ? Math.max(k - (e[f].cutHeight || 0), 0) : "d" === a ? this.d : k, a, e[f]);
	        }
	      }, addClass: function addClass(a, k) {
	        var c = this.attr("class") || "";-1 === c.indexOf(a) && (k || (a = (c + (c ? " " : "") + a).replace("  ", " ")), this.attr("class", a));return this;
	      }, hasClass: function hasClass(a) {
	        return -1 !== v(this.element, "class").indexOf(a);
	      }, removeClass: function removeClass(a) {
	        v(this.element, "class", (v(this.element, "class") || "").replace(a, ""));return this;
	      }, symbolAttr: function symbolAttr(a) {
	        var k = this;A("x y r start end width height innerR anchorX anchorY".split(" "), function (c) {
	          k[c] = D(a[c], k[c]);
	        });k.attr({ d: k.renderer.symbols[k.symbolName](k.x, k.y, k.width, k.height, k) });
	      }, clip: function clip(a) {
	        return this.attr("clip-path", a ? "url(" + this.renderer.url + "#" + a.id + ")" : "none");
	      }, crisp: function crisp(a, k) {
	        var c,
	            e = {},
	            f;k = k || a.strokeWidth || 0;f = Math.round(k) % 2 / 2;a.x = Math.floor(a.x || this.x || 0) + f;a.y = Math.floor(a.y || this.y || 0) + f;a.width = Math.floor((a.width || this.width || 0) - 2 * f);a.height = Math.floor((a.height || this.height || 0) - 2 * f);n(a.strokeWidth) && (a.strokeWidth = k);for (c in a) {
	          this[c] !== a[c] && (this[c] = e[c] = a[c]);
	        }return e;
	      }, css: function css(a) {
	        var k = this.styles,
	            c = {},
	            e = this.element,
	            b,
	            w,
	            d = "";b = !k;a && a.color && (a.fill = a.color);if (k) for (w in a) {
	          a[w] !== k[w] && (c[w] = a[w], b = !0);
	        }if (b) {
	          b = this.textWidth = a && a.width && "text" === e.nodeName.toLowerCase() && I(a.width) || this.textWidth;k && (a = u(k, c));this.styles = a;b && !H && this.renderer.forExport && delete a.width;if (f && !H) x(this.element, a);else {
	            k = function k(a, _k) {
	              return "-" + _k.toLowerCase();
	            };for (w in a) {
	              d += w.replace(/([A-Z])/g, k) + ":" + a[w] + ";";
	            }v(e, "style", d);
	          }this.added && (b && this.renderer.buildText(this), a && a.textOutline && this.applyTextOutline(a.textOutline));
	        }return this;
	      }, strokeWidth: function strokeWidth() {
	        return this["stroke-width"] || 0;
	      }, on: function on(a, k) {
	        var c = this,
	            e = c.element;d && "click" === a ? (e.ontouchstart = function (a) {
	          c.touchEventFired = Date.now();a.preventDefault();k.call(e, a);
	        }, e.onclick = function (a) {
	          (-1 === O.navigator.userAgent.indexOf("Android") || 1100 < Date.now() - (c.touchEventFired || 0)) && k.call(e, a);
	        }) : e["on" + a] = k;return this;
	      }, setRadialReference: function setRadialReference(a) {
	        var k = this.renderer.gradients[this.element.gradient];
	        this.element.radialReference = a;k && k.radAttr && k.animate(this.renderer.getRadialAttr(a, k.radAttr));return this;
	      }, translate: function translate(a, k) {
	        return this.attr({ translateX: a, translateY: k });
	      }, invert: function invert(a) {
	        this.inverted = a;this.updateTransform();return this;
	      }, updateTransform: function updateTransform() {
	        var a = this.translateX || 0,
	            k = this.translateY || 0,
	            c = this.scaleX,
	            e = this.scaleY,
	            f = this.inverted,
	            b = this.rotation,
	            w = this.element;f && (a += this.attr("width"), k += this.attr("height"));a = ["translate(" + a + "," + k + ")"];f ? a.push("rotate(90) scale(-1,1)") : b && a.push("rotate(" + b + " " + (w.getAttribute("x") || 0) + " " + (w.getAttribute("y") || 0) + ")");(n(c) || n(e)) && a.push("scale(" + D(c, 1) + " " + D(e, 1) + ")");a.length && w.setAttribute("transform", a.join(" "));
	      }, toFront: function toFront() {
	        var a = this.element;a.parentNode.appendChild(a);return this;
	      }, align: function align(a, k, c) {
	        var f,
	            b,
	            w,
	            d,
	            J = {};b = this.renderer;w = b.alignedObjects;var m, H;if (a) {
	          if (this.alignOptions = a, this.alignByTranslate = k, !c || e(c)) this.alignTo = f = c || "renderer", p(w, this), w.push(this), c = null;
	        } else a = this.alignOptions, k = this.alignByTranslate, f = this.alignTo;c = D(c, b[f], b);f = a.align;b = a.verticalAlign;w = (c.x || 0) + (a.x || 0);d = (c.y || 0) + (a.y || 0);"right" === f ? m = 1 : "center" === f && (m = 2);m && (w += (c.width - (a.width || 0)) / m);J[k ? "translateX" : "x"] = Math.round(w);"bottom" === b ? H = 1 : "middle" === b && (H = 2);H && (d += (c.height - (a.height || 0)) / H);J[k ? "translateY" : "y"] = Math.round(d);this[this.placed ? "animate" : "attr"](J);this.placed = !0;this.alignAttr = J;return this;
	      }, getBBox: function getBBox(a, k) {
	        var c,
	            e = this.renderer,
	            b,
	            w = this.element,
	            d = this.styles,
	            J,
	            m = this.textStr,
	            H,
	            z = e.cache,
	            r = e.cacheKeys,
	            p;k = D(k, this.rotation);b = k * h;J = d && d.fontSize;void 0 !== m && (p = m.toString(), -1 === p.indexOf("\x3c") && (p = p.replace(/[0-9]/g, "0")), p += ["", k || 0, J, w.style.width, w.style["text-overflow"]].join());p && !a && (c = z[p]);if (!c) {
	          if (w.namespaceURI === this.SVG_NS || e.forExport) {
	            try {
	              (H = this.fakeTS && function (a) {
	                A(w.querySelectorAll(".highcharts-text-outline"), function (k) {
	                  k.style.display = a;
	                });
	              }) && H("none"), c = w.getBBox ? u({}, w.getBBox()) : { width: w.offsetWidth, height: w.offsetHeight }, H && H("");
	            } catch (W) {}if (!c || 0 > c.width) c = { width: 0,
	              height: 0 };
	          } else c = this.htmlGetBBox();e.isSVG && (a = c.width, e = c.height, f && d && "11px" === d.fontSize && "16.9" === e.toPrecision(3) && (c.height = e = 14), k && (c.width = Math.abs(e * Math.sin(b)) + Math.abs(a * Math.cos(b)), c.height = Math.abs(e * Math.cos(b)) + Math.abs(a * Math.sin(b))));if (p && 0 < c.height) {
	            for (; 250 < r.length;) {
	              delete z[r.shift()];
	            }z[p] || r.push(p);z[p] = c;
	          }
	        }return c;
	      }, show: function show(a) {
	        return this.attr({ visibility: a ? "inherit" : "visible" });
	      }, hide: function hide() {
	        return this.attr({ visibility: "hidden" });
	      }, fadeOut: function fadeOut(a) {
	        var k = this;k.animate({ opacity: 0 }, { duration: a || 150, complete: function complete() {
	            k.attr({ y: -9999 });
	          } });
	      }, add: function add(a) {
	        var k = this.renderer,
	            c = this.element,
	            e;a && (this.parentGroup = a);this.parentInverted = a && a.inverted;void 0 !== this.textStr && k.buildText(this);this.added = !0;if (!a || a.handleZ || this.zIndex) e = this.zIndexSetter();e || (a ? a.element : k.box).appendChild(c);if (this.onAdd) this.onAdd();return this;
	      }, safeRemoveChild: function safeRemoveChild(a) {
	        var k = a.parentNode;k && k.removeChild(a);
	      }, destroy: function destroy() {
	        var a = this.element || {},
	            c = this.renderer.isSVG && "SPAN" === a.nodeName && this.parentGroup,
	            e,
	            f;a.onclick = a.onmouseout = a.onmouseover = a.onmousemove = a.point = null;k(this);this.clipPath && (this.clipPath = this.clipPath.destroy());if (this.stops) {
	          for (f = 0; f < this.stops.length; f++) {
	            this.stops[f] = this.stops[f].destroy();
	          }this.stops = null;
	        }this.safeRemoveChild(a);for (this.destroyShadows(); c && c.div && 0 === c.div.childNodes.length;) {
	          a = c.parentGroup, this.safeRemoveChild(c.div), delete c.div, c = a;
	        }this.alignTo && p(this.renderer.alignedObjects, this);for (e in this) {
	          delete this[e];
	        }return null;
	      },
	      shadow: function shadow(a, k, c) {
	        var e = [],
	            f,
	            b,
	            w = this.element,
	            d,
	            m,
	            H,
	            J;if (!a) this.destroyShadows();else if (!this.shadows) {
	          m = D(a.width, 3);H = (a.opacity || .15) / m;J = this.parentInverted ? "(-1,-1)" : "(" + D(a.offsetX, 1) + ", " + D(a.offsetY, 1) + ")";for (f = 1; f <= m; f++) {
	            b = w.cloneNode(0), d = 2 * m + 1 - 2 * f, v(b, { isShadow: "true", stroke: a.color || "#000000", "stroke-opacity": H * f, "stroke-width": d, transform: "translate" + J, fill: "none" }), c && (v(b, "height", Math.max(v(b, "height") - d, 0)), b.cutHeight = d), k ? k.element.appendChild(b) : w.parentNode.insertBefore(b, w), e.push(b);
	          }this.shadows = e;
	        }return this;
	      }, destroyShadows: function destroyShadows() {
	        A(this.shadows || [], function (a) {
	          this.safeRemoveChild(a);
	        }, this);this.shadows = void 0;
	      }, xGetter: function xGetter(a) {
	        "circle" === this.element.nodeName && ("x" === a ? a = "cx" : "y" === a && (a = "cy"));return this._defaultGetter(a);
	      }, _defaultGetter: function _defaultGetter(a) {
	        a = D(this[a], this.element ? this.element.getAttribute(a) : null, 0);/^[\-0-9\.]+$/.test(a) && (a = parseFloat(a));return a;
	      }, dSetter: function dSetter(a, k, c) {
	        a && a.join && (a = a.join(" "));/(NaN| {2}|^$)/.test(a) && (a = "M 0 0");c.setAttribute(k, a);this[k] = a;
	      }, dashstyleSetter: function dashstyleSetter(a) {
	        var k,
	            c = this["stroke-width"];"inherit" === c && (c = 1);if (a = a && a.toLowerCase()) {
	          a = a.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").split(",");for (k = a.length; k--;) {
	            a[k] = I(a[k]) * c;
	          }a = a.join(",").replace(/NaN/g, "none");this.element.setAttribute("stroke-dasharray", a);
	        }
	      }, alignSetter: function alignSetter(a) {
	        this.element.setAttribute("text-anchor", { left: "start", center: "middle", right: "end" }[a]);
	      }, opacitySetter: function opacitySetter(a, k, c) {
	        this[k] = a;c.setAttribute(k, a);
	      }, titleSetter: function titleSetter(a) {
	        var k = this.element.getElementsByTagName("title")[0];k || (k = g.createElementNS(this.SVG_NS, "title"), this.element.appendChild(k));k.firstChild && k.removeChild(k.firstChild);k.appendChild(g.createTextNode(String(D(a), "").replace(/<[^>]*>/g, "")));
	      }, textSetter: function textSetter(a) {
	        a !== this.textStr && (delete this.bBox, this.textStr = a, this.added && this.renderer.buildText(this));
	      }, fillSetter: function fillSetter(a, k, c) {
	        "string" === typeof a ? c.setAttribute(k, a) : a && this.colorGradient(a, k, c);
	      }, visibilitySetter: function visibilitySetter(a, k, c) {
	        "inherit" === a ? c.removeAttribute(k) : c.setAttribute(k, a);
	      }, zIndexSetter: function zIndexSetter(a, k) {
	        var c = this.renderer,
	            e = this.parentGroup,
	            f = (e || c).element || c.box,
	            b,
	            w = this.element,
	            d;b = this.added;var m;n(a) && (w.zIndex = a, a = +a, this[k] === a && (b = !1), this[k] = a);if (b) {
	          (a = this.zIndex) && e && (e.handleZ = !0);k = f.childNodes;for (m = 0; m < k.length && !d; m++) {
	            e = k[m], b = e.zIndex, e !== w && (I(b) > a || !n(a) && n(b) || 0 > a && !n(b) && f !== c.box) && (f.insertBefore(w, e), d = !0);
	          }d || f.appendChild(w);
	        }return d;
	      }, _defaultSetter: function _defaultSetter(a, k, c) {
	        c.setAttribute(k, a);
	      } };B.prototype.yGetter = B.prototype.xGetter;B.prototype.translateXSetter = B.prototype.translateYSetter = B.prototype.rotationSetter = B.prototype.verticalAlignSetter = B.prototype.scaleXSetter = B.prototype.scaleYSetter = function (a, k) {
	      this[k] = a;this.doTransform = !0;
	    };B.prototype["stroke-widthSetter"] = B.prototype.strokeSetter = function (a, k, c) {
	      this[k] = a;this.stroke && this["stroke-width"] ? (B.prototype.fillSetter.call(this, this.stroke, "stroke", c), c.setAttribute("stroke-width", this["stroke-width"]), this.hasStroke = !0) : "stroke-width" === k && 0 === a && this.hasStroke && (c.removeAttribute("stroke"), this.hasStroke = !1);
	    };C = a.SVGRenderer = function () {
	      this.init.apply(this, arguments);
	    };C.prototype = { Element: B, SVG_NS: R, init: function init(a, k, c, e, f, b) {
	        var w;e = this.createElement("svg").attr({ version: "1.1", "class": "highcharts-root" }).css(this.getStyle(e));w = e.element;a.appendChild(w);-1 === a.innerHTML.indexOf("xmlns") && v(w, "xmlns", this.SVG_NS);this.isSVG = !0;
	        this.box = w;this.boxWrapper = e;this.alignedObjects = [];this.url = (G || y) && g.getElementsByTagName("base").length ? O.location.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "";this.createElement("desc").add().element.appendChild(g.createTextNode("Created with Highstock 5.0.6"));this.defs = this.createElement("defs").add();this.allowHTML = b;this.forExport = f;this.gradients = {};this.cache = {};this.cacheKeys = [];this.imgCount = 0;this.setSize(k, c, !1);var d;G && a.getBoundingClientRect && (k = function k() {
	          x(a, { left: 0, top: 0 });d = a.getBoundingClientRect();x(a, { left: Math.ceil(d.left) - d.left + "px", top: Math.ceil(d.top) - d.top + "px" });
	        }, k(), this.unSubPixelFix = E(O, "resize", k));
	      }, getStyle: function getStyle(a) {
	        return this.style = u({ fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif', fontSize: "12px" }, a);
	      }, setStyle: function setStyle(a) {
	        this.boxWrapper.css(this.getStyle(a));
	      }, isHidden: function isHidden() {
	        return !this.boxWrapper.getBBox().width;
	      }, destroy: function destroy() {
	        var a = this.defs;this.box = null;this.boxWrapper = this.boxWrapper.destroy();
	        b(this.gradients || {});this.gradients = null;a && (this.defs = a.destroy());this.unSubPixelFix && this.unSubPixelFix();return this.alignedObjects = null;
	      }, createElement: function createElement(a) {
	        var k = new this.Element();k.init(this, a);return k;
	      }, draw: w, getRadialAttr: function getRadialAttr(a, k) {
	        return { cx: a[0] - a[2] / 2 + k.cx * a[2], cy: a[1] - a[2] / 2 + k.cy * a[2], r: k.r * a[2] };
	      }, buildText: function buildText(a) {
	        for (var k = a.element, c = this, e = c.forExport, f = D(a.textStr, "").toString(), b = -1 !== f.indexOf("\x3c"), w = k.childNodes, d, z, r, p, y = v(k, "x"), u = a.styles, h = a.textWidth, G = u && u.lineHeight, L = u && u.textOutline, n = u && "ellipsis" === u.textOverflow, t = w.length, M = h && !a.added && this.box, N = function N(a) {
	          var e;e = /(px|em)$/.test(a && a.style.fontSize) ? a.style.fontSize : u && u.fontSize || c.style.fontSize || 12;return G ? I(G) : c.fontMetrics(e, a.getAttribute("style") ? a : k).h;
	        }; t--;) {
	          k.removeChild(w[t]);
	        }b || L || n || h || -1 !== f.indexOf(" ") ? (d = /<.*class="([^"]+)".*>/, z = /<.*style="([^"]+)".*>/, r = /<.*href="(http[^"]+)".*>/, M && M.appendChild(k), f = b ? f.replace(/<(b|strong)>/g, '\x3cspan style\x3d"font-weight:bold"\x3e').replace(/<(i|em)>/g, '\x3cspan style\x3d"font-style:italic"\x3e').replace(/<a/g, "\x3cspan").replace(/<\/(b|strong|i|em|a)>/g, "\x3c/span\x3e").split(/<br.*?>/g) : [f], f = m(f, function (a) {
	          return "" !== a;
	        }), A(f, function (f, b) {
	          var w,
	              m = 0;f = f.replace(/^\s+|\s+$/g, "").replace(/<span/g, "|||\x3cspan").replace(/<\/span>/g, "\x3c/span\x3e|||");w = f.split("|||");A(w, function (f) {
	            if ("" !== f || 1 === w.length) {
	              var D = {},
	                  J = g.createElementNS(c.SVG_NS, "tspan"),
	                  I,
	                  A;d.test(f) && (I = f.match(d)[1], v(J, "class", I));z.test(f) && (A = f.match(z)[1].replace(/(;| |^)color([ :])/, "$1fill$2"), v(J, "style", A));r.test(f) && !e && (v(J, "onclick", 'location.href\x3d"' + f.match(r)[1] + '"'), x(J, { cursor: "pointer" }));f = (f.replace(/<(.|\n)*?>/g, "") || " ").replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e");if (" " !== f) {
	                J.appendChild(g.createTextNode(f));m ? D.dx = 0 : b && null !== y && (D.x = y);v(J, D);k.appendChild(J);!m && b && (!H && e && x(J, { display: "block" }), v(J, "dy", N(J)));if (h) {
	                  D = f.replace(/([^\^])-/g, "$1- ").split(" ");I = "nowrap" === u.whiteSpace;for (var G = 1 < w.length || b || 1 < D.length && !I, L, t, M = [], l = N(J), q = a.rotation, O = f, P = O.length; (G || n) && (D.length || M.length);) {
	                    a.rotation = 0, L = a.getBBox(!0), t = L.width, !H && c.forExport && (t = c.measureSpanWidth(J.firstChild.data, a.styles)), L = t > h, void 0 === p && (p = L), n && p ? (P /= 2, "" === O || !L && .5 > P ? D = [] : (O = f.substring(0, O.length + (L ? -1 : 1) * Math.ceil(P)), D = [O + (3 < h ? "\u2026" : "")], J.removeChild(J.firstChild))) : L && 1 !== D.length ? (J.removeChild(J.firstChild), M.unshift(D.pop())) : (D = M, M = [], D.length && !I && (J = g.createElementNS(R, "tspan"), v(J, { dy: l, x: y }), A && v(J, "style", A), k.appendChild(J)), t > h && (h = t)), D.length && J.appendChild(g.createTextNode(D.join(" ").replace(/- /g, "-")));
	                  }a.rotation = q;
	                }m++;
	              }
	            }
	          });
	        }), p && a.attr("title", a.textStr), M && M.removeChild(k), L && a.applyTextOutline && a.applyTextOutline(L)) : k.appendChild(g.createTextNode(f.replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e")));
	      }, getContrast: function getContrast(a) {
	        a = q(a).rgba;return 510 < a[0] + a[1] + a[2] ? "#000000" : "#FFFFFF";
	      }, button: function button(a, k, e, b, w, d, m, H, D) {
	        var z = this.label(a, k, e, D, null, null, null, null, "button"),
	            r = 0;z.attr(c({ padding: 8, r: 2 }, w));var p, J, y, g;w = c({ fill: "#f7f7f7",
	          stroke: "#cccccc", "stroke-width": 1, style: { color: "#333333", cursor: "pointer", fontWeight: "normal" } }, w);p = w.style;delete w.style;d = c(w, { fill: "#e6e6e6" }, d);J = d.style;delete d.style;m = c(w, { fill: "#e6ebf5", style: { color: "#000000", fontWeight: "bold" } }, m);y = m.style;delete m.style;H = c(w, { style: { color: "#cccccc" } }, H);g = H.style;delete H.style;E(z.element, f ? "mouseover" : "mouseenter", function () {
	          3 !== r && z.setState(1);
	        });E(z.element, f ? "mouseout" : "mouseleave", function () {
	          3 !== r && z.setState(r);
	        });z.setState = function (a) {
	          1 !== a && (z.state = r = a);z.removeClass(/highcharts-button-(normal|hover|pressed|disabled)/).addClass("highcharts-button-" + ["normal", "hover", "pressed", "disabled"][a || 0]);z.attr([w, d, m, H][a || 0]).css([p, J, y, g][a || 0]);
	        };z.attr(w).css(u({ cursor: "default" }, p));return z.on("click", function (a) {
	          3 !== r && b.call(z, a);
	        });
	      }, crispLine: function crispLine(a, k) {
	        a[1] === a[4] && (a[1] = a[4] = Math.round(a[1]) - k % 2 / 2);a[2] === a[5] && (a[2] = a[5] = Math.round(a[2]) + k % 2 / 2);return a;
	      }, path: function path(a) {
	        var k = { fill: "none" };r(a) ? k.d = a : z(a) && u(k, a);return this.createElement("path").attr(k);
	      },
	      circle: function circle(a, k, c) {
	        a = z(a) ? a : { x: a, y: k, r: c };k = this.createElement("circle");k.xSetter = k.ySetter = function (a, k, c) {
	          c.setAttribute("c" + k, a);
	        };return k.attr(a);
	      }, arc: function arc(a, k, c, f, e, b) {
	        z(a) && (k = a.y, c = a.r, f = a.innerR, e = a.start, b = a.end, a = a.x);a = this.symbol("arc", a || 0, k || 0, c || 0, c || 0, { innerR: f || 0, start: e || 0, end: b || 0 });a.r = c;return a;
	      }, rect: function rect(a, k, c, f, e, b) {
	        e = z(a) ? a.r : e;var w = this.createElement("rect");a = z(a) ? a : void 0 === a ? {} : { x: a, y: k, width: Math.max(c, 0), height: Math.max(f, 0) };void 0 !== b && (a.strokeWidth = b, a = w.crisp(a));a.fill = "none";e && (a.r = e);w.rSetter = function (a, k, c) {
	          v(c, { rx: a, ry: a });
	        };return w.attr(a);
	      }, setSize: function setSize(a, k, c) {
	        var f = this.alignedObjects,
	            e = f.length;this.width = a;this.height = k;for (this.boxWrapper.animate({ width: a, height: k }, { step: function step() {
	            this.attr({ viewBox: "0 0 " + this.attr("width") + " " + this.attr("height") });
	          }, duration: D(c, !0) ? void 0 : 0 }); e--;) {
	          f[e].align();
	        }
	      }, g: function g(a) {
	        var k = this.createElement("g");return a ? k.attr({ "class": "highcharts-" + a }) : k;
	      }, image: function image(a, k, c, f, e) {
	        var b = { preserveAspectRatio: "none" };
	        1 < arguments.length && u(b, { x: k, y: c, width: f, height: e });b = this.createElement("image").attr(b);b.element.setAttributeNS ? b.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", a) : b.element.setAttribute("hc-svg-href", a);return b;
	      }, symbol: function symbol(a, k, c, f, e, b) {
	        var w = this,
	            d,
	            m = this.symbols[a],
	            H = n(k) && m && m(Math.round(k), Math.round(c), f, e, b),
	            z = /^url\((.*?)\)$/,
	            r,
	            p;m ? (d = this.path(H), d.attr("fill", "none"), u(d, { symbolName: a, x: k, y: c, width: f, height: e }), b && u(d, b)) : z.test(a) && (r = a.match(z)[1], d = this.image(r), d.imgwidth = D(M[r] && M[r].width, b && b.width), d.imgheight = D(M[r] && M[r].height, b && b.height), p = function p() {
	          d.attr({ width: d.width, height: d.height });
	        }, A(["width", "height"], function (a) {
	          d[a + "Setter"] = function (a, k) {
	            var c = {},
	                f = this["img" + k],
	                e = "width" === k ? "translateX" : "translateY";this[k] = a;n(f) && (this.element && this.element.setAttribute(k, f), this.alignByTranslate || (c[e] = ((this[k] || 0) - f) / 2, this.attr(c)));
	          };
	        }), n(k) && d.attr({ x: k, y: c }), d.isImg = !0, n(d.imgwidth) && n(d.imgheight) ? p() : (d.attr({ width: 0, height: 0 }), t("img", { onload: function onload() {
	            var a = l[w.chartIndex];0 === this.width && (x(this, { position: "absolute", top: "-999em" }), g.body.appendChild(this));M[r] = { width: this.width, height: this.height };d.imgwidth = this.width;d.imgheight = this.height;d.element && p();this.parentNode && this.parentNode.removeChild(this);w.imgCount--;if (!w.imgCount && a && a.onload) a.onload();
	          }, src: r }), this.imgCount++));return d;
	      }, symbols: { circle: function circle(a, k, c, f) {
	          var e = .166 * c;return ["M", a + c / 2, k, "C", a + c + e, k, a + c + e, k + f, a + c / 2, k + f, "C", a - e, k + f, a - e, k, a + c / 2, k, "Z"];
	        }, square: function square(a, k, c, f) {
	          return ["M", a, k, "L", a + c, k, a + c, k + f, a, k + f, "Z"];
	        }, triangle: function triangle(a, k, c, f) {
	          return ["M", a + c / 2, k, "L", a + c, k + f, a, k + f, "Z"];
	        }, "triangle-down": function triangleDown(a, k, c, f) {
	          return ["M", a, k, "L", a + c, k, a + c / 2, k + f, "Z"];
	        }, diamond: function diamond(a, k, c, f) {
	          return ["M", a + c / 2, k, "L", a + c, k + f / 2, a + c / 2, k + f, a, k + f / 2, "Z"];
	        }, arc: function arc(a, k, c, f, e) {
	          var b = e.start;c = e.r || c || f;var w = e.end - .001;f = e.innerR;var d = e.open,
	              m = Math.cos(b),
	              H = Math.sin(b),
	              D = Math.cos(w),
	              w = Math.sin(w);e = e.end - b < Math.PI ? 0 : 1;return ["M", a + c * m, k + c * H, "A", c, c, 0, e, 1, a + c * D, k + c * w, d ? "M" : "L", a + f * D, k + f * w, "A", f, f, 0, e, 0, a + f * m, k + f * H, d ? "" : "Z"];
	        }, callout: function callout(a, k, c, f, e) {
	          var b = Math.min(e && e.r || 0, c, f),
	              w = b + 6,
	              d = e && e.anchorX;e = e && e.anchorY;var m;m = ["M", a + b, k, "L", a + c - b, k, "C", a + c, k, a + c, k, a + c, k + b, "L", a + c, k + f - b, "C", a + c, k + f, a + c, k + f, a + c - b, k + f, "L", a + b, k + f, "C", a, k + f, a, k + f, a, k + f - b, "L", a, k + b, "C", a, k, a, k, a + b, k];d && d > c ? e > k + w && e < k + f - w ? m.splice(13, 3, "L", a + c, e - 6, a + c + 6, e, a + c, e + 6, a + c, k + f - b) : m.splice(13, 3, "L", a + c, f / 2, d, e, a + c, f / 2, a + c, k + f - b) : d && 0 > d ? e > k + w && e < k + f - w ? m.splice(33, 3, "L", a, e + 6, a - 6, e, a, e - 6, a, k + b) : m.splice(33, 3, "L", a, f / 2, d, e, a, f / 2, a, k + b) : e && e > f && d > a + w && d < a + c - w ? m.splice(23, 3, "L", d + 6, k + f, d, k + f + 6, d - 6, k + f, a + b, k + f) : e && 0 > e && d > a + w && d < a + c - w && m.splice(3, 3, "L", d - 6, k, d, k - 6, d + 6, k, c - b, k);return m;
	        } }, clipRect: function clipRect(k, c, f, e) {
	        var b = a.uniqueKey(),
	            w = this.createElement("clipPath").attr({ id: b }).add(this.defs);k = this.rect(k, c, f, e, 0).add(w);k.id = b;k.clipPath = w;k.count = 0;return k;
	      }, text: function text(a, k, c, f) {
	        var e = !H && this.forExport,
	            b = {};if (f && (this.allowHTML || !this.forExport)) return this.html(a, k, c);b.x = Math.round(k || 0);c && (b.y = Math.round(c));
	        if (a || 0 === a) b.text = a;a = this.createElement("text").attr(b);e && a.css({ position: "absolute" });f || (a.xSetter = function (a, k, c) {
	          var f = c.getElementsByTagName("tspan"),
	              e,
	              b = c.getAttribute(k),
	              w;for (w = 0; w < f.length; w++) {
	            e = f[w], e.getAttribute(k) === b && e.setAttribute(k, a);
	          }c.setAttribute(k, a);
	        });return a;
	      }, fontMetrics: function fontMetrics(a, k) {
	        a = a || k && k.style && k.style.fontSize || this.style && this.style.fontSize;a = /px/.test(a) ? I(a) : /em/.test(a) ? parseFloat(a) * (k ? this.fontMetrics(null, k.parentNode).f : 16) : 12;k = 24 > a ? a + 3 : Math.round(1.2 * a);return { h: k, b: Math.round(.8 * k), f: a };
	      }, rotCorr: function rotCorr(a, k, c) {
	        var f = a;k && c && (f = Math.max(f * Math.cos(k * h), 4));return { x: -a / 3 * Math.sin(k * h), y: f };
	      }, label: function label(a, k, f, e, b, w, d, m, H) {
	        var D = this,
	            z = D.g("button" !== H && "label"),
	            r = z.text = D.text("", 0, 0, d).attr({ zIndex: 1 }),
	            p,
	            y,
	            g = 0,
	            h = 3,
	            I = 0,
	            G,
	            J,
	            t,
	            R,
	            M,
	            l = {},
	            q,
	            O,
	            x = /^url\((.*?)\)$/.test(e),
	            v = x,
	            P,
	            S,
	            Q,
	            N;H && z.addClass("highcharts-" + H);v = x;P = function P() {
	          return (q || 0) % 2 / 2;
	        };S = function S() {
	          var a = r.element.style,
	              k = {};y = (void 0 === G || void 0 === J || M) && n(r.textStr) && r.getBBox();z.width = (G || y.width || 0) + 2 * h + I;z.height = (J || y.height || 0) + 2 * h;O = h + D.fontMetrics(a && a.fontSize, r).b;v && (p || (z.box = p = D.symbols[e] || x ? D.symbol(e) : D.rect(), p.addClass(("button" === H ? "" : "highcharts-label-box") + (H ? " highcharts-" + H + "-box" : "")), p.add(z), a = P(), k.x = a, k.y = (m ? -O : 0) + a), k.width = Math.round(z.width), k.height = Math.round(z.height), p.attr(u(k, l)), l = {});
	        };Q = function Q() {
	          var a = I + h,
	              k;k = m ? 0 : O;n(G) && y && ("center" === M || "right" === M) && (a += { center: .5, right: 1 }[M] * (G - y.width));if (a !== r.x || k !== r.y) r.attr("x", a), void 0 !== k && r.attr("y", k);r.x = a;r.y = k;
	        };N = function N(a, k) {
	          p ? p.attr(a, k) : l[a] = k;
	        };z.onAdd = function () {
	          r.add(z);z.attr({ text: a || 0 === a ? a : "", x: k, y: f });p && n(b) && z.attr({ anchorX: b, anchorY: w });
	        };z.widthSetter = function (a) {
	          G = a;
	        };z.heightSetter = function (a) {
	          J = a;
	        };z["text-alignSetter"] = function (a) {
	          M = a;
	        };z.paddingSetter = function (a) {
	          n(a) && a !== h && (h = z.padding = a, Q());
	        };z.paddingLeftSetter = function (a) {
	          n(a) && a !== I && (I = a, Q());
	        };z.alignSetter = function (a) {
	          a = { left: 0, center: .5, right: 1 }[a];a !== g && (g = a, y && z.attr({ x: t }));
	        };z.textSetter = function (a) {
	          void 0 !== a && r.textSetter(a);S();Q();
	        };z["stroke-widthSetter"] = function (a, k) {
	          a && (v = !0);q = this["stroke-width"] = a;N(k, a);
	        };z.strokeSetter = z.fillSetter = z.rSetter = function (a, k) {
	          "fill" === k && a && (v = !0);N(k, a);
	        };z.anchorXSetter = function (a, k) {
	          b = a;N(k, Math.round(a) - P() - t);
	        };z.anchorYSetter = function (a, k) {
	          w = a;N(k, a - R);
	        };z.xSetter = function (a) {
	          z.x = a;g && (a -= g * ((G || y.width) + 2 * h));t = Math.round(a);z.attr("translateX", t);
	        };z.ySetter = function (a) {
	          R = z.y = Math.round(a);z.attr("translateY", R);
	        };var V = z.css;return u(z, { css: function css(a) {
	            if (a) {
	              var k = {};a = c(a);A(z.textProps, function (c) {
	                void 0 !== a[c] && (k[c] = a[c], delete a[c]);
	              });r.css(k);
	            }return V.call(z, a);
	          }, getBBox: function getBBox() {
	            return { width: y.width + 2 * h, height: y.height + 2 * h, x: y.x - h, y: y.y - h };
	          }, shadow: function shadow(a) {
	            a && (S(), p && p.shadow(a));return z;
	          }, destroy: function destroy() {
	            L(z.element, "mouseenter");L(z.element, "mouseleave");r && (r = r.destroy());p && (p = p.destroy());B.prototype.destroy.call(z);z = D = S = Q = N = null;
	          } });
	      } };a.Renderer = C;
	  })(K);(function (a) {
	    var B = a.attr,
	        C = a.createElement,
	        E = a.css,
	        F = a.defined,
	        v = a.each,
	        l = a.extend,
	        q = a.isFirefox,
	        x = a.isMS,
	        t = a.isWebKit,
	        n = a.pInt,
	        h = a.SVGRenderer,
	        b = a.win,
	        g = a.wrap;l(a.SVGElement.prototype, { htmlCss: function htmlCss(a) {
	        var b = this.element;if (b = a && "SPAN" === b.tagName && a.width) delete a.width, this.textWidth = b, this.updateTransform();a && "ellipsis" === a.textOverflow && (a.whiteSpace = "nowrap", a.overflow = "hidden");this.styles = l(this.styles, a);E(this.element, a);return this;
	      }, htmlGetBBox: function htmlGetBBox() {
	        var a = this.element;"text" === a.nodeName && (a.style.position = "absolute");return { x: a.offsetLeft, y: a.offsetTop, width: a.offsetWidth,
	          height: a.offsetHeight };
	      }, htmlUpdateTransform: function htmlUpdateTransform() {
	        if (this.added) {
	          var a = this.renderer,
	              b = this.element,
	              p = this.translateX || 0,
	              m = this.translateY || 0,
	              d = this.x || 0,
	              r = this.y || 0,
	              g = this.textAlign || "left",
	              f = { left: 0, center: .5, right: 1 }[g],
	              z = this.styles;E(b, { marginLeft: p, marginTop: m });this.shadows && v(this.shadows, function (a) {
	            E(a, { marginLeft: p + 1, marginTop: m + 1 });
	          });this.inverted && v(b.childNodes, function (c) {
	            a.invertChild(c, b);
	          });if ("SPAN" === b.tagName) {
	            var e = this.rotation,
	                y = n(this.textWidth),
	                c = z && z.whiteSpace,
	                w = [e, g, b.innerHTML, this.textWidth, this.textAlign].join();w !== this.cTT && (z = a.fontMetrics(b.style.fontSize).b, F(e) && this.setSpanRotation(e, f, z), E(b, { width: "", whiteSpace: c || "nowrap" }), b.offsetWidth > y && /[ \-]/.test(b.textContent || b.innerText) && E(b, { width: y + "px", display: "block", whiteSpace: c || "normal" }), this.getSpanCorrection(b.offsetWidth, z, f, e, g));E(b, { left: d + (this.xCorr || 0) + "px", top: r + (this.yCorr || 0) + "px" });t && (z = b.offsetHeight);this.cTT = w;
	          }
	        } else this.alignOnAdd = !0;
	      }, setSpanRotation: function setSpanRotation(a, g, p) {
	        var m = {},
	            d = x ? "-ms-transform" : t ? "-webkit-transform" : q ? "MozTransform" : b.opera ? "-o-transform" : "";m[d] = m.transform = "rotate(" + a + "deg)";m[d + (q ? "Origin" : "-origin")] = m.transformOrigin = 100 * g + "% " + p + "px";E(this.element, m);
	      }, getSpanCorrection: function getSpanCorrection(a, b, p) {
	        this.xCorr = -a * p;this.yCorr = -b;
	      } });l(h.prototype, { html: function html(a, b, p) {
	        var m = this.createElement("span"),
	            d = m.element,
	            r = m.renderer,
	            u = r.isSVG,
	            f = function f(a, _f) {
	          v(["opacity", "visibility"], function (e) {
	            g(a, e + "Setter", function (a, e, b, d) {
	              a.call(this, e, b, d);_f[b] = e;
	            });
	          });
	        };m.textSetter = function (a) {
	          a !== d.innerHTML && delete this.bBox;d.innerHTML = this.textStr = a;m.htmlUpdateTransform();
	        };u && f(m, m.element.style);m.xSetter = m.ySetter = m.alignSetter = m.rotationSetter = function (a, f) {
	          "align" === f && (f = "textAlign");m[f] = a;m.htmlUpdateTransform();
	        };m.attr({ text: a, x: Math.round(b), y: Math.round(p) }).css({ fontFamily: this.style.fontFamily, fontSize: this.style.fontSize, position: "absolute" });d.style.whiteSpace = "nowrap";m.css = m.htmlCss;u && (m.add = function (a) {
	          var e,
	              b = r.box.parentNode,
	              c = [];if (this.parentGroup = a) {
	            if (e = a.div, !e) {
	              for (; a;) {
	                c.push(a), a = a.parentGroup;
	              }v(c.reverse(), function (a) {
	                var w,
	                    d = B(a.element, "class");d && (d = { className: d });e = a.div = a.div || C("div", d, { position: "absolute", left: (a.translateX || 0) + "px", top: (a.translateY || 0) + "px", display: a.display, opacity: a.opacity, pointerEvents: a.styles && a.styles.pointerEvents }, e || b);w = e.style;l(a, { on: function on() {
	                    m.on.apply({ element: c[0].div }, arguments);return a;
	                  }, translateXSetter: function translateXSetter(c, k) {
	                    w.left = c + "px";a[k] = c;a.doTransform = !0;
	                  }, translateYSetter: function translateYSetter(c, k) {
	                    w.top = c + "px";a[k] = c;a.doTransform = !0;
	                  } });f(a, w);
	              });
	            }
	          } else e = b;e.appendChild(d);m.added = !0;m.alignOnAdd && m.htmlUpdateTransform();return m;
	        });return m;
	      } });
	  })(K);(function (a) {
	    var B,
	        C,
	        E = a.createElement,
	        F = a.css,
	        v = a.defined,
	        l = a.deg2rad,
	        q = a.discardElement,
	        x = a.doc,
	        t = a.each,
	        n = a.erase,
	        h = a.extend;B = a.extendClass;var b = a.isArray,
	        g = a.isNumber,
	        A = a.isObject,
	        u = a.merge;C = a.noop;var p = a.pick,
	        m = a.pInt,
	        d = a.SVGElement,
	        r = a.SVGRenderer,
	        G = a.win;a.svg || (C = { docMode8: x && 8 === x.documentMode, init: function init(a, b) {
	        var f = ["\x3c", b, ' filled\x3d"f" stroked\x3d"f"'],
	            d = ["position: ", "absolute", ";"],
	            c = "div" === b;("shape" === b || c) && d.push("left:0;top:0;width:1px;height:1px;");d.push("visibility: ", c ? "hidden" : "visible");f.push(' style\x3d"', d.join(""), '"/\x3e');b && (f = c || "span" === b || "img" === b ? f.join("") : a.prepVML(f), this.element = E(f));this.renderer = a;
	      }, add: function add(a) {
	        var f = this.renderer,
	            e = this.element,
	            b = f.box,
	            c = a && a.inverted,
	            b = a ? a.element || a : b;a && (this.parentGroup = a);c && f.invertChild(e, b);b.appendChild(e);this.added = !0;this.alignOnAdd && !this.deferUpdateTransform && this.updateTransform();
	        if (this.onAdd) this.onAdd();this.className && this.attr("class", this.className);return this;
	      }, updateTransform: d.prototype.htmlUpdateTransform, setSpanRotation: function setSpanRotation() {
	        var a = this.rotation,
	            b = Math.cos(a * l),
	            e = Math.sin(a * l);F(this.element, { filter: a ? ["progid:DXImageTransform.Microsoft.Matrix(M11\x3d", b, ", M12\x3d", -e, ", M21\x3d", e, ", M22\x3d", b, ", sizingMethod\x3d'auto expand')"].join("") : "none" });
	      }, getSpanCorrection: function getSpanCorrection(a, b, e, d, c) {
	        var f = d ? Math.cos(d * l) : 1,
	            m = d ? Math.sin(d * l) : 0,
	            z = p(this.elemHeight, this.element.offsetHeight),
	            r;this.xCorr = 0 > f && -a;this.yCorr = 0 > m && -z;r = 0 > f * m;this.xCorr += m * b * (r ? 1 - e : e);this.yCorr -= f * b * (d ? r ? e : 1 - e : 1);c && "left" !== c && (this.xCorr -= a * e * (0 > f ? -1 : 1), d && (this.yCorr -= z * e * (0 > m ? -1 : 1)), F(this.element, { textAlign: c }));
	      }, pathToVML: function pathToVML(a) {
	        for (var f = a.length, b = []; f--;) {
	          g(a[f]) ? b[f] = Math.round(10 * a[f]) - 5 : "Z" === a[f] ? b[f] = "x" : (b[f] = a[f], !a.isArc || "wa" !== a[f] && "at" !== a[f] || (b[f + 5] === b[f + 7] && (b[f + 7] += a[f + 7] > a[f + 5] ? 1 : -1), b[f + 6] === b[f + 8] && (b[f + 8] += a[f + 8] > a[f + 6] ? 1 : -1)));
	        }return b.join(" ") || "x";
	      }, clip: function clip(a) {
	        var f = this,
	            b;a ? (b = a.members, n(b, f), b.push(f), f.destroyClip = function () {
	          n(b, f);
	        }, a = a.getCSS(f)) : (f.destroyClip && f.destroyClip(), a = { clip: f.docMode8 ? "inherit" : "rect(auto)" });return f.css(a);
	      }, css: d.prototype.htmlCss, safeRemoveChild: function safeRemoveChild(a) {
	        a.parentNode && q(a);
	      }, destroy: function destroy() {
	        this.destroyClip && this.destroyClip();return d.prototype.destroy.apply(this);
	      }, on: function on(a, b) {
	        this.element["on" + a] = function () {
	          var a = G.event;a.target = a.srcElement;b(a);
	        };return this;
	      }, cutOffPath: function cutOffPath(a, b) {
	        var f;a = a.split(/[ ,]/);
	        f = a.length;if (9 === f || 11 === f) a[f - 4] = a[f - 2] = m(a[f - 2]) - 10 * b;return a.join(" ");
	      }, shadow: function shadow(a, b, e) {
	        var f = [],
	            c,
	            d = this.element,
	            r = this.renderer,
	            z,
	            g = d.style,
	            k,
	            H = d.path,
	            u,
	            h,
	            G,
	            A;H && "string" !== typeof H.value && (H = "x");h = H;if (a) {
	          G = p(a.width, 3);A = (a.opacity || .15) / G;for (c = 1; 3 >= c; c++) {
	            u = 2 * G + 1 - 2 * c, e && (h = this.cutOffPath(H.value, u + .5)), k = ['\x3cshape isShadow\x3d"true" strokeweight\x3d"', u, '" filled\x3d"false" path\x3d"', h, '" coordsize\x3d"10 10" style\x3d"', d.style.cssText, '" /\x3e'], z = E(r.prepVML(k), null, { left: m(g.left) + p(a.offsetX, 1), top: m(g.top) + p(a.offsetY, 1) }), e && (z.cutOff = u + 1), k = ['\x3cstroke color\x3d"', a.color || "#000000", '" opacity\x3d"', A * c, '"/\x3e'], E(r.prepVML(k), null, null, z), b ? b.element.appendChild(z) : d.parentNode.insertBefore(z, d), f.push(z);
	          }this.shadows = f;
	        }return this;
	      }, updateShadows: C, setAttr: function setAttr(a, b) {
	        this.docMode8 ? this.element[a] = b : this.element.setAttribute(a, b);
	      }, classSetter: function classSetter(a) {
	        (this.added ? this.element : this).className = a;
	      }, dashstyleSetter: function dashstyleSetter(a, b, e) {
	        (e.getElementsByTagName("stroke")[0] || E(this.renderer.prepVML(["\x3cstroke/\x3e"]), null, null, e))[b] = a || "solid";this[b] = a;
	      }, dSetter: function dSetter(a, b, e) {
	        var f = this.shadows;a = a || [];this.d = a.join && a.join(" ");e.path = a = this.pathToVML(a);if (f) for (e = f.length; e--;) {
	          f[e].path = f[e].cutOff ? this.cutOffPath(a, f[e].cutOff) : a;
	        }this.setAttr(b, a);
	      }, fillSetter: function fillSetter(a, b, e) {
	        var f = e.nodeName;"SPAN" === f ? e.style.color = a : "IMG" !== f && (e.filled = "none" !== a, this.setAttr("fillcolor", this.renderer.color(a, e, b, this)));
	      }, "fill-opacitySetter": function fillOpacitySetter(a, b, e) {
	        E(this.renderer.prepVML(["\x3c", b.split("-")[0], ' opacity\x3d"', a, '"/\x3e']), null, null, e);
	      }, opacitySetter: C, rotationSetter: function rotationSetter(a, b, e) {
	        e = e.style;this[b] = e[b] = a;e.left = -Math.round(Math.sin(a * l) + 1) + "px";e.top = Math.round(Math.cos(a * l)) + "px";
	      }, strokeSetter: function strokeSetter(a, b, e) {
	        this.setAttr("strokecolor", this.renderer.color(a, e, b, this));
	      }, "stroke-widthSetter": function strokeWidthSetter(a, b, e) {
	        e.stroked = !!a;this[b] = a;g(a) && (a += "px");this.setAttr("strokeweight", a);
	      }, titleSetter: function titleSetter(a, b) {
	        this.setAttr(b, a);
	      }, visibilitySetter: function visibilitySetter(a, b, e) {
	        "inherit" === a && (a = "visible");this.shadows && t(this.shadows, function (f) {
	          f.style[b] = a;
	        });"DIV" === e.nodeName && (a = "hidden" === a ? "-999em" : 0, this.docMode8 || (e.style[b] = a ? "visible" : "hidden"), b = "top");e.style[b] = a;
	      }, xSetter: function xSetter(a, b, e) {
	        this[b] = a;"x" === b ? b = "left" : "y" === b && (b = "top");this.updateClipping ? (this[b] = a, this.updateClipping()) : e.style[b] = a;
	      }, zIndexSetter: function zIndexSetter(a, b, e) {
	        e.style[b] = a;
	      } }, C["stroke-opacitySetter"] = C["fill-opacitySetter"], a.VMLElement = C = B(d, C), C.prototype.ySetter = C.prototype.widthSetter = C.prototype.heightSetter = C.prototype.xSetter, C = { Element: C, isIE8: -1 < G.navigator.userAgent.indexOf("MSIE 8.0"), init: function init(a, b, e) {
	        var f, c;this.alignedObjects = [];f = this.createElement("div").css({ position: "relative" });c = f.element;a.appendChild(f.element);this.isVML = !0;this.box = c;this.boxWrapper = f;this.gradients = {};this.cache = {};this.cacheKeys = [];this.imgCount = 0;this.setSize(b, e, !1);if (!x.namespaces.hcv) {
	          x.namespaces.add("hcv", "urn:schemas-microsoft-com:vml");try {
	            x.createStyleSheet().cssText = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } ";
	          } catch (w) {
	            x.styleSheets[0].cssText += "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } ";
	          }
	        }
	      }, isHidden: function isHidden() {
	        return !this.box.offsetWidth;
	      }, clipRect: function clipRect(a, b, e, d) {
	        var c = this.createElement(),
	            f = A(a);return h(c, { members: [], count: 0, left: (f ? a.x : a) + 1, top: (f ? a.y : b) + 1, width: (f ? a.width : e) - 1, height: (f ? a.height : d) - 1, getCSS: function getCSS(a) {
	            var c = a.element,
	                b = c.nodeName,
	                k = a.inverted,
	                f = this.top - ("shape" === b ? c.offsetTop : 0),
	                e = this.left,
	                c = e + this.width,
	                d = f + this.height,
	                f = { clip: "rect(" + Math.round(k ? e : f) + "px," + Math.round(k ? d : c) + "px," + Math.round(k ? c : d) + "px," + Math.round(k ? f : e) + "px)" };!k && a.docMode8 && "DIV" === b && h(f, { width: c + "px", height: d + "px" });return f;
	          }, updateClipping: function updateClipping() {
	            t(c.members, function (a) {
	              a.element && a.css(c.getCSS(a));
	            });
	          } });
	      }, color: function color(b, d, e, m) {
	        var c = this,
	            f,
	            r = /^rgba/,
	            p,
	            g,
	            k = "none";b && b.linearGradient ? g = "gradient" : b && b.radialGradient && (g = "pattern");if (g) {
	          var H,
	              z,
	              u = b.linearGradient || b.radialGradient,
	              h,
	              y,
	              G,
	              A,
	              n,
	              l = "";b = b.stops;var q,
	              x = [],
	              v = function v() {
	            p = ['\x3cfill colors\x3d"' + x.join(",") + '" opacity\x3d"', G, '" o:opacity2\x3d"', y, '" type\x3d"', g, '" ', l, 'focus\x3d"100%" method\x3d"any" /\x3e'];E(c.prepVML(p), null, null, d);
	          };h = b[0];q = b[b.length - 1];0 < h[0] && b.unshift([0, h[1]]);1 > q[0] && b.push([1, q[1]]);t(b, function (k, c) {
	            r.test(k[1]) ? (f = a.color(k[1]), H = f.get("rgb"), z = f.get("a")) : (H = k[1], z = 1);x.push(100 * k[0] + "% " + H);c ? (G = z, A = H) : (y = z, n = H);
	          });if ("fill" === e) {
	            if ("gradient" === g) e = u.x1 || u[0] || 0, b = u.y1 || u[1] || 0, h = u.x2 || u[2] || 0, u = u.y2 || u[3] || 0, l = 'angle\x3d"' + (90 - 180 * Math.atan((u - b) / (h - e)) / Math.PI) + '"', v();else {
	              var k = u.r,
	                  C = 2 * k,
	                  B = 2 * k,
	                  F = u.cx,
	                  U = u.cy,
	                  T = d.radialReference,
	                  K,
	                  k = function k() {
	                T && (K = m.getBBox(), F += (T[0] - K.x) / K.width - .5, U += (T[1] - K.y) / K.height - .5, C *= T[2] / K.width, B *= T[2] / K.height);l = 'src\x3d"' + a.getOptions().global.VMLRadialGradientURL + '" size\x3d"' + C + "," + B + '" origin\x3d"0.5,0.5" position\x3d"' + F + "," + U + '" color2\x3d"' + n + '" ';v();
	              };m.added ? k() : m.onAdd = k;k = A;
	            }
	          } else k = H;
	        } else r.test(b) && "IMG" !== d.tagName ? (f = a.color(b), m[e + "-opacitySetter"](f.get("a"), e, d), k = f.get("rgb")) : (k = d.getElementsByTagName(e), k.length && (k[0].opacity = 1, k[0].type = "solid"), k = b);return k;
	      }, prepVML: function prepVML(a) {
	        var b = this.isIE8;a = a.join("");b ? (a = a.replace("/\x3e", ' xmlns\x3d"urn:schemas-microsoft-com:vml" /\x3e'), a = -1 === a.indexOf('style\x3d"') ? a.replace("/\x3e", ' style\x3d"display:inline-block;behavior:url(#default#VML);" /\x3e') : a.replace('style\x3d"', 'style\x3d"display:inline-block;behavior:url(#default#VML);')) : a = a.replace("\x3c", "\x3chcv:");return a;
	      }, text: r.prototype.html, path: function path(a) {
	        var f = { coordsize: "10 10" };b(a) ? f.d = a : A(a) && h(f, a);return this.createElement("shape").attr(f);
	      }, circle: function circle(a, b, e) {
	        var f = this.symbol("circle");A(a) && (e = a.r, b = a.y, a = a.x);f.isCircle = !0;f.r = e;return f.attr({ x: a, y: b });
	      }, g: function g(a) {
	        var b;a && (b = { className: "highcharts-" + a, "class": "highcharts-" + a });return this.createElement("div").attr(b);
	      }, image: function image(a, b, e, d, c) {
	        var f = this.createElement("img").attr({ src: a });1 < arguments.length && f.attr({ x: b, y: e, width: d, height: c });return f;
	      }, createElement: function createElement(a) {
	        return "rect" === a ? this.symbol(a) : r.prototype.createElement.call(this, a);
	      }, invertChild: function invertChild(a, b) {
	        var e = this;b = b.style;var f = "IMG" === a.tagName && a.style;F(a, { flip: "x", left: m(b.width) - (f ? m(f.top) : 1), top: m(b.height) - (f ? m(f.left) : 1), rotation: -90 });t(a.childNodes, function (c) {
	          e.invertChild(c, a);
	        });
	      }, symbols: { arc: function arc(a, b, e, d, c) {
	          var f = c.start,
	              m = c.end,
	              r = c.r || e || d;e = c.innerR;d = Math.cos(f);var p = Math.sin(f),
	              k = Math.cos(m),
	              H = Math.sin(m);if (0 === m - f) return ["x"];f = ["wa", a - r, b - r, a + r, b + r, a + r * d, b + r * p, a + r * k, b + r * H];c.open && !e && f.push("e", "M", a, b);f.push("at", a - e, b - e, a + e, b + e, a + e * k, b + e * H, a + e * d, b + e * p, "x", "e");f.isArc = !0;return f;
	        }, circle: function circle(a, b, e, d, c) {
	          c && v(c.r) && (e = d = 2 * c.r);c && c.isCircle && (a -= e / 2, b -= d / 2);return ["wa", a, b, a + e, b + d, a + e, b + d / 2, a + e, b + d / 2, "e"];
	        }, rect: function rect(a, b, e, d, c) {
	          return r.prototype.symbols[v(c) && c.r ? "callout" : "square"].call(0, a, b, e, d, c);
	        } } }, a.VMLRenderer = B = function B() {
	      this.init.apply(this, arguments);
	    }, B.prototype = u(r.prototype, C), a.Renderer = B);r.prototype.measureSpanWidth = function (a, b) {
	      var e = x.createElement("span");a = x.createTextNode(a);e.appendChild(a);F(e, b);this.box.appendChild(e);b = e.offsetWidth;q(e);return b;
	    };
	  })(K);(function (a) {
	    function B() {
	      var x = a.defaultOptions.global,
	          t,
	          n = x.useUTC,
	          h = n ? "getUTC" : "get",
	          b = n ? "setUTC" : "set";a.Date = t = x.Date || q.Date;t.hcTimezoneOffset = n && x.timezoneOffset;t.hcGetTimezoneOffset = n && x.getTimezoneOffset;t.hcMakeTime = function (a, b, u, p, m, d) {
	        var r;n ? (r = t.UTC.apply(0, arguments), r += F(r)) : r = new t(a, b, l(u, 1), l(p, 0), l(m, 0), l(d, 0)).getTime();return r;
	      };E("Minutes Hours Day Date Month FullYear".split(" "), function (a) {
	        t["hcGet" + a] = h + a;
	      });E("Milliseconds Seconds Minutes Hours Date Month FullYear".split(" "), function (a) {
	        t["hcSet" + a] = b + a;
	      });
	    }var C = a.color,
	        E = a.each,
	        F = a.getTZOffset,
	        v = a.merge,
	        l = a.pick,
	        q = a.win;a.defaultOptions = { colors: "#7cb5ec #434348 #90ed7d #f7a35c #8085e9 #f15c80 #e4d354 #2b908f #f45b5b #91e8e1".split(" "), symbols: ["circle", "diamond", "square", "triangle", "triangle-down"], lang: { loading: "Loading...", months: "January February March April May June July August September October November December".split(" "), shortMonths: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
	        weekdays: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), decimalPoint: ".", numericSymbols: "kMGTPE".split(""), resetZoom: "Reset zoom", resetZoomTitle: "Reset zoom level 1:1", thousandsSep: " " }, global: { useUTC: !0, VMLRadialGradientURL: "http://code.highcharts.com/5.0.6/gfx/vml-radial-gradient.png" }, chart: { borderRadius: 0, defaultSeriesType: "line", ignoreHiddenSeries: !0, spacing: [10, 10, 15, 10], resetZoomButton: { theme: { zIndex: 20 }, position: { align: "right", x: -10, y: 10 } }, width: null, height: null, borderColor: "#335cad",
	        backgroundColor: "#ffffff", plotBorderColor: "#cccccc" }, title: { text: "Chart title", align: "center", margin: 15, widthAdjust: -44 }, subtitle: { text: "", align: "center", widthAdjust: -44 }, plotOptions: {}, labels: { style: { position: "absolute", color: "#333333" } }, legend: { enabled: !0, align: "center", layout: "horizontal", labelFormatter: function labelFormatter() {
	          return this.name;
	        }, borderColor: "#999999", borderRadius: 0, navigation: { activeColor: "#003399", inactiveColor: "#cccccc" }, itemStyle: { color: "#333333", fontSize: "12px", fontWeight: "bold" }, itemHoverStyle: { color: "#000000" },
	        itemHiddenStyle: { color: "#cccccc" }, shadow: !1, itemCheckboxStyle: { position: "absolute", width: "13px", height: "13px" }, squareSymbol: !0, symbolPadding: 5, verticalAlign: "bottom", x: 0, y: 0, title: { style: { fontWeight: "bold" } } }, loading: { labelStyle: { fontWeight: "bold", position: "relative", top: "45%" }, style: { position: "absolute", backgroundColor: "#ffffff", opacity: .5, textAlign: "center" } }, tooltip: { enabled: !0, animation: a.svg, borderRadius: 3, dateTimeLabelFormats: { millisecond: "%A, %b %e, %H:%M:%S.%L", second: "%A, %b %e, %H:%M:%S",
	          minute: "%A, %b %e, %H:%M", hour: "%A, %b %e, %H:%M", day: "%A, %b %e, %Y", week: "Week from %A, %b %e, %Y", month: "%B %Y", year: "%Y" }, footerFormat: "", padding: 8, snap: a.isTouchDevice ? 25 : 10, backgroundColor: C("#f7f7f7").setOpacity(.85).get(), borderWidth: 1, headerFormat: '\x3cspan style\x3d"font-size: 10px"\x3e{point.key}\x3c/span\x3e\x3cbr/\x3e', pointFormat: "<span style=\"color:{point.color}\">\u25CF</span> {series.name}: <b>{point.y}</b><br/>", shadow: !0, style: { color: "#333333", cursor: "default",
	          fontSize: "12px", pointerEvents: "none", whiteSpace: "nowrap" } }, credits: { enabled: !0, href: "http://www.highcharts.com", position: { align: "right", x: -10, verticalAlign: "bottom", y: -5 }, style: { cursor: "pointer", color: "#999999", fontSize: "9px" }, text: "Highcharts.com" } };a.setOptions = function (l) {
	      a.defaultOptions = v(!0, a.defaultOptions, l);B();return a.defaultOptions;
	    };a.getOptions = function () {
	      return a.defaultOptions;
	    };a.defaultPlotOptions = a.defaultOptions.plotOptions;B();
	  })(K);(function (a) {
	    var B = a.arrayMax,
	        C = a.arrayMin,
	        E = a.defined,
	        F = a.destroyObjectProperties,
	        v = a.each,
	        l = a.erase,
	        q = a.merge,
	        x = a.pick;a.PlotLineOrBand = function (a, n) {
	      this.axis = a;n && (this.options = n, this.id = n.id);
	    };a.PlotLineOrBand.prototype = { render: function render() {
	        var a = this,
	            n = a.axis,
	            h = n.horiz,
	            b = a.options,
	            g = b.label,
	            A = a.label,
	            u = b.to,
	            p = b.from,
	            m = b.value,
	            d = E(p) && E(u),
	            r = E(m),
	            G = a.svgElem,
	            f = !G,
	            z = [],
	            e,
	            y = b.color,
	            c = x(b.zIndex, 0),
	            w = b.events,
	            z = { "class": "highcharts-plot-" + (d ? "band " : "line ") + (b.className || "") },
	            D = {},
	            I = n.chart.renderer,
	            L = d ? "bands" : "lines",
	            k = n.log2lin;n.isLog && (p = k(p), u = k(u), m = k(m));r ? (z = { stroke: y, "stroke-width": b.width }, b.dashStyle && (z.dashstyle = b.dashStyle)) : d && (y && (z.fill = y), b.borderWidth && (z.stroke = b.borderColor, z["stroke-width"] = b.borderWidth));D.zIndex = c;L += "-" + c;(y = n[L]) || (n[L] = y = I.g("plot-" + L).attr(D).add());f && (a.svgElem = G = I.path().attr(z).add(y));if (r) z = n.getPlotLinePath(m, G.strokeWidth());else if (d) z = n.getPlotBandPath(p, u, b);else return;if (f && z && z.length) {
	          if (G.attr({ d: z }), w) for (e in b = function b(k) {
	            G.on(k, function (b) {
	              w[k].apply(a, [b]);
	            });
	          }, w) {
	            b(e);
	          }
	        } else G && (z ? (G.show(), G.animate({ d: z })) : (G.hide(), A && (a.label = A = A.destroy())));g && E(g.text) && z && z.length && 0 < n.width && 0 < n.height && !z.flat ? (g = q({ align: h && d && "center", x: h ? !d && 4 : 10, verticalAlign: !h && d && "middle", y: h ? d ? 16 : 10 : d ? 6 : -4, rotation: h && !d && 90 }, g), this.renderLabel(g, z, d, c)) : A && A.hide();return a;
	      }, renderLabel: function renderLabel(a, n, h, b) {
	        var g = this.label,
	            A = this.axis.chart.renderer;g || (g = { align: a.textAlign || a.align, rotation: a.rotation, "class": "highcharts-plot-" + (h ? "band" : "line") + "-label " + (a.className || "") }, g.zIndex = b, this.label = g = A.text(a.text, 0, 0, a.useHTML).attr(g).add(), g.css(a.style));b = [n[1], n[4], h ? n[6] : n[1]];n = [n[2], n[5], h ? n[7] : n[2]];h = C(b);A = C(n);g.align(a, !1, { x: h, y: A, width: B(b) - h, height: B(n) - A });g.show();
	      }, destroy: function destroy() {
	        l(this.axis.plotLinesAndBands, this);delete this.axis;F(this);
	      } };a.AxisPlotLineOrBandExtension = { getPlotBandPath: function getPlotBandPath(a, n) {
	        n = this.getPlotLinePath(n, null, null, !0);(a = this.getPlotLinePath(a, null, null, !0)) && n ? (a.flat = a.toString() === n.toString(), a.push(n[4], n[5], n[1], n[2], "z")) : a = null;
	        return a;
	      }, addPlotBand: function addPlotBand(a) {
	        return this.addPlotBandOrLine(a, "plotBands");
	      }, addPlotLine: function addPlotLine(a) {
	        return this.addPlotBandOrLine(a, "plotLines");
	      }, addPlotBandOrLine: function addPlotBandOrLine(l, n) {
	        var h = new a.PlotLineOrBand(this, l).render(),
	            b = this.userOptions;h && (n && (b[n] = b[n] || [], b[n].push(l)), this.plotLinesAndBands.push(h));return h;
	      }, removePlotBandOrLine: function removePlotBandOrLine(a) {
	        for (var n = this.plotLinesAndBands, h = this.options, b = this.userOptions, g = n.length; g--;) {
	          n[g].id === a && n[g].destroy();
	        }v([h.plotLines || [], b.plotLines || [], h.plotBands || [], b.plotBands || []], function (b) {
	          for (g = b.length; g--;) {
	            b[g].id === a && l(b, b[g]);
	          }
	        });
	      } };
	  })(K);(function (a) {
	    var B = a.correctFloat,
	        C = a.defined,
	        E = a.destroyObjectProperties,
	        F = a.isNumber,
	        v = a.merge,
	        l = a.pick,
	        q = a.deg2rad;a.Tick = function (a, l, n, h) {
	      this.axis = a;this.pos = l;this.type = n || "";this.isNew = !0;n || h || this.addLabel();
	    };a.Tick.prototype = { addLabel: function addLabel() {
	        var a = this.axis,
	            t = a.options,
	            n = a.chart,
	            h = a.categories,
	            b = a.names,
	            g = this.pos,
	            A = t.labels,
	            u = a.tickPositions,
	            p = g === u[0],
	            m = g === u[u.length - 1],
	            b = h ? l(h[g], b[g], g) : g,
	            h = this.label,
	            u = u.info,
	            d;a.isDatetimeAxis && u && (d = t.dateTimeLabelFormats[u.higherRanks[g] || u.unitName]);this.isFirst = p;this.isLast = m;t = a.labelFormatter.call({ axis: a, chart: n, isFirst: p, isLast: m, dateTimeLabelFormat: d, value: a.isLog ? B(a.lin2log(b)) : b });C(h) ? h && h.attr({ text: t }) : (this.labelLength = (this.label = h = C(t) && A.enabled ? n.renderer.text(t, 0, 0, A.useHTML).css(v(A.style)).add(a.labelGroup) : null) && h.getBBox().width, this.rotation = 0);
	      }, getLabelSize: function getLabelSize() {
	        return this.label ? this.label.getBBox()[this.axis.horiz ? "height" : "width"] : 0;
	      }, handleOverflow: function handleOverflow(a) {
	        var t = this.axis,
	            n = a.x,
	            h = t.chart.chartWidth,
	            b = t.chart.spacing,
	            g = l(t.labelLeft, Math.min(t.pos, b[3])),
	            b = l(t.labelRight, Math.max(t.pos + t.len, h - b[1])),
	            A = this.label,
	            u = this.rotation,
	            p = { left: 0, center: .5, right: 1 }[t.labelAlign],
	            m = A.getBBox().width,
	            d = t.getSlotWidth(),
	            r = d,
	            G = 1,
	            f,
	            z = {};if (u) 0 > u && n - p * m < g ? f = Math.round(n / Math.cos(u * q) - g) : 0 < u && n + p * m > b && (f = Math.round((h - n) / Math.cos(u * q)));else if (h = n + (1 - p) * m, n - p * m < g ? r = a.x + r * (1 - p) - g : h > b && (r = b - a.x + r * p, G = -1), r = Math.min(d, r), r < d && "center" === t.labelAlign && (a.x += G * (d - r - p * (d - Math.min(m, r)))), m > r || t.autoRotation && (A.styles || {}).width) f = r;f && (z.width = f, (t.options.labels.style || {}).textOverflow || (z.textOverflow = "ellipsis"), A.css(z));
	      }, getPosition: function getPosition(a, l, n, h) {
	        var b = this.axis,
	            g = b.chart,
	            A = h && g.oldChartHeight || g.chartHeight;return { x: a ? b.translate(l + n, null, null, h) + b.transB : b.left + b.offset + (b.opposite ? (h && g.oldChartWidth || g.chartWidth) - b.right - b.left : 0), y: a ? A - b.bottom + b.offset - (b.opposite ? b.height : 0) : A - b.translate(l + n, null, null, h) - b.transB };
	      }, getLabelPosition: function getLabelPosition(a, l, n, h, b, g, A, u) {
	        var p = this.axis,
	            m = p.transA,
	            d = p.reversed,
	            r = p.staggerLines,
	            G = p.tickRotCorr || { x: 0, y: 0 },
	            f = b.y;C(f) || (f = 0 === p.side ? n.rotation ? -8 : -n.getBBox().height : 2 === p.side ? G.y + 8 : Math.cos(n.rotation * q) * (G.y - n.getBBox(!1, 0).height / 2));a = a + b.x + G.x - (g && h ? g * m * (d ? -1 : 1) : 0);l = l + f - (g && !h ? g * m * (d ? 1 : -1) : 0);r && (n = A / (u || 1) % r, p.opposite && (n = r - n - 1), l += p.labelOffset / r * n);return { x: a, y: Math.round(l) };
	      }, getMarkPath: function getMarkPath(a, l, n, h, b, g) {
	        return g.crispLine(["M", a, l, "L", a + (b ? 0 : -n), l + (b ? n : 0)], h);
	      }, render: function render(a, q, n) {
	        var h = this.axis,
	            b = h.options,
	            g = h.chart.renderer,
	            A = h.horiz,
	            u = this.type,
	            p = this.label,
	            m = this.pos,
	            d = b.labels,
	            r = this.gridLine,
	            G = u ? u + "Tick" : "tick",
	            f = h.tickSize(G),
	            z = this.mark,
	            e = !z,
	            y = d.step,
	            c = {},
	            w = !0,
	            D = h.tickmarkOffset,
	            I = this.getPosition(A, m, D, q),
	            L = I.x,
	            I = I.y,
	            k = A && L === h.pos + h.len || !A && I === h.pos ? -1 : 1,
	            H = u ? u + "Grid" : "grid",
	            R = b[H + "LineWidth"],
	            M = b[H + "LineColor"],
	            t = b[H + "LineDashStyle"],
	            H = l(b[G + "Width"], !u && h.isXAxis ? 1 : 0),
	            G = b[G + "Color"];n = l(n, 1);this.isActive = !0;r || (c.stroke = M, c["stroke-width"] = R, t && (c.dashstyle = t), u || (c.zIndex = 1), q && (c.opacity = 0), this.gridLine = r = g.path().attr(c).addClass("highcharts-" + (u ? u + "-" : "") + "grid-line").add(h.gridGroup));if (!q && r && (m = h.getPlotLinePath(m + D, r.strokeWidth() * k, q, !0))) r[this.isNew ? "attr" : "animate"]({ d: m, opacity: n });f && (h.opposite && (f[0] = -f[0]), e && (this.mark = z = g.path().addClass("highcharts-" + (u ? u + "-" : "") + "tick").add(h.axisGroup), z.attr({ stroke: G, "stroke-width": H })), z[e ? "attr" : "animate"]({ d: this.getMarkPath(L, I, f[0], z.strokeWidth() * k, A, g), opacity: n }));p && F(L) && (p.xy = I = this.getLabelPosition(L, I, p, A, d, D, a, y), this.isFirst && !this.isLast && !l(b.showFirstLabel, 1) || this.isLast && !this.isFirst && !l(b.showLastLabel, 1) ? w = !1 : !A || h.isRadial || d.step || d.rotation || q || 0 === n || this.handleOverflow(I), y && a % y && (w = !1), w && F(I.y) ? (I.opacity = n, p[this.isNew ? "attr" : "animate"](I)) : p.attr("y", -9999), this.isNew = !1);
	      }, destroy: function destroy() {
	        E(this, this.axis);
	      } };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.animObject,
	        E = a.arrayMax,
	        F = a.arrayMin,
	        v = a.AxisPlotLineOrBandExtension,
	        l = a.color,
	        q = a.correctFloat,
	        x = a.defaultOptions,
	        t = a.defined,
	        n = a.deg2rad,
	        h = a.destroyObjectProperties,
	        b = a.each,
	        g = a.extend,
	        A = a.fireEvent,
	        u = a.format,
	        p = a.getMagnitude,
	        m = a.grep,
	        d = a.inArray,
	        r = a.isArray,
	        G = a.isNumber,
	        f = a.isString,
	        z = a.merge,
	        e = a.normalizeTickInterval,
	        y = a.pick,
	        c = a.PlotLineOrBand,
	        w = a.removeEvent,
	        D = a.splat,
	        I = a.syncTimeout,
	        L = a.Tick;a.Axis = function () {
	      this.init.apply(this, arguments);
	    };a.Axis.prototype = { defaultOptions: { dateTimeLabelFormats: { millisecond: "%H:%M:%S.%L", second: "%H:%M:%S", minute: "%H:%M", hour: "%H:%M",
	          day: "%e. %b", week: "%e. %b", month: "%b '%y", year: "%Y" }, endOnTick: !1, labels: { enabled: !0, style: { color: "#666666", cursor: "default", fontSize: "11px" }, x: 0 }, minPadding: .01, maxPadding: .01, minorTickLength: 2, minorTickPosition: "outside", startOfWeek: 1, startOnTick: !1, tickLength: 10, tickmarkPlacement: "between", tickPixelInterval: 100, tickPosition: "outside", title: { align: "middle", style: { color: "#666666" } }, type: "linear", minorGridLineColor: "#f2f2f2", minorGridLineWidth: 1, minorTickColor: "#999999", lineColor: "#ccd6eb", lineWidth: 1,
	        gridLineColor: "#e6e6e6", tickColor: "#ccd6eb" }, defaultYAxisOptions: { endOnTick: !0, tickPixelInterval: 72, showLastLabel: !0, labels: { x: -8 }, maxPadding: .05, minPadding: .05, startOnTick: !0, title: { rotation: 270, text: "Values" }, stackLabels: { enabled: !1, formatter: function formatter() {
	            return a.numberFormat(this.total, -1);
	          }, style: { fontSize: "11px", fontWeight: "bold", color: "#000000", textOutline: "1px contrast" } }, gridLineWidth: 1, lineWidth: 0 }, defaultLeftAxisOptions: { labels: { x: -15 }, title: { rotation: 270 } }, defaultRightAxisOptions: { labels: { x: 15 },
	        title: { rotation: 90 } }, defaultBottomAxisOptions: { labels: { autoRotation: [-45], x: 0 }, title: { rotation: 0 } }, defaultTopAxisOptions: { labels: { autoRotation: [-45], x: 0 }, title: { rotation: 0 } }, init: function init(a, b) {
	        var k = b.isX;this.chart = a;this.horiz = a.inverted ? !k : k;this.isXAxis = k;this.coll = this.coll || (k ? "xAxis" : "yAxis");this.opposite = b.opposite;this.side = b.side || (this.horiz ? this.opposite ? 0 : 2 : this.opposite ? 1 : 3);this.setOptions(b);var c = this.options,
	            e = c.type;this.labelFormatter = c.labels.formatter || this.defaultLabelFormatter;
	        this.userOptions = b;this.minPixelPadding = 0;this.reversed = c.reversed;this.visible = !1 !== c.visible;this.zoomEnabled = !1 !== c.zoomEnabled;this.hasNames = "category" === e || !0 === c.categories;this.categories = c.categories || this.hasNames;this.names = this.names || [];this.isLog = "logarithmic" === e;this.isDatetimeAxis = "datetime" === e;this.isLinked = t(c.linkedTo);this.ticks = {};this.labelEdge = [];this.minorTicks = {};this.plotLinesAndBands = [];this.alternateBands = {};this.len = 0;this.minRange = this.userMinRange = c.minRange || c.maxZoom;
	        this.range = c.range;this.offset = c.offset || 0;this.stacks = {};this.oldStacks = {};this.stacksTouched = 0;this.min = this.max = null;this.crosshair = y(c.crosshair, D(a.options.tooltip.crosshairs)[k ? 0 : 1], !1);var f;b = this.options.events;-1 === d(this, a.axes) && (k ? a.axes.splice(a.xAxis.length, 0, this) : a.axes.push(this), a[this.coll].push(this));this.series = this.series || [];a.inverted && k && void 0 === this.reversed && (this.reversed = !0);this.removePlotLine = this.removePlotBand = this.removePlotBandOrLine;for (f in b) {
	          B(this, f, b[f]);
	        }this.isLog && (this.val2lin = this.log2lin, this.lin2val = this.lin2log);
	      }, setOptions: function setOptions(a) {
	        this.options = z(this.defaultOptions, "yAxis" === this.coll && this.defaultYAxisOptions, [this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side], z(x[this.coll], a));
	      }, defaultLabelFormatter: function defaultLabelFormatter() {
	        var k = this.axis,
	            b = this.value,
	            c = k.categories,
	            e = this.dateTimeLabelFormat,
	            d = x.lang,
	            f = d.numericSymbols,
	            d = d.numericSymbolMagnitude || 1E3,
	            w = f && f.length,
	            m,
	            r = k.options.labels.format,
	            k = k.isLog ? b : k.tickInterval;if (r) m = u(r, this);else if (c) m = b;else if (e) m = a.dateFormat(e, b);else if (w && 1E3 <= k) for (; w-- && void 0 === m;) {
	          c = Math.pow(d, w + 1), k >= c && 0 === 10 * b % c && null !== f[w] && 0 !== b && (m = a.numberFormat(b / c, -1) + f[w]);
	        }void 0 === m && (m = 1E4 <= Math.abs(b) ? a.numberFormat(b, -1) : a.numberFormat(b, -1, void 0, ""));return m;
	      }, getSeriesExtremes: function getSeriesExtremes() {
	        var a = this,
	            c = a.chart;a.hasVisibleSeries = !1;a.dataMin = a.dataMax = a.threshold = null;a.softThreshold = !a.isXAxis;a.buildStacks && a.buildStacks();b(a.series, function (k) {
	          if (k.visible || !c.options.chart.ignoreHiddenSeries) {
	            var b = k.options,
	                e = b.threshold,
	                d;a.hasVisibleSeries = !0;a.isLog && 0 >= e && (e = null);if (a.isXAxis) b = k.xData, b.length && (k = F(b), G(k) || k instanceof Date || (b = m(b, function (a) {
	              return G(a);
	            }), k = F(b)), a.dataMin = Math.min(y(a.dataMin, b[0]), k), a.dataMax = Math.max(y(a.dataMax, b[0]), E(b)));else if (k.getExtremes(), d = k.dataMax, k = k.dataMin, t(k) && t(d) && (a.dataMin = Math.min(y(a.dataMin, k), k), a.dataMax = Math.max(y(a.dataMax, d), d)), t(e) && (a.threshold = e), !b.softThreshold || a.isLog) a.softThreshold = !1;
	          }
	        });
	      }, translate: function translate(a, b, c, e, d, f) {
	        var k = this.linkedParent || this,
	            w = 1,
	            m = 0,
	            r = e ? k.oldTransA : k.transA;e = e ? k.oldMin : k.min;var H = k.minPixelPadding;d = (k.isOrdinal || k.isBroken || k.isLog && d) && k.lin2val;r || (r = k.transA);c && (w *= -1, m = k.len);k.reversed && (w *= -1, m -= w * (k.sector || k.len));b ? (a = (a * w + m - H) / r + e, d && (a = k.lin2val(a))) : (d && (a = k.val2lin(a)), a = w * (a - e) * r + m + w * H + (G(f) ? r * f : 0));return a;
	      }, toPixels: function toPixels(a, b) {
	        return this.translate(a, !1, !this.horiz, null, !0) + (b ? 0 : this.pos);
	      }, toValue: function toValue(a, b) {
	        return this.translate(a - (b ? 0 : this.pos), !0, !this.horiz, null, !0);
	      }, getPlotLinePath: function getPlotLinePath(a, b, c, e, d) {
	        var k = this.chart,
	            f = this.left,
	            w = this.top,
	            m,
	            r,
	            H = c && k.oldChartHeight || k.chartHeight,
	            p = c && k.oldChartWidth || k.chartWidth,
	            D;m = this.transB;var g = function g(a, k, b) {
	          if (a < k || a > b) e ? a = Math.min(Math.max(k, a), b) : D = !0;return a;
	        };d = y(d, this.translate(a, null, null, c));a = c = Math.round(d + m);m = r = Math.round(H - d - m);G(d) ? this.horiz ? (m = w, r = H - this.bottom, a = c = g(a, f, f + this.width)) : (a = f, c = p - this.right, m = r = g(m, w, w + this.height)) : D = !0;return D && !e ? null : k.renderer.crispLine(["M", a, m, "L", c, r], b || 1);
	      }, getLinearTickPositions: function getLinearTickPositions(a, b, c) {
	        var k,
	            e = q(Math.floor(b / a) * a),
	            d = q(Math.ceil(c / a) * a),
	            f = [];if (b === c && G(b)) return [b];for (b = e; b <= d;) {
	          f.push(b);b = q(b + a);if (b === k) break;k = b;
	        }return f;
	      }, getMinorTickPositions: function getMinorTickPositions() {
	        var a = this.options,
	            b = this.tickPositions,
	            c = this.minorTickInterval,
	            e = [],
	            d,
	            f = this.pointRangePadding || 0;d = this.min - f;var f = this.max + f,
	            w = f - d;if (w && w / c < this.len / 3) if (this.isLog) for (f = b.length, d = 1; d < f; d++) {
	          e = e.concat(this.getLogTickPositions(c, b[d - 1], b[d], !0));
	        } else if (this.isDatetimeAxis && "auto" === a.minorTickInterval) e = e.concat(this.getTimeTicks(this.normalizeTimeTickInterval(c), d, f, a.startOfWeek));else for (b = d + (b[0] - d) % c; b <= f && b !== e[0]; b += c) {
	          e.push(b);
	        }0 !== e.length && this.trimTicks(e, a.startOnTick, a.endOnTick);return e;
	      }, adjustForMinRange: function adjustForMinRange() {
	        var a = this.options,
	            c = this.min,
	            e = this.max,
	            d,
	            f = this.dataMax - this.dataMin >= this.minRange,
	            w,
	            m,
	            r,
	            p,
	            D,
	            g;this.isXAxis && void 0 === this.minRange && !this.isLog && (t(a.min) || t(a.max) ? this.minRange = null : (b(this.series, function (a) {
	          p = a.xData;for (m = D = a.xIncrement ? 1 : p.length - 1; 0 < m; m--) {
	            if (r = p[m] - p[m - 1], void 0 === w || r < w) w = r;
	          }
	        }), this.minRange = Math.min(5 * w, this.dataMax - this.dataMin)));e - c < this.minRange && (g = this.minRange, d = (g - e + c) / 2, d = [c - d, y(a.min, c - d)], f && (d[2] = this.isLog ? this.log2lin(this.dataMin) : this.dataMin), c = E(d), e = [c + g, y(a.max, c + g)], f && (e[2] = this.isLog ? this.log2lin(this.dataMax) : this.dataMax), e = F(e), e - c < g && (d[0] = e - g, d[1] = y(a.min, e - g), c = E(d)));this.min = c;this.max = e;
	      }, getClosest: function getClosest() {
	        var a;this.categories ? a = 1 : b(this.series, function (k) {
	          var b = k.closestPointRange,
	              c = k.visible || !k.chart.options.chart.ignoreHiddenSeries;!k.noSharedTooltip && t(b) && c && (a = t(a) ? Math.min(a, b) : b);
	        });return a;
	      }, nameToX: function nameToX(a) {
	        var b = r(this.categories),
	            k = b ? this.categories : this.names,
	            c = a.options.x,
	            e;a.series.requireSorting = !1;t(c) || (c = !1 === this.options.uniqueNames ? a.series.autoIncrement() : d(a.name, k));-1 === c ? b || (e = k.length) : e = c;this.names[e] = a.name;return e;
	      }, updateNames: function updateNames() {
	        var a = this;0 < this.names.length && (this.names.length = 0, this.minRange = void 0, b(this.series || [], function (k) {
	          k.xIncrement = null;if (!k.points || k.isDirtyData) k.processData(), k.generatePoints();b(k.points, function (b, c) {
	            var e;b.options && void 0 === b.options.x && (e = a.nameToX(b), e !== b.x && (b.x = e, k.xData[c] = e));
	          });
	        }));
	      }, setAxisTranslation: function setAxisTranslation(a) {
	        var k = this,
	            c = k.max - k.min,
	            e = k.axisPointRange || 0,
	            d,
	            w = 0,
	            m = 0,
	            r = k.linkedParent,
	            p = !!k.categories,
	            D = k.transA,
	            g = k.isXAxis;if (g || p || e) d = k.getClosest(), r ? (w = r.minPointOffset, m = r.pointRangePadding) : b(k.series, function (a) {
	          var b = p ? 1 : g ? y(a.options.pointRange, d, 0) : k.axisPointRange || 0;a = a.options.pointPlacement;
	          e = Math.max(e, b);k.single || (w = Math.max(w, f(a) ? 0 : b / 2), m = Math.max(m, "on" === a ? 0 : b));
	        }), r = k.ordinalSlope && d ? k.ordinalSlope / d : 1, k.minPointOffset = w *= r, k.pointRangePadding = m *= r, k.pointRange = Math.min(e, c), g && (k.closestPointRange = d);a && (k.oldTransA = D);k.translationSlope = k.transA = D = k.len / (c + m || 1);k.transB = k.horiz ? k.left : k.bottom;k.minPixelPadding = D * w;
	      }, minFromRange: function minFromRange() {
	        return this.max - this.range;
	      }, setTickInterval: function setTickInterval(k) {
	        var c = this,
	            d = c.chart,
	            f = c.options,
	            w = c.isLog,
	            m = c.log2lin,
	            r = c.isDatetimeAxis,
	            D = c.isXAxis,
	            g = c.isLinked,
	            u = f.maxPadding,
	            h = f.minPadding,
	            z = f.tickInterval,
	            I = f.tickPixelInterval,
	            n = c.categories,
	            L = c.threshold,
	            l = c.softThreshold,
	            x,
	            v,
	            C,
	            B;r || n || g || this.getTickAmount();C = y(c.userMin, f.min);B = y(c.userMax, f.max);g ? (c.linkedParent = d[c.coll][f.linkedTo], d = c.linkedParent.getExtremes(), c.min = y(d.min, d.dataMin), c.max = y(d.max, d.dataMax), f.type !== c.linkedParent.options.type && a.error(11, 1)) : (!l && t(L) && (c.dataMin >= L ? (x = L, h = 0) : c.dataMax <= L && (v = L, u = 0)), c.min = y(C, x, c.dataMin), c.max = y(B, v, c.dataMax));w && (!k && 0 >= Math.min(c.min, y(c.dataMin, c.min)) && a.error(10, 1), c.min = q(m(c.min), 15), c.max = q(m(c.max), 15));c.range && t(c.max) && (c.userMin = c.min = C = Math.max(c.min, c.minFromRange()), c.userMax = B = c.max, c.range = null);A(c, "foundExtremes");c.beforePadding && c.beforePadding();c.adjustForMinRange();!(n || c.axisPointRange || c.usePercentage || g) && t(c.min) && t(c.max) && (m = c.max - c.min) && (!t(C) && h && (c.min -= m * h), !t(B) && u && (c.max += m * u));G(f.floor) ? c.min = Math.max(c.min, f.floor) : G(f.softMin) && (c.min = Math.min(c.min, f.softMin));G(f.ceiling) ? c.max = Math.min(c.max, f.ceiling) : G(f.softMax) && (c.max = Math.max(c.max, f.softMax));l && t(c.dataMin) && (L = L || 0, !t(C) && c.min < L && c.dataMin >= L ? c.min = L : !t(B) && c.max > L && c.dataMax <= L && (c.max = L));c.tickInterval = c.min === c.max || void 0 === c.min || void 0 === c.max ? 1 : g && !z && I === c.linkedParent.options.tickPixelInterval ? z = c.linkedParent.tickInterval : y(z, this.tickAmount ? (c.max - c.min) / Math.max(this.tickAmount - 1, 1) : void 0, n ? 1 : (c.max - c.min) * I / Math.max(c.len, I));D && !k && b(c.series, function (a) {
	          a.processData(c.min !== c.oldMin || c.max !== c.oldMax);
	        });c.setAxisTranslation(!0);c.beforeSetTickPositions && c.beforeSetTickPositions();c.postProcessTickInterval && (c.tickInterval = c.postProcessTickInterval(c.tickInterval));c.pointRange && !z && (c.tickInterval = Math.max(c.pointRange, c.tickInterval));k = y(f.minTickInterval, c.isDatetimeAxis && c.closestPointRange);!z && c.tickInterval < k && (c.tickInterval = k);r || w || z || (c.tickInterval = e(c.tickInterval, null, p(c.tickInterval), y(f.allowDecimals, !(.5 < c.tickInterval && 5 > c.tickInterval && 1E3 < c.max && 9999 > c.max)), !!this.tickAmount));
	        this.tickAmount || (c.tickInterval = c.unsquish());this.setTickPositions();
	      }, setTickPositions: function setTickPositions() {
	        var a = this.options,
	            c,
	            b = a.tickPositions,
	            e = a.tickPositioner,
	            d = a.startOnTick,
	            f = a.endOnTick,
	            w;this.tickmarkOffset = this.categories && "between" === a.tickmarkPlacement && 1 === this.tickInterval ? .5 : 0;this.minorTickInterval = "auto" === a.minorTickInterval && this.tickInterval ? this.tickInterval / 5 : a.minorTickInterval;this.tickPositions = c = b && b.slice();!c && (c = this.isDatetimeAxis ? this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval, a.units), this.min, this.max, a.startOfWeek, this.ordinalPositions, this.closestPointRange, !0) : this.isLog ? this.getLogTickPositions(this.tickInterval, this.min, this.max) : this.getLinearTickPositions(this.tickInterval, this.min, this.max), c.length > this.len && (c = [c[0], c.pop()]), this.tickPositions = c, e && (e = e.apply(this, [this.min, this.max]))) && (this.tickPositions = c = e);this.isLinked || (this.trimTicks(c, d, f), this.min === this.max && t(this.min) && !this.tickAmount && (w = !0, this.min -= .5, this.max += .5), this.single = w, b || e || this.adjustTickAmount());
	      },
	      trimTicks: function trimTicks(a, c, b) {
	        var k = a[0],
	            e = a[a.length - 1],
	            d = this.minPointOffset || 0;if (c) this.min = k;else for (; this.min - d > a[0];) {
	          a.shift();
	        }if (b) this.max = e;else for (; this.max + d < a[a.length - 1];) {
	          a.pop();
	        }0 === a.length && t(k) && a.push((e + k) / 2);
	      }, alignToOthers: function alignToOthers() {
	        var a = {},
	            c,
	            e = this.options;!1 === this.chart.options.chart.alignTicks || !1 === e.alignTicks || this.isLog || b(this.chart[this.coll], function (b) {
	          var k = b.options,
	              k = [b.horiz ? k.left : k.top, k.width, k.height, k.pane].join();b.series.length && (a[k] ? c = !0 : a[k] = 1);
	        });return c;
	      },
	      getTickAmount: function getTickAmount() {
	        var a = this.options,
	            c = a.tickAmount,
	            b = a.tickPixelInterval;!t(a.tickInterval) && this.len < b && !this.isRadial && !this.isLog && a.startOnTick && a.endOnTick && (c = 2);!c && this.alignToOthers() && (c = Math.ceil(this.len / b) + 1);4 > c && (this.finalTickAmt = c, c = 5);this.tickAmount = c;
	      }, adjustTickAmount: function adjustTickAmount() {
	        var a = this.tickInterval,
	            c = this.tickPositions,
	            b = this.tickAmount,
	            e = this.finalTickAmt,
	            d = c && c.length;if (d < b) {
	          for (; c.length < b;) {
	            c.push(q(c[c.length - 1] + a));
	          }this.transA *= (d - 1) / (b - 1);this.max = c[c.length - 1];
	        } else d > b && (this.tickInterval *= 2, this.setTickPositions());if (t(e)) {
	          for (a = b = c.length; a--;) {
	            (3 === e && 1 === a % 2 || 2 >= e && 0 < a && a < b - 1) && c.splice(a, 1);
	          }this.finalTickAmt = void 0;
	        }
	      }, setScale: function setScale() {
	        var a, c;this.oldMin = this.min;this.oldMax = this.max;this.oldAxisLength = this.len;this.setAxisSize();c = this.len !== this.oldAxisLength;b(this.series, function (c) {
	          if (c.isDirtyData || c.isDirty || c.xAxis.isDirty) a = !0;
	        });c || a || this.isLinked || this.forceRedraw || this.userMin !== this.oldUserMin || this.userMax !== this.oldUserMax || this.alignToOthers() ? (this.resetStacks && this.resetStacks(), this.forceRedraw = !1, this.getSeriesExtremes(), this.setTickInterval(), this.oldUserMin = this.userMin, this.oldUserMax = this.userMax, this.isDirty || (this.isDirty = c || this.min !== this.oldMin || this.max !== this.oldMax)) : this.cleanStacks && this.cleanStacks();
	      }, setExtremes: function setExtremes(a, c, e, d, f) {
	        var k = this,
	            w = k.chart;e = y(e, !0);b(k.series, function (a) {
	          delete a.kdTree;
	        });f = g(f, { min: a, max: c });A(k, "setExtremes", f, function () {
	          k.userMin = a;k.userMax = c;k.eventArgs = f;e && w.redraw(d);
	        });
	      }, zoom: function zoom(a, c) {
	        var b = this.dataMin,
	            k = this.dataMax,
	            e = this.options,
	            d = Math.min(b, y(e.min, b)),
	            e = Math.max(k, y(e.max, k));if (a !== this.min || c !== this.max) this.allowZoomOutside || (t(b) && (a < d && (a = d), a > e && (a = e)), t(k) && (c < d && (c = d), c > e && (c = e))), this.displayBtn = void 0 !== a || void 0 !== c, this.setExtremes(a, c, !1, void 0, { trigger: "zoom" });return !0;
	      }, setAxisSize: function setAxisSize() {
	        var a = this.chart,
	            c = this.options,
	            b = c.offsetLeft || 0,
	            e = this.horiz,
	            d = y(c.width, a.plotWidth - b + (c.offsetRight || 0)),
	            f = y(c.height, a.plotHeight),
	            w = y(c.top, a.plotTop),
	            c = y(c.left, a.plotLeft + b),
	            b = /%$/;b.test(f) && (f = Math.round(parseFloat(f) / 100 * a.plotHeight));b.test(w) && (w = Math.round(parseFloat(w) / 100 * a.plotHeight + a.plotTop));this.left = c;this.top = w;this.width = d;this.height = f;this.bottom = a.chartHeight - f - w;this.right = a.chartWidth - d - c;this.len = Math.max(e ? d : f, 0);this.pos = e ? c : w;
	      }, getExtremes: function getExtremes() {
	        var a = this.isLog,
	            c = this.lin2log;return { min: a ? q(c(this.min)) : this.min, max: a ? q(c(this.max)) : this.max, dataMin: this.dataMin, dataMax: this.dataMax, userMin: this.userMin, userMax: this.userMax };
	      },
	      getThreshold: function getThreshold(a) {
	        var c = this.isLog,
	            b = this.lin2log,
	            k = c ? b(this.min) : this.min,
	            c = c ? b(this.max) : this.max;null === a ? a = k : k > a ? a = k : c < a && (a = c);return this.translate(a, 0, 1, 0, 1);
	      }, autoLabelAlign: function autoLabelAlign(a) {
	        a = (y(a, 0) - 90 * this.side + 720) % 360;return 15 < a && 165 > a ? "right" : 195 < a && 345 > a ? "left" : "center";
	      }, tickSize: function tickSize(a) {
	        var c = this.options,
	            b = c[a + "Length"],
	            k = y(c[a + "Width"], "tick" === a && this.isXAxis ? 1 : 0);if (k && b) return "inside" === c[a + "Position"] && (b = -b), [b, k];
	      }, labelMetrics: function labelMetrics() {
	        return this.chart.renderer.fontMetrics(this.options.labels.style && this.options.labels.style.fontSize, this.ticks[0] && this.ticks[0].label);
	      }, unsquish: function unsquish() {
	        var a = this.options.labels,
	            c = this.horiz,
	            e = this.tickInterval,
	            d = e,
	            f = this.len / (((this.categories ? 1 : 0) + this.max - this.min) / e),
	            w,
	            m = a.rotation,
	            r = this.labelMetrics(),
	            p,
	            D = Number.MAX_VALUE,
	            g,
	            u = function u(a) {
	          a /= f || 1;a = 1 < a ? Math.ceil(a) : 1;return a * e;
	        };c ? (g = !a.staggerLines && !a.step && (t(m) ? [m] : f < y(a.autoRotationLimit, 80) && a.autoRotation)) && b(g, function (a) {
	          var c;if (a === m || a && -90 <= a && 90 >= a) p = u(Math.abs(r.h / Math.sin(n * a))), c = p + Math.abs(a / 360), c < D && (D = c, w = a, d = p);
	        }) : a.step || (d = u(r.h));this.autoRotation = g;this.labelRotation = y(w, m);return d;
	      }, getSlotWidth: function getSlotWidth() {
	        var a = this.chart,
	            c = this.horiz,
	            b = this.options.labels,
	            e = Math.max(this.tickPositions.length - (this.categories ? 0 : 1), 1),
	            d = a.margin[3];return c && 2 > (b.step || 0) && !b.rotation && (this.staggerLines || 1) * a.plotWidth / e || !c && (d && d - a.spacing[3] || .33 * a.chartWidth);
	      }, renderUnsquish: function renderUnsquish() {
	        var a = this.chart,
	            c = a.renderer,
	            e = this.tickPositions,
	            d = this.ticks,
	            w = this.options.labels,
	            m = this.horiz,
	            r = this.getSlotWidth(),
	            p = Math.max(1, Math.round(r - 2 * (w.padding || 5))),
	            D = {},
	            g = this.labelMetrics(),
	            u = w.style && w.style.textOverflow,
	            h,
	            y = 0,
	            G,
	            I;f(w.rotation) || (D.rotation = w.rotation || 0);b(e, function (a) {
	          (a = d[a]) && a.labelLength > y && (y = a.labelLength);
	        });this.maxLabelLength = y;if (this.autoRotation) y > p && y > g.h ? D.rotation = this.labelRotation : this.labelRotation = 0;else if (r && (h = { width: p + "px" }, !u)) for (h.textOverflow = "clip", G = e.length; !m && G--;) {
	          if (I = e[G], p = d[I].label) p.styles && "ellipsis" === p.styles.textOverflow ? p.css({ textOverflow: "clip" }) : d[I].labelLength > r && p.css({ width: r + "px" }), p.getBBox().height > this.len / e.length - (g.h - g.f) && (p.specCss = { textOverflow: "ellipsis" });
	        }D.rotation && (h = { width: (y > .5 * a.chartHeight ? .33 * a.chartHeight : a.chartHeight) + "px" }, u || (h.textOverflow = "ellipsis"));if (this.labelAlign = w.align || this.autoLabelAlign(this.labelRotation)) D.align = this.labelAlign;b(e, function (a) {
	          var c = (a = d[a]) && a.label;c && (c.attr(D), h && c.css(z(h, c.specCss)), delete c.specCss, a.rotation = D.rotation);
	        });this.tickRotCorr = c.rotCorr(g.b, this.labelRotation || 0, 0 !== this.side);
	      }, hasData: function hasData() {
	        return this.hasVisibleSeries || t(this.min) && t(this.max) && !!this.tickPositions;
	      }, addTitle: function addTitle(a) {
	        var c = this.chart.renderer,
	            b = this.horiz,
	            k = this.opposite,
	            e = this.options.title,
	            d;this.axisTitle || ((d = e.textAlign) || (d = (b ? { low: "left", middle: "center", high: "right" } : { low: k ? "right" : "left", middle: "center", high: k ? "left" : "right" })[e.align]), this.axisTitle = c.text(e.text, 0, 0, e.useHTML).attr({ zIndex: 7, rotation: e.rotation || 0, align: d }).addClass("highcharts-axis-title").css(e.style).add(this.axisGroup), this.axisTitle.isNew = !0);this.axisTitle[a ? "show" : "hide"](!0);
	      }, getOffset: function getOffset() {
	        var a = this,
	            c = a.chart,
	            e = c.renderer,
	            d = a.options,
	            f = a.tickPositions,
	            w = a.ticks,
	            m = a.horiz,
	            r = a.side,
	            p = c.inverted ? [1, 0, 3, 2][r] : r,
	            D,
	            g,
	            u = 0,
	            h,
	            z = 0,
	            G = d.title,
	            I = d.labels,
	            A = 0,
	            n = c.axisOffset,
	            c = c.clipOffset,
	            l = [-1, 1, 1, -1][r],
	            q,
	            x = d.className,
	            v = a.axisParent,
	            C = this.tickSize("tick");D = a.hasData();a.showAxis = g = D || y(d.showEmpty, !0);a.staggerLines = a.horiz && I.staggerLines;a.axisGroup || (a.gridGroup = e.g("grid").attr({ zIndex: d.gridZIndex || 1 }).addClass("highcharts-" + this.coll.toLowerCase() + "-grid " + (x || "")).add(v), a.axisGroup = e.g("axis").attr({ zIndex: d.zIndex || 2 }).addClass("highcharts-" + this.coll.toLowerCase() + " " + (x || "")).add(v), a.labelGroup = e.g("axis-labels").attr({ zIndex: I.zIndex || 7 }).addClass("highcharts-" + a.coll.toLowerCase() + "-labels " + (x || "")).add(v));if (D || a.isLinked) b(f, function (c) {
	          w[c] ? w[c].addLabel() : w[c] = new L(a, c);
	        }), a.renderUnsquish(), !1 === I.reserveSpace || 0 !== r && 2 !== r && { 1: "left", 3: "right" }[r] !== a.labelAlign && "center" !== a.labelAlign || b(f, function (a) {
	          A = Math.max(w[a].getLabelSize(), A);
	        }), a.staggerLines && (A *= a.staggerLines, a.labelOffset = A * (a.opposite ? -1 : 1));else for (q in w) {
	          w[q].destroy(), delete w[q];
	        }G && G.text && !1 !== G.enabled && (a.addTitle(g), g && (u = a.axisTitle.getBBox()[m ? "height" : "width"], h = G.offset, z = t(h) ? 0 : y(G.margin, m ? 5 : 10)));a.renderLine();a.offset = l * y(d.offset, n[r]);a.tickRotCorr = a.tickRotCorr || { x: 0, y: 0 };e = 0 === r ? -a.labelMetrics().h : 2 === r ? a.tickRotCorr.y : 0;z = Math.abs(A) + z;A && (z = z - e + l * (m ? y(I.y, a.tickRotCorr.y + 8 * l) : I.x));a.axisTitleMargin = y(h, z);
	        n[r] = Math.max(n[r], a.axisTitleMargin + u + l * a.offset, z, D && f.length && C ? C[0] : 0);d = d.offset ? 0 : 2 * Math.floor(a.axisLine.strokeWidth() / 2);c[p] = Math.max(c[p], d);
	      }, getLinePath: function getLinePath(a) {
	        var c = this.chart,
	            b = this.opposite,
	            k = this.offset,
	            e = this.horiz,
	            d = this.left + (b ? this.width : 0) + k,
	            k = c.chartHeight - this.bottom - (b ? this.height : 0) + k;b && (a *= -1);return c.renderer.crispLine(["M", e ? this.left : d, e ? k : this.top, "L", e ? c.chartWidth - this.right : d, e ? k : c.chartHeight - this.bottom], a);
	      }, renderLine: function renderLine() {
	        this.axisLine || (this.axisLine = this.chart.renderer.path().addClass("highcharts-axis-line").add(this.axisGroup), this.axisLine.attr({ stroke: this.options.lineColor, "stroke-width": this.options.lineWidth, zIndex: 7 }));
	      }, getTitlePosition: function getTitlePosition() {
	        var a = this.horiz,
	            c = this.left,
	            b = this.top,
	            e = this.len,
	            d = this.options.title,
	            f = a ? c : b,
	            w = this.opposite,
	            m = this.offset,
	            r = d.x || 0,
	            p = d.y || 0,
	            D = this.chart.renderer.fontMetrics(d.style && d.style.fontSize, this.axisTitle).f,
	            e = { low: f + (a ? 0 : e), middle: f + e / 2, high: f + (a ? e : 0) }[d.align],
	            c = (a ? b + this.height : c) + (a ? 1 : -1) * (w ? -1 : 1) * this.axisTitleMargin + (2 === this.side ? D : 0);return { x: a ? e + r : c + (w ? this.width : 0) + m + r, y: a ? c + p - (w ? this.height : 0) + m : e + p };
	      }, render: function render() {
	        var a = this,
	            e = a.chart,
	            d = e.renderer,
	            f = a.options,
	            w = a.isLog,
	            m = a.lin2log,
	            r = a.isLinked,
	            p = a.tickPositions,
	            D = a.axisTitle,
	            g = a.ticks,
	            u = a.minorTicks,
	            h = a.alternateBands,
	            z = f.stackLabels,
	            y = f.alternateGridColor,
	            A = a.tickmarkOffset,
	            n = a.axisLine,
	            l = e.hasRendered && G(a.oldMin),
	            q = a.showAxis,
	            t = C(d.globalAnimation),
	            x,
	            v;a.labelEdge.length = 0;a.overlap = !1;b([g, u, h], function (a) {
	          for (var c in a) {
	            a[c].isActive = !1;
	          }
	        });if (a.hasData() || r) a.minorTickInterval && !a.categories && b(a.getMinorTickPositions(), function (c) {
	          u[c] || (u[c] = new L(a, c, "minor"));l && u[c].isNew && u[c].render(null, !0);u[c].render(null, !1, 1);
	        }), p.length && (b(p, function (c, b) {
	          if (!r || c >= a.min && c <= a.max) g[c] || (g[c] = new L(a, c)), l && g[c].isNew && g[c].render(b, !0, .1), g[c].render(b);
	        }), A && (0 === a.min || a.single) && (g[-1] || (g[-1] = new L(a, -1, null, !0)), g[-1].render(-1))), y && b(p, function (b, k) {
	          v = void 0 !== p[k + 1] ? p[k + 1] + A : a.max - A;0 === k % 2 && b < a.max && v <= a.max + (e.polar ? -A : A) && (h[b] || (h[b] = new c(a)), x = b + A, h[b].options = { from: w ? m(x) : x, to: w ? m(v) : v, color: y }, h[b].render(), h[b].isActive = !0);
	        }), a._addedPlotLB || (b((f.plotLines || []).concat(f.plotBands || []), function (c) {
	          a.addPlotBandOrLine(c);
	        }), a._addedPlotLB = !0);b([g, u, h], function (a) {
	          var c,
	              b,
	              k = [],
	              d = t.duration;for (c in a) {
	            a[c].isActive || (a[c].render(c, !1, 0), a[c].isActive = !1, k.push(c));
	          }I(function () {
	            for (b = k.length; b--;) {
	              a[k[b]] && !a[k[b]].isActive && (a[k[b]].destroy(), delete a[k[b]]);
	            }
	          }, a !== h && e.hasRendered && d ? d : 0);
	        });n && (n[n.isPlaced ? "animate" : "attr"]({ d: this.getLinePath(n.strokeWidth()) }), n.isPlaced = !0, n[q ? "show" : "hide"](!0));D && q && (D[D.isNew ? "attr" : "animate"](a.getTitlePosition()), D.isNew = !1);z && z.enabled && a.renderStackTotals();a.isDirty = !1;
	      }, redraw: function redraw() {
	        this.visible && (this.render(), b(this.plotLinesAndBands, function (a) {
	          a.render();
	        }));b(this.series, function (a) {
	          a.isDirty = !0;
	        });
	      }, keepProps: "extKey hcEvents names series userMax userMin".split(" "), destroy: function destroy(a) {
	        var c = this,
	            e = c.stacks,
	            k,
	            f = c.plotLinesAndBands,
	            m;a || w(c);for (k in e) {
	          h(e[k]), e[k] = null;
	        }b([c.ticks, c.minorTicks, c.alternateBands], function (a) {
	          h(a);
	        });if (f) for (a = f.length; a--;) {
	          f[a].destroy();
	        }b("stackTotalGroup axisLine axisTitle axisGroup gridGroup labelGroup cross".split(" "), function (a) {
	          c[a] && (c[a] = c[a].destroy());
	        });for (m in c) {
	          c.hasOwnProperty(m) && -1 === d(m, c.keepProps) && delete c[m];
	        }
	      }, drawCrosshair: function drawCrosshair(a, c) {
	        var b,
	            e = this.crosshair,
	            k = y(e.snap, !0),
	            d,
	            f = this.cross;a || (a = this.cross && this.cross.e);this.crosshair && !1 !== (t(c) || !k) ? (k ? t(c) && (d = this.isXAxis ? c.plotX : this.len - c.plotY) : d = a && (this.horiz ? a.chartX - this.pos : this.len - a.chartY + this.pos), t(d) && (b = this.getPlotLinePath(c && (this.isXAxis ? c.x : y(c.stackY, c.y)), null, null, null, d) || null), t(b) ? (c = this.categories && !this.isRadial, f || (this.cross = f = this.chart.renderer.path().addClass("highcharts-crosshair highcharts-crosshair-" + (c ? "category " : "thin ") + e.className).attr({ zIndex: y(e.zIndex, 2) }).add(), f.attr({ stroke: e.color || (c ? l("#ccd6eb").setOpacity(.25).get() : "#cccccc"), "stroke-width": y(e.width, 1) }), e.dashStyle && f.attr({ dashstyle: e.dashStyle })), f.show().attr({ d: b }), c && !e.width && f.attr({ "stroke-width": this.transA }), this.cross.e = a) : this.hideCrosshair()) : this.hideCrosshair();
	      }, hideCrosshair: function hideCrosshair() {
	        this.cross && this.cross.hide();
	      } };g(a.Axis.prototype, v);
	  })(K);(function (a) {
	    var B = a.Axis,
	        C = a.Date,
	        E = a.dateFormat,
	        F = a.defaultOptions,
	        v = a.defined,
	        l = a.each,
	        q = a.extend,
	        x = a.getMagnitude,
	        t = a.getTZOffset,
	        n = a.normalizeTickInterval,
	        h = a.pick,
	        b = a.timeUnits;B.prototype.getTimeTicks = function (a, A, u, p) {
	      var m = [],
	          d = {},
	          r = F.global.useUTC,
	          g,
	          f = new C(A - t(A)),
	          z = C.hcMakeTime,
	          e = a.unitRange,
	          y = a.count,
	          c;if (v(A)) {
	        f[C.hcSetMilliseconds](e >= b.second ? 0 : y * Math.floor(f.getMilliseconds() / y));if (e >= b.second) f[C.hcSetSeconds](e >= b.minute ? 0 : y * Math.floor(f.getSeconds() / y));if (e >= b.minute) f[C.hcSetMinutes](e >= b.hour ? 0 : y * Math.floor(f[C.hcGetMinutes]() / y));if (e >= b.hour) f[C.hcSetHours](e >= b.day ? 0 : y * Math.floor(f[C.hcGetHours]() / y));if (e >= b.day) f[C.hcSetDate](e >= b.month ? 1 : y * Math.floor(f[C.hcGetDate]() / y));e >= b.month && (f[C.hcSetMonth](e >= b.year ? 0 : y * Math.floor(f[C.hcGetMonth]() / y)), g = f[C.hcGetFullYear]());
	        if (e >= b.year) f[C.hcSetFullYear](g - g % y);if (e === b.week) f[C.hcSetDate](f[C.hcGetDate]() - f[C.hcGetDay]() + h(p, 1));g = f[C.hcGetFullYear]();p = f[C.hcGetMonth]();var w = f[C.hcGetDate](),
	            D = f[C.hcGetHours]();if (C.hcTimezoneOffset || C.hcGetTimezoneOffset) c = (!r || !!C.hcGetTimezoneOffset) && (u - A > 4 * b.month || t(A) !== t(u)), f = f.getTime(), f = new C(f + t(f));r = f.getTime();for (A = 1; r < u;) {
	          m.push(r), r = e === b.year ? z(g + A * y, 0) : e === b.month ? z(g, p + A * y) : !c || e !== b.day && e !== b.week ? c && e === b.hour ? z(g, p, w, D + A * y) : r + e * y : z(g, p, w + A * y * (e === b.day ? 1 : 7)), A++;
	        }m.push(r);e <= b.hour && l(m, function (a) {
	          "000000000" === E("%H%M%S%L", a) && (d[a] = "day");
	        });
	      }m.info = q(a, { higherRanks: d, totalRange: e * y });return m;
	    };B.prototype.normalizeTimeTickInterval = function (a, h) {
	      var g = h || [["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], ["second", [1, 2, 5, 10, 15, 30]], ["minute", [1, 2, 5, 10, 15, 30]], ["hour", [1, 2, 3, 4, 6, 8, 12]], ["day", [1, 2]], ["week", [1, 2]], ["month", [1, 2, 3, 4, 6]], ["year", null]];h = g[g.length - 1];var p = b[h[0]],
	          m = h[1],
	          d;for (d = 0; d < g.length && !(h = g[d], p = b[h[0]], m = h[1], g[d + 1] && a <= (p * m[m.length - 1] + b[g[d + 1][0]]) / 2); d++) {}p === b.year && a < 5 * p && (m = [1, 2, 5]);a = n(a / p, m, "year" === h[0] ? Math.max(x(a / p), 1) : 1);return { unitRange: p, count: a, unitName: h[0] };
	    };
	  })(K);(function (a) {
	    var B = a.Axis,
	        C = a.getMagnitude,
	        E = a.map,
	        F = a.normalizeTickInterval,
	        v = a.pick;B.prototype.getLogTickPositions = function (a, q, x, t) {
	      var n = this.options,
	          h = this.len,
	          b = this.lin2log,
	          g = this.log2lin,
	          A = [];t || (this._minorAutoInterval = null);if (.5 <= a) a = Math.round(a), A = this.getLinearTickPositions(a, q, x);else if (.08 <= a) for (var h = Math.floor(q), u, p, m, d, r, n = .3 < a ? [1, 2, 4] : .15 < a ? [1, 2, 4, 6, 8] : [1, 2, 3, 4, 5, 6, 7, 8, 9]; h < x + 1 && !r; h++) {
	        for (p = n.length, u = 0; u < p && !r; u++) {
	          m = g(b(h) * n[u]), m > q && (!t || d <= x) && void 0 !== d && A.push(d), d > x && (r = !0), d = m;
	        }
	      } else q = b(q), x = b(x), a = n[t ? "minorTickInterval" : "tickInterval"], a = v("auto" === a ? null : a, this._minorAutoInterval, n.tickPixelInterval / (t ? 5 : 1) * (x - q) / ((t ? h / this.tickPositions.length : h) || 1)), a = F(a, null, C(a)), A = E(this.getLinearTickPositions(a, q, x), g), t || (this._minorAutoInterval = a / 5);t || (this.tickInterval = a);return A;
	    };B.prototype.log2lin = function (a) {
	      return Math.log(a) / Math.LN10;
	    };B.prototype.lin2log = function (a) {
	      return Math.pow(10, a);
	    };
	  })(K);(function (a) {
	    var B = a.dateFormat,
	        C = a.each,
	        E = a.extend,
	        F = a.format,
	        v = a.isNumber,
	        l = a.map,
	        q = a.merge,
	        x = a.pick,
	        t = a.splat,
	        n = a.syncTimeout,
	        h = a.timeUnits;a.Tooltip = function () {
	      this.init.apply(this, arguments);
	    };a.Tooltip.prototype = { init: function init(a, g) {
	        this.chart = a;this.options = g;this.crosshairs = [];this.now = { x: 0, y: 0 };this.isHidden = !0;this.split = g.split && !a.inverted;this.shared = g.shared || this.split;
	      }, cleanSplit: function cleanSplit(a) {
	        C(this.chart.series, function (b) {
	          var g = b && b.tt;g && (!g.isActive || a ? b.tt = g.destroy() : g.isActive = !1);
	        });
	      }, getLabel: function getLabel() {
	        var a = this.chart.renderer,
	            g = this.options;this.label || (this.split ? this.label = a.g("tooltip") : (this.label = a.label("", 0, 0, g.shape || "callout", null, null, g.useHTML, null, "tooltip").attr({ padding: g.padding, r: g.borderRadius }), this.label.attr({ fill: g.backgroundColor, "stroke-width": g.borderWidth }).css(g.style).shadow(g.shadow)), this.label.attr({ zIndex: 8 }).add());return this.label;
	      }, update: function update(a) {
	        this.destroy();
	        this.init(this.chart, q(!0, this.options, a));
	      }, destroy: function destroy() {
	        this.label && (this.label = this.label.destroy());this.split && this.tt && (this.cleanSplit(this.chart, !0), this.tt = this.tt.destroy());clearTimeout(this.hideTimer);clearTimeout(this.tooltipTimeout);
	      }, move: function move(a, g, h, u) {
	        var b = this,
	            m = b.now,
	            d = !1 !== b.options.animation && !b.isHidden && (1 < Math.abs(a - m.x) || 1 < Math.abs(g - m.y)),
	            r = b.followPointer || 1 < b.len;E(m, { x: d ? (2 * m.x + a) / 3 : a, y: d ? (m.y + g) / 2 : g, anchorX: r ? void 0 : d ? (2 * m.anchorX + h) / 3 : h, anchorY: r ? void 0 : d ? (m.anchorY + u) / 2 : u });b.getLabel().attr(m);d && (clearTimeout(this.tooltipTimeout), this.tooltipTimeout = setTimeout(function () {
	          b && b.move(a, g, h, u);
	        }, 32));
	      }, hide: function hide(a) {
	        var b = this;clearTimeout(this.hideTimer);a = x(a, this.options.hideDelay, 500);this.isHidden || (this.hideTimer = n(function () {
	          b.getLabel()[a ? "fadeOut" : "hide"]();b.isHidden = !0;
	        }, a));
	      }, getAnchor: function getAnchor(a, g) {
	        var b,
	            h = this.chart,
	            p = h.inverted,
	            m = h.plotTop,
	            d = h.plotLeft,
	            r = 0,
	            G = 0,
	            f,
	            z;a = t(a);b = a[0].tooltipPos;this.followPointer && g && (void 0 === g.chartX && (g = h.pointer.normalize(g)), b = [g.chartX - h.plotLeft, g.chartY - m]);b || (C(a, function (a) {
	          f = a.series.yAxis;z = a.series.xAxis;r += a.plotX + (!p && z ? z.left - d : 0);G += (a.plotLow ? (a.plotLow + a.plotHigh) / 2 : a.plotY) + (!p && f ? f.top - m : 0);
	        }), r /= a.length, G /= a.length, b = [p ? h.plotWidth - G : r, this.shared && !p && 1 < a.length && g ? g.chartY - m : p ? h.plotHeight - r : G]);return l(b, Math.round);
	      }, getPosition: function getPosition(a, g, h) {
	        var b = this.chart,
	            p = this.distance,
	            m = {},
	            d = h.h || 0,
	            r,
	            G = ["y", b.chartHeight, g, h.plotY + b.plotTop, b.plotTop, b.plotTop + b.plotHeight],
	            f = ["x", b.chartWidth, a, h.plotX + b.plotLeft, b.plotLeft, b.plotLeft + b.plotWidth],
	            z = !this.followPointer && x(h.ttBelow, !b.inverted === !!h.negative),
	            e = function e(a, c, b, _e, f, w) {
	          var k = b < _e - p,
	              r = _e + p + b < c,
	              D = _e - p - b;_e += p;if (z && r) m[a] = _e;else if (!z && k) m[a] = D;else if (k) m[a] = Math.min(w - b, 0 > D - d ? D : D - d);else if (r) m[a] = Math.max(f, _e + d + b > c ? _e : _e + d);else return !1;
	        },
	            y = function y(a, c, b, e) {
	          var d;e < p || e > c - p ? d = !1 : m[a] = e < b / 2 ? 1 : e > c - b / 2 ? c - b - 2 : e - b / 2;return d;
	        },
	            c = function c(a) {
	          var c = G;G = f;f = c;r = a;
	        },
	            w = function w() {
	          !1 !== e.apply(0, G) ? !1 !== y.apply(0, f) || r || (c(!0), w()) : r ? m.x = m.y = 0 : (c(!0), w());
	        };(b.inverted || 1 < this.len) && c();w();return m;
	      }, defaultFormatter: function defaultFormatter(a) {
	        var b = this.points || t(this),
	            h;h = [a.tooltipFooterHeaderFormatter(b[0])];h = h.concat(a.bodyFormatter(b));h.push(a.tooltipFooterHeaderFormatter(b[0], !0));return h;
	      }, refresh: function refresh(a, g) {
	        var b = this.chart,
	            h,
	            p = this.options,
	            m,
	            d,
	            r = {},
	            G = [];h = p.formatter || this.defaultFormatter;var r = b.hoverPoints,
	            f = this.shared;clearTimeout(this.hideTimer);this.followPointer = t(a)[0].series.tooltipOptions.followPointer;d = this.getAnchor(a, g);g = d[0];m = d[1];!f || a.series && a.series.noSharedTooltip ? r = a.getLabelConfig() : (b.hoverPoints = a, r && C(r, function (a) {
	          a.setState();
	        }), C(a, function (a) {
	          a.setState("hover");G.push(a.getLabelConfig());
	        }), r = { x: a[0].category, y: a[0].y }, r.points = G, this.len = G.length, a = a[0]);r = h.call(r, this);f = a.series;this.distance = x(f.tooltipOptions.distance, 16);!1 === r ? this.hide() : (h = this.getLabel(), this.isHidden && h.attr({ opacity: 1 }).show(), this.split ? this.renderSplit(r, b.hoverPoints) : (h.attr({ text: r && r.join ? r.join("") : r }), h.removeClass(/highcharts-color-[\d]+/g).addClass("highcharts-color-" + x(a.colorIndex, f.colorIndex)), h.attr({ stroke: p.borderColor || a.color || f.color || "#666666" }), this.updatePosition({ plotX: g, plotY: m, negative: a.negative, ttBelow: a.ttBelow, h: d[2] || 0 })), this.isHidden = !1);
	      }, renderSplit: function renderSplit(b, g) {
	        var h = this,
	            u = [],
	            p = this.chart,
	            m = p.renderer,
	            d = !0,
	            r = this.options,
	            G,
	            f = this.getLabel();C(b.slice(0, b.length - 1), function (a, b) {
	          b = g[b - 1] || { isHeader: !0, plotX: g[0].plotX };var e = b.series || h,
	              c = e.tt,
	              w = b.series || {},
	              D = "highcharts-color-" + x(b.colorIndex, w.colorIndex, "none");c || (e.tt = c = m.label(null, null, null, "callout").addClass("highcharts-tooltip-box " + D).attr({ padding: r.padding, r: r.borderRadius, fill: r.backgroundColor, stroke: b.color || w.color || "#333333", "stroke-width": r.borderWidth }).add(f));c.isActive = !0;c.attr({ text: a });c.css(r.style);a = c.getBBox();w = a.width + c.strokeWidth();b.isHeader ? (G = a.height, w = Math.max(0, Math.min(b.plotX + p.plotLeft - w / 2, p.chartWidth - w))) : w = b.plotX + p.plotLeft - x(r.distance, 16) - w;0 > w && (d = !1);a = (b.series && b.series.yAxis && b.series.yAxis.pos) + (b.plotY || 0);a -= p.plotTop;u.push({ target: b.isHeader ? p.plotHeight + G : a, rank: b.isHeader ? 1 : 0, size: e.tt.getBBox().height + 1, point: b, x: w, tt: c });
	        });this.cleanSplit();a.distribute(u, p.plotHeight + G);C(u, function (a) {
	          var b = a.point,
	              f = b.series;a.tt.attr({ visibility: void 0 === a.pos ? "hidden" : "inherit", x: d || b.isHeader ? a.x : b.plotX + p.plotLeft + x(r.distance, 16), y: a.pos + p.plotTop, anchorX: b.isHeader ? b.plotX + p.plotLeft : b.plotX + f.xAxis.pos, anchorY: b.isHeader ? a.pos + p.plotTop - 15 : b.plotY + f.yAxis.pos });
	        });
	      }, updatePosition: function updatePosition(a) {
	        var b = this.chart,
	            h = this.getLabel(),
	            h = (this.options.positioner || this.getPosition).call(this, h.width, h.height, a);this.move(Math.round(h.x), Math.round(h.y || 0), a.plotX + b.plotLeft, a.plotY + b.plotTop);
	      }, getXDateFormat: function getXDateFormat(a, g, n) {
	        var b;g = g.dateTimeLabelFormats;var p = n && n.closestPointRange,
	            m,
	            d = { millisecond: 15, second: 12, minute: 9, hour: 6, day: 3 },
	            r,
	            G = "millisecond";if (p) {
	          r = B("%m-%d %H:%M:%S.%L", a.x);for (m in h) {
	            if (p === h.week && +B("%w", a.x) === n.options.startOfWeek && "00:00:00.000" === r.substr(6)) {
	              m = "week";break;
	            }if (h[m] > p) {
	              m = G;break;
	            }if (d[m] && r.substr(d[m]) !== "01-01 00:00:00.000".substr(d[m])) break;
	            "week" !== m && (G = m);
	          }m && (b = g[m]);
	        } else b = g.day;return b || g.year;
	      }, tooltipFooterHeaderFormatter: function tooltipFooterHeaderFormatter(a, h) {
	        var b = h ? "footer" : "header";h = a.series;var g = h.tooltipOptions,
	            p = g.xDateFormat,
	            m = h.xAxis,
	            d = m && "datetime" === m.options.type && v(a.key),
	            b = g[b + "Format"];d && !p && (p = this.getXDateFormat(a, g, m));d && p && (b = b.replace("{point.key}", "{point.key:" + p + "}"));return F(b, { point: a, series: h });
	      }, bodyFormatter: function bodyFormatter(a) {
	        return l(a, function (a) {
	          var b = a.series.tooltipOptions;return (b.pointFormatter || a.point.tooltipFormatter).call(a.point, b.pointFormat);
	        });
	      } };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.attr,
	        E = a.charts,
	        F = a.color,
	        v = a.css,
	        l = a.defined,
	        q = a.doc,
	        x = a.each,
	        t = a.extend,
	        n = a.fireEvent,
	        h = a.offset,
	        b = a.pick,
	        g = a.removeEvent,
	        A = a.splat,
	        u = a.Tooltip,
	        p = a.win;a.Pointer = function (a, b) {
	      this.init(a, b);
	    };a.Pointer.prototype = { init: function init(a, d) {
	        this.options = d;this.chart = a;this.runChartClick = d.chart.events && !!d.chart.events.click;this.pinchDown = [];this.lastValidTouch = {};u && d.tooltip.enabled && (a.tooltip = new u(a, d.tooltip), this.followTouchMove = b(d.tooltip.followTouchMove, !0));this.setDOMEvents();
	      }, zoomOption: function zoomOption(a) {
	        var d = this.chart,
	            m = d.options.chart,
	            p = m.zoomType || "",
	            d = d.inverted;/touch/.test(a.type) && (p = b(m.pinchType, p));this.zoomX = a = /x/.test(p);this.zoomY = p = /y/.test(p);this.zoomHor = a && !d || p && d;this.zoomVert = p && !d || a && d;this.hasZoom = a || p;
	      }, normalize: function normalize(a, b) {
	        var d, m;a = a || p.event;a.target || (a.target = a.srcElement);m = a.touches ? a.touches.length ? a.touches.item(0) : a.changedTouches[0] : a;b || (this.chartPosition = b = h(this.chart.container));void 0 === m.pageX ? (d = Math.max(a.x, a.clientX - b.left), b = a.y) : (d = m.pageX - b.left, b = m.pageY - b.top);return t(a, { chartX: Math.round(d), chartY: Math.round(b) });
	      }, getCoordinates: function getCoordinates(a) {
	        var b = { xAxis: [], yAxis: [] };x(this.chart.axes, function (d) {
	          b[d.isXAxis ? "xAxis" : "yAxis"].push({ axis: d, value: d.toValue(a[d.horiz ? "chartX" : "chartY"]) });
	        });return b;
	      }, runPointActions: function runPointActions(m) {
	        var d = this.chart,
	            r = d.series,
	            p = d.tooltip,
	            f = p ? p.shared : !1,
	            h = !0,
	            e = d.hoverPoint,
	            g = d.hoverSeries,
	            c,
	            w,
	            D,
	            u = [],
	            n;if (!f && !g) for (c = 0; c < r.length; c++) {
	          if (r[c].directTouch || !r[c].options.stickyTracking) r = [];
	        }g && (f ? g.noSharedTooltip : g.directTouch) && e ? u = [e] : (f || !g || g.options.stickyTracking || (r = [g]), x(r, function (a) {
	          w = a.noSharedTooltip && f;D = !f && a.directTouch;a.visible && !w && !D && b(a.options.enableMouseTracking, !0) && (n = a.searchPoint(m, !w && 1 === a.kdDimensions)) && n.series && u.push(n);
	        }), u.sort(function (a, c) {
	          var b = a.distX - c.distX,
	              e = a.dist - c.dist,
	              d = c.series.group.zIndex - a.series.group.zIndex;return 0 !== b && f ? b : 0 !== e ? e : 0 !== d ? d : a.series.index > c.series.index ? -1 : 1;
	        }));if (f) for (c = u.length; c--;) {
	          (u[c].x !== u[0].x || u[c].series.noSharedTooltip) && u.splice(c, 1);
	        }if (u[0] && (u[0] !== this.prevKDPoint || p && p.isHidden)) {
	          if (f && !u[0].series.noSharedTooltip) {
	            for (c = 0; c < u.length; c++) {
	              u[c].onMouseOver(m, u[c] !== (g && g.directTouch && e || u[0]));
	            }u.length && p && p.refresh(u.sort(function (a, c) {
	              return a.series.index - c.series.index;
	            }), m);
	          } else if (p && p.refresh(u[0], m), !g || !g.directTouch) u[0].onMouseOver(m);this.prevKDPoint = u[0];h = !1;
	        }h && (r = g && g.tooltipOptions.followPointer, p && r && !p.isHidden && (r = p.getAnchor([{}], m), p.updatePosition({ plotX: r[0], plotY: r[1] })));this.unDocMouseMove || (this.unDocMouseMove = B(q, "mousemove", function (c) {
	          if (E[a.hoverChartIndex]) E[a.hoverChartIndex].pointer.onDocumentMouseMove(c);
	        }));x(f ? u : [b(e, u[0])], function (a) {
	          x(d.axes, function (c) {
	            (!a || a.series && a.series[c.coll] === c) && c.drawCrosshair(m, a);
	          });
	        });
	      }, reset: function reset(a, b) {
	        var d = this.chart,
	            m = d.hoverSeries,
	            f = d.hoverPoint,
	            p = d.hoverPoints,
	            e = d.tooltip,
	            h = e && e.shared ? p : f;a && h && x(A(h), function (c) {
	          c.series.isCartesian && void 0 === c.plotX && (a = !1);
	        });if (a) e && h && (e.refresh(h), f && (f.setState(f.state, !0), x(d.axes, function (a) {
	          a.crosshair && a.drawCrosshair(null, f);
	        })));else {
	          if (f) f.onMouseOut();p && x(p, function (a) {
	            a.setState();
	          });if (m) m.onMouseOut();e && e.hide(b);this.unDocMouseMove && (this.unDocMouseMove = this.unDocMouseMove());x(d.axes, function (a) {
	            a.hideCrosshair();
	          });this.hoverX = this.prevKDPoint = d.hoverPoints = d.hoverPoint = null;
	        }
	      }, scaleGroups: function scaleGroups(a, b) {
	        var d = this.chart,
	            m;x(d.series, function (f) {
	          m = a || f.getPlotBox();f.xAxis && f.xAxis.zoomEnabled && f.group && (f.group.attr(m), f.markerGroup && (f.markerGroup.attr(m), f.markerGroup.clip(b ? d.clipRect : null)), f.dataLabelsGroup && f.dataLabelsGroup.attr(m));
	        });d.clipRect.attr(b || d.clipBox);
	      }, dragStart: function dragStart(a) {
	        var b = this.chart;b.mouseIsDown = a.type;b.cancelClick = !1;b.mouseDownX = this.mouseDownX = a.chartX;b.mouseDownY = this.mouseDownY = a.chartY;
	      }, drag: function drag(a) {
	        var b = this.chart,
	            m = b.options.chart,
	            p = a.chartX,
	            f = a.chartY,
	            h = this.zoomHor,
	            e = this.zoomVert,
	            g = b.plotLeft,
	            c = b.plotTop,
	            w = b.plotWidth,
	            D = b.plotHeight,
	            u,
	            n = this.selectionMarker,
	            k = this.mouseDownX,
	            A = this.mouseDownY,
	            l = m.panKey && a[m.panKey + "Key"];n && n.touch || (p < g ? p = g : p > g + w && (p = g + w), f < c ? f = c : f > c + D && (f = c + D), this.hasDragged = Math.sqrt(Math.pow(k - p, 2) + Math.pow(A - f, 2)), 10 < this.hasDragged && (u = b.isInsidePlot(k - g, A - c), b.hasCartesianSeries && (this.zoomX || this.zoomY) && u && !l && !n && (this.selectionMarker = n = b.renderer.rect(g, c, h ? 1 : w, e ? 1 : D, 0).attr({ fill: m.selectionMarkerFill || F("#335cad").setOpacity(.25).get(), "class": "highcharts-selection-marker", zIndex: 7 }).add()), n && h && (p -= k, n.attr({ width: Math.abs(p), x: (0 < p ? 0 : p) + k })), n && e && (p = f - A, n.attr({ height: Math.abs(p), y: (0 < p ? 0 : p) + A })), u && !n && m.panning && b.pan(a, m.panning)));
	      }, drop: function drop(a) {
	        var b = this,
	            m = this.chart,
	            p = this.hasPinched;if (this.selectionMarker) {
	          var f = { originalEvent: a, xAxis: [], yAxis: [] },
	              h = this.selectionMarker,
	              e = h.attr ? h.attr("x") : h.x,
	              g = h.attr ? h.attr("y") : h.y,
	              c = h.attr ? h.attr("width") : h.width,
	              w = h.attr ? h.attr("height") : h.height,
	              D;if (this.hasDragged || p) x(m.axes, function (d) {
	            if (d.zoomEnabled && l(d.min) && (p || b[{ xAxis: "zoomX", yAxis: "zoomY" }[d.coll]])) {
	              var m = d.horiz,
	                  k = "touchend" === a.type ? d.minPixelPadding : 0,
	                  r = d.toValue((m ? e : g) + k),
	                  m = d.toValue((m ? e + c : g + w) - k);f[d.coll].push({ axis: d, min: Math.min(r, m), max: Math.max(r, m) });D = !0;
	            }
	          }), D && n(m, "selection", f, function (a) {
	            m.zoom(t(a, p ? { animation: !1 } : null));
	          });this.selectionMarker = this.selectionMarker.destroy();p && this.scaleGroups();
	        }m && (v(m.container, { cursor: m._cursor }), m.cancelClick = 10 < this.hasDragged, m.mouseIsDown = this.hasDragged = this.hasPinched = !1, this.pinchDown = []);
	      }, onContainerMouseDown: function onContainerMouseDown(a) {
	        a = this.normalize(a);this.zoomOption(a);a.preventDefault && a.preventDefault();this.dragStart(a);
	      },
	      onDocumentMouseUp: function onDocumentMouseUp(b) {
	        E[a.hoverChartIndex] && E[a.hoverChartIndex].pointer.drop(b);
	      }, onDocumentMouseMove: function onDocumentMouseMove(a) {
	        var b = this.chart,
	            m = this.chartPosition;a = this.normalize(a, m);!m || this.inClass(a.target, "highcharts-tracker") || b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) || this.reset();
	      }, onContainerMouseLeave: function onContainerMouseLeave(b) {
	        var d = E[a.hoverChartIndex];d && (b.relatedTarget || b.toElement) && (d.pointer.reset(), d.pointer.chartPosition = null);
	      }, onContainerMouseMove: function onContainerMouseMove(b) {
	        var d = this.chart;l(a.hoverChartIndex) && E[a.hoverChartIndex] && E[a.hoverChartIndex].mouseIsDown || (a.hoverChartIndex = d.index);b = this.normalize(b);b.returnValue = !1;"mousedown" === d.mouseIsDown && this.drag(b);!this.inClass(b.target, "highcharts-tracker") && !d.isInsidePlot(b.chartX - d.plotLeft, b.chartY - d.plotTop) || d.openMenu || this.runPointActions(b);
	      }, inClass: function inClass(a, b) {
	        for (var d; a;) {
	          if (d = C(a, "class")) {
	            if (-1 !== d.indexOf(b)) return !0;if (-1 !== d.indexOf("highcharts-container")) return !1;
	          }a = a.parentNode;
	        }
	      }, onTrackerMouseOut: function onTrackerMouseOut(a) {
	        var b = this.chart.hoverSeries;
	        a = a.relatedTarget || a.toElement;if (!(!b || !a || b.options.stickyTracking || this.inClass(a, "highcharts-tooltip") || this.inClass(a, "highcharts-series-" + b.index) && this.inClass(a, "highcharts-tracker"))) b.onMouseOut();
	      }, onContainerClick: function onContainerClick(a) {
	        var b = this.chart,
	            m = b.hoverPoint,
	            p = b.plotLeft,
	            f = b.plotTop;a = this.normalize(a);b.cancelClick || (m && this.inClass(a.target, "highcharts-tracker") ? (n(m.series, "click", t(a, { point: m })), b.hoverPoint && m.firePointEvent("click", a)) : (t(a, this.getCoordinates(a)), b.isInsidePlot(a.chartX - p, a.chartY - f) && n(b, "click", a)));
	      }, setDOMEvents: function setDOMEvents() {
	        var b = this,
	            d = b.chart.container;d.onmousedown = function (a) {
	          b.onContainerMouseDown(a);
	        };d.onmousemove = function (a) {
	          b.onContainerMouseMove(a);
	        };d.onclick = function (a) {
	          b.onContainerClick(a);
	        };B(d, "mouseleave", b.onContainerMouseLeave);1 === a.chartCount && B(q, "mouseup", b.onDocumentMouseUp);a.hasTouch && (d.ontouchstart = function (a) {
	          b.onContainerTouchStart(a);
	        }, d.ontouchmove = function (a) {
	          b.onContainerTouchMove(a);
	        }, 1 === a.chartCount && B(q, "touchend", b.onDocumentTouchEnd));
	      },
	      destroy: function destroy() {
	        var b;g(this.chart.container, "mouseleave", this.onContainerMouseLeave);a.chartCount || (g(q, "mouseup", this.onDocumentMouseUp), g(q, "touchend", this.onDocumentTouchEnd));clearInterval(this.tooltipTimeout);for (b in this) {
	          this[b] = null;
	        }
	      } };
	  })(K);(function (a) {
	    var B = a.charts,
	        C = a.each,
	        E = a.extend,
	        F = a.map,
	        v = a.noop,
	        l = a.pick;E(a.Pointer.prototype, { pinchTranslate: function pinchTranslate(a, l, t, n, h, b) {
	        this.zoomHor && this.pinchTranslateDirection(!0, a, l, t, n, h, b);this.zoomVert && this.pinchTranslateDirection(!1, a, l, t, n, h, b);
	      }, pinchTranslateDirection: function pinchTranslateDirection(a, l, t, n, h, b, g, A) {
	        var u = this.chart,
	            p = a ? "x" : "y",
	            m = a ? "X" : "Y",
	            d = "chart" + m,
	            r = a ? "width" : "height",
	            G = u["plot" + (a ? "Left" : "Top")],
	            f,
	            z,
	            e = A || 1,
	            y = u.inverted,
	            c = u.bounds[a ? "h" : "v"],
	            w = 1 === l.length,
	            D = l[0][d],
	            I = t[0][d],
	            L = !w && l[1][d],
	            k = !w && t[1][d],
	            q;t = function t() {
	          !w && 20 < Math.abs(D - L) && (e = A || Math.abs(I - k) / Math.abs(D - L));z = (G - I) / e + D;f = u["plot" + (a ? "Width" : "Height")] / e;
	        };t();l = z;l < c.min ? (l = c.min, q = !0) : l + f > c.max && (l = c.max - f, q = !0);q ? (I -= .8 * (I - g[p][0]), w || (k -= .8 * (k - g[p][1])), t()) : g[p] = [I, k];y || (b[p] = z - G, b[r] = f);b = y ? 1 / e : e;h[r] = f;h[p] = l;n[y ? a ? "scaleY" : "scaleX" : "scale" + m] = e;n["translate" + m] = b * G + (I - b * D);
	      }, pinch: function pinch(a) {
	        var q = this,
	            t = q.chart,
	            n = q.pinchDown,
	            h = a.touches,
	            b = h.length,
	            g = q.lastValidTouch,
	            A = q.hasZoom,
	            u = q.selectionMarker,
	            p = {},
	            m = 1 === b && (q.inClass(a.target, "highcharts-tracker") && t.runTrackerClick || q.runChartClick),
	            d = {};1 < b && (q.initiated = !0);A && q.initiated && !m && a.preventDefault();F(h, function (a) {
	          return q.normalize(a);
	        });"touchstart" === a.type ? (C(h, function (a, b) {
	          n[b] = { chartX: a.chartX,
	            chartY: a.chartY };
	        }), g.x = [n[0].chartX, n[1] && n[1].chartX], g.y = [n[0].chartY, n[1] && n[1].chartY], C(t.axes, function (a) {
	          if (a.zoomEnabled) {
	            var b = t.bounds[a.horiz ? "h" : "v"],
	                d = a.minPixelPadding,
	                p = a.toPixels(l(a.options.min, a.dataMin)),
	                e = a.toPixels(l(a.options.max, a.dataMax)),
	                m = Math.max(p, e);b.min = Math.min(a.pos, Math.min(p, e) - d);b.max = Math.max(a.pos + a.len, m + d);
	          }
	        }), q.res = !0) : q.followTouchMove && 1 === b ? this.runPointActions(q.normalize(a)) : n.length && (u || (q.selectionMarker = u = E({ destroy: v, touch: !0 }, t.plotBox)), q.pinchTranslate(n, h, p, u, d, g), q.hasPinched = A, q.scaleGroups(p, d), q.res && (q.res = !1, this.reset(!1, 0)));
	      }, touch: function touch(q, v) {
	        var t = this.chart,
	            n,
	            h;if (t.index !== a.hoverChartIndex) this.onContainerMouseLeave({ relatedTarget: !0 });a.hoverChartIndex = t.index;1 === q.touches.length ? (q = this.normalize(q), (h = t.isInsidePlot(q.chartX - t.plotLeft, q.chartY - t.plotTop)) && !t.openMenu ? (v && this.runPointActions(q), "touchmove" === q.type && (v = this.pinchDown, n = v[0] ? 4 <= Math.sqrt(Math.pow(v[0].chartX - q.chartX, 2) + Math.pow(v[0].chartY - q.chartY, 2)) : !1), l(n, !0) && this.pinch(q)) : v && this.reset()) : 2 === q.touches.length && this.pinch(q);
	      }, onContainerTouchStart: function onContainerTouchStart(a) {
	        this.zoomOption(a);this.touch(a, !0);
	      }, onContainerTouchMove: function onContainerTouchMove(a) {
	        this.touch(a);
	      }, onDocumentTouchEnd: function onDocumentTouchEnd(l) {
	        B[a.hoverChartIndex] && B[a.hoverChartIndex].pointer.drop(l);
	      } });
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.charts,
	        E = a.css,
	        F = a.doc,
	        v = a.extend,
	        l = a.noop,
	        q = a.Pointer,
	        x = a.removeEvent,
	        t = a.win,
	        n = a.wrap;if (t.PointerEvent || t.MSPointerEvent) {
	      var h = {},
	          b = !!t.PointerEvent,
	          g = function g() {
	        var a,
	            b = [];
	        b.item = function (a) {
	          return this[a];
	        };for (a in h) {
	          h.hasOwnProperty(a) && b.push({ pageX: h[a].pageX, pageY: h[a].pageY, target: h[a].target });
	        }return b;
	      },
	          A = function A(b, p, m, d) {
	        "touch" !== b.pointerType && b.pointerType !== b.MSPOINTER_TYPE_TOUCH || !C[a.hoverChartIndex] || (d(b), d = C[a.hoverChartIndex].pointer, d[p]({ type: m, target: b.currentTarget, preventDefault: l, touches: g() }));
	      };v(q.prototype, { onContainerPointerDown: function onContainerPointerDown(a) {
	          A(a, "onContainerTouchStart", "touchstart", function (a) {
	            h[a.pointerId] = { pageX: a.pageX, pageY: a.pageY,
	              target: a.currentTarget };
	          });
	        }, onContainerPointerMove: function onContainerPointerMove(a) {
	          A(a, "onContainerTouchMove", "touchmove", function (a) {
	            h[a.pointerId] = { pageX: a.pageX, pageY: a.pageY };h[a.pointerId].target || (h[a.pointerId].target = a.currentTarget);
	          });
	        }, onDocumentPointerUp: function onDocumentPointerUp(a) {
	          A(a, "onDocumentTouchEnd", "touchend", function (a) {
	            delete h[a.pointerId];
	          });
	        }, batchMSEvents: function batchMSEvents(a) {
	          a(this.chart.container, b ? "pointerdown" : "MSPointerDown", this.onContainerPointerDown);a(this.chart.container, b ? "pointermove" : "MSPointerMove", this.onContainerPointerMove);
	          a(F, b ? "pointerup" : "MSPointerUp", this.onDocumentPointerUp);
	        } });n(q.prototype, "init", function (a, b, m) {
	        a.call(this, b, m);this.hasZoom && E(b.container, { "-ms-touch-action": "none", "touch-action": "none" });
	      });n(q.prototype, "setDOMEvents", function (a) {
	        a.apply(this);(this.hasZoom || this.followTouchMove) && this.batchMSEvents(B);
	      });n(q.prototype, "destroy", function (a) {
	        this.batchMSEvents(x);a.call(this);
	      });
	    }
	  })(K);(function (a) {
	    var B,
	        C = a.addEvent,
	        E = a.css,
	        F = a.discardElement,
	        v = a.defined,
	        l = a.each,
	        q = a.extend,
	        x = a.isFirefox,
	        t = a.marginNames,
	        n = a.merge,
	        h = a.pick,
	        b = a.setAnimation,
	        g = a.stableSort,
	        A = a.win,
	        u = a.wrap;B = a.Legend = function (a, b) {
	      this.init(a, b);
	    };B.prototype = { init: function init(a, b) {
	        this.chart = a;this.setOptions(b);b.enabled && (this.render(), C(this.chart, "endResize", function () {
	          this.legend.positionCheckboxes();
	        }));
	      }, setOptions: function setOptions(a) {
	        var b = h(a.padding, 8);this.options = a;this.itemStyle = a.itemStyle;this.itemHiddenStyle = n(this.itemStyle, a.itemHiddenStyle);this.itemMarginTop = a.itemMarginTop || 0;this.initialItemX = this.padding = b;this.initialItemY = b - 5;this.itemHeight = this.maxItemWidth = 0;this.symbolWidth = h(a.symbolWidth, 16);this.pages = [];
	      }, update: function update(a, b) {
	        var d = this.chart;this.setOptions(n(!0, this.options, a));this.destroy();d.isDirtyLegend = d.isDirtyBox = !0;h(b, !0) && d.redraw();
	      }, colorizeItem: function colorizeItem(a, b) {
	        a.legendGroup[b ? "removeClass" : "addClass"]("highcharts-legend-item-hidden");var d = this.options,
	            m = a.legendItem,
	            h = a.legendLine,
	            f = a.legendSymbol,
	            p = this.itemHiddenStyle.color,
	            d = b ? d.itemStyle.color : p,
	            e = b ? a.color || p : p,
	            g = a.options && a.options.marker,
	            c = { fill: e },
	            w;m && m.css({ fill: d, color: d });h && h.attr({ stroke: e });if (f) {
	          if (g && f.isMarker && (c = a.pointAttribs(), !b)) for (w in c) {
	            c[w] = p;
	          }f.attr(c);
	        }
	      }, positionItem: function positionItem(a) {
	        var b = this.options,
	            d = b.symbolPadding,
	            b = !b.rtl,
	            h = a._legendItemPos,
	            p = h[0],
	            h = h[1],
	            f = a.checkbox;(a = a.legendGroup) && a.element && a.translate(b ? p : this.legendWidth - p - 2 * d - 4, h);f && (f.x = p, f.y = h);
	      }, destroyItem: function destroyItem(a) {
	        var b = a.checkbox;l(["legendItem", "legendLine", "legendSymbol", "legendGroup"], function (b) {
	          a[b] && (a[b] = a[b].destroy());
	        });b && F(a.checkbox);
	      },
	      destroy: function destroy() {
	        function a(a) {
	          this[a] && (this[a] = this[a].destroy());
	        }l(this.getAllItems(), function (b) {
	          l(["legendItem", "legendGroup"], a, b);
	        });l(["box", "title", "group"], a, this);this.display = null;
	      }, positionCheckboxes: function positionCheckboxes(a) {
	        var b = this.group && this.group.alignAttr,
	            d,
	            h = this.clipHeight || this.legendHeight,
	            g = this.titleHeight;b && (d = b.translateY, l(this.allItems, function (f) {
	          var m = f.checkbox,
	              e;m && (e = d + g + m.y + (a || 0) + 3, E(m, { left: b.translateX + f.checkboxOffset + m.x - 20 + "px", top: e + "px", display: e > d - 6 && e < d + h - 6 ? "" : "none" }));
	        }));
	      },
	      renderTitle: function renderTitle() {
	        var a = this.padding,
	            b = this.options.title,
	            d = 0;b.text && (this.title || (this.title = this.chart.renderer.label(b.text, a - 3, a - 4, null, null, null, null, null, "legend-title").attr({ zIndex: 1 }).css(b.style).add(this.group)), a = this.title.getBBox(), d = a.height, this.offsetWidth = a.width, this.contentGroup.attr({ translateY: d }));this.titleHeight = d;
	      }, setText: function setText(b) {
	        var h = this.options;b.legendItem.attr({ text: h.labelFormat ? a.format(h.labelFormat, b) : h.labelFormatter.call(b) });
	      }, renderItem: function renderItem(a) {
	        var b = this.chart,
	            d = b.renderer,
	            g = this.options,
	            p = "horizontal" === g.layout,
	            f = this.symbolWidth,
	            u = g.symbolPadding,
	            e = this.itemStyle,
	            y = this.itemHiddenStyle,
	            c = this.padding,
	            w = p ? h(g.itemDistance, 20) : 0,
	            D = !g.rtl,
	            I = g.width,
	            A = g.itemMarginBottom || 0,
	            k = this.itemMarginTop,
	            l = this.initialItemX,
	            q = a.legendItem,
	            t = !a.series,
	            v = !t && a.series.drawLegendSymbol ? a.series : a,
	            x = v.options,
	            x = this.createCheckboxForItem && x && x.showCheckbox,
	            J = g.useHTML;q || (a.legendGroup = d.g("legend-item").addClass("highcharts-" + v.type + "-series highcharts-color-" + a.colorIndex + (a.options.className ? " " + a.options.className : "") + (t ? " highcharts-series-" + a.index : "")).attr({ zIndex: 1 }).add(this.scrollGroup), a.legendItem = q = d.text("", D ? f + u : -u, this.baseline || 0, J).css(n(a.visible ? e : y)).attr({ align: D ? "left" : "right", zIndex: 2 }).add(a.legendGroup), this.baseline || (e = e.fontSize, this.fontMetrics = d.fontMetrics(e, q), this.baseline = this.fontMetrics.f + 3 + k, q.attr("y", this.baseline)), v.drawLegendSymbol(this, a), this.setItemEvents && this.setItemEvents(a, q, J), x && this.createCheckboxForItem(a));
	        this.colorizeItem(a, a.visible);this.setText(a);d = q.getBBox();f = a.checkboxOffset = g.itemWidth || a.legendItemWidth || f + u + d.width + w + (x ? 20 : 0);this.itemHeight = u = Math.round(a.legendItemHeight || d.height);p && this.itemX - l + f > (I || b.chartWidth - 2 * c - l - g.x) && (this.itemX = l, this.itemY += k + this.lastLineHeight + A, this.lastLineHeight = 0);this.maxItemWidth = Math.max(this.maxItemWidth, f);this.lastItemY = k + this.itemY + A;this.lastLineHeight = Math.max(u, this.lastLineHeight);a._legendItemPos = [this.itemX, this.itemY];p ? this.itemX += f : (this.itemY += k + u + A, this.lastLineHeight = u);this.offsetWidth = I || Math.max((p ? this.itemX - l - w : f) + c, this.offsetWidth);
	      }, getAllItems: function getAllItems() {
	        var a = [];l(this.chart.series, function (b) {
	          var d = b && b.options;b && h(d.showInLegend, v(d.linkedTo) ? !1 : void 0, !0) && (a = a.concat(b.legendItems || ("point" === d.legendType ? b.data : b)));
	        });return a;
	      }, adjustMargins: function adjustMargins(a, b) {
	        var d = this.chart,
	            g = this.options,
	            m = g.align.charAt(0) + g.verticalAlign.charAt(0) + g.layout.charAt(0);g.floating || l([/(lth|ct|rth)/, /(rtv|rm|rbv)/, /(rbh|cb|lbh)/, /(lbv|lm|ltv)/], function (f, p) {
	          f.test(m) && !v(a[p]) && (d[t[p]] = Math.max(d[t[p]], d.legend[(p + 1) % 2 ? "legendHeight" : "legendWidth"] + [1, -1, -1, 1][p] * g[p % 2 ? "x" : "y"] + h(g.margin, 12) + b[p]));
	        });
	      }, render: function render() {
	        var a = this,
	            b = a.chart,
	            d = b.renderer,
	            h = a.group,
	            u,
	            f,
	            n,
	            e,
	            y = a.box,
	            c = a.options,
	            w = a.padding;a.itemX = a.initialItemX;a.itemY = a.initialItemY;a.offsetWidth = 0;a.lastItemY = 0;h || (a.group = h = d.g("legend").attr({ zIndex: 7 }).add(), a.contentGroup = d.g().attr({ zIndex: 1 }).add(h), a.scrollGroup = d.g().add(a.contentGroup));a.renderTitle();
	        u = a.getAllItems();g(u, function (a, b) {
	          return (a.options && a.options.legendIndex || 0) - (b.options && b.options.legendIndex || 0);
	        });c.reversed && u.reverse();a.allItems = u;a.display = f = !!u.length;a.lastLineHeight = 0;l(u, function (b) {
	          a.renderItem(b);
	        });n = (c.width || a.offsetWidth) + w;e = a.lastItemY + a.lastLineHeight + a.titleHeight;e = a.handleOverflow(e);e += w;y || (a.box = y = d.rect().addClass("highcharts-legend-box").attr({ r: c.borderRadius }).add(h), y.isNew = !0);y.attr({ stroke: c.borderColor, "stroke-width": c.borderWidth || 0, fill: c.backgroundColor || "none" }).shadow(c.shadow);0 < n && 0 < e && (y[y.isNew ? "attr" : "animate"](y.crisp({ x: 0, y: 0, width: n, height: e }, y.strokeWidth())), y.isNew = !1);y[f ? "show" : "hide"]();a.legendWidth = n;a.legendHeight = e;l(u, function (b) {
	          a.positionItem(b);
	        });f && h.align(q({ width: n, height: e }, c), !0, "spacingBox");b.isResizing || this.positionCheckboxes();
	      }, handleOverflow: function handleOverflow(a) {
	        var b = this,
	            d = this.chart,
	            g = d.renderer,
	            p = this.options,
	            f = p.y,
	            d = d.spacingBox.height + ("top" === p.verticalAlign ? -f : f) - this.padding,
	            f = p.maxHeight,
	            u,
	            e = this.clipRect,
	            y = p.navigation,
	            c = h(y.animation, !0),
	            w = y.arrowSize || 12,
	            D = this.nav,
	            n = this.pages,
	            A = this.padding,
	            k,
	            q = this.allItems,
	            t = function t(a) {
	          a ? e.attr({ height: a }) : e && (b.clipRect = e.destroy(), b.contentGroup.clip());b.contentGroup.div && (b.contentGroup.div.style.clip = a ? "rect(" + A + "px,9999px," + (A + a) + "px,0)" : "auto");
	        };"horizontal" !== p.layout || "middle" === p.verticalAlign || p.floating || (d /= 2);f && (d = Math.min(d, f));n.length = 0;a > d && !1 !== y.enabled ? (this.clipHeight = u = Math.max(d - 20 - this.titleHeight - A, 0), this.currentPage = h(this.currentPage, 1), this.fullHeight = a, l(q, function (a, b) {
	          var c = a._legendItemPos[1];a = Math.round(a.legendItem.getBBox().height);var e = n.length;if (!e || c - n[e - 1] > u && (k || c) !== n[e - 1]) n.push(k || c), e++;b === q.length - 1 && c + a - n[e - 1] > u && n.push(c);c !== k && (k = c);
	        }), e || (e = b.clipRect = g.clipRect(0, A, 9999, 0), b.contentGroup.clip(e)), t(u), D || (this.nav = D = g.g().attr({ zIndex: 1 }).add(this.group), this.up = g.symbol("triangle", 0, 0, w, w).on("click", function () {
	          b.scroll(-1, c);
	        }).add(D), this.pager = g.text("", 15, 10).addClass("highcharts-legend-navigation").css(y.style).add(D), this.down = g.symbol("triangle-down", 0, 0, w, w).on("click", function () {
	          b.scroll(1, c);
	        }).add(D)), b.scroll(0), a = d) : D && (t(), D.hide(), this.scrollGroup.attr({ translateY: 1 }), this.clipHeight = 0);return a;
	      }, scroll: function scroll(a, h) {
	        var d = this.pages,
	            g = d.length;a = this.currentPage + a;var m = this.clipHeight,
	            f = this.options.navigation,
	            p = this.pager,
	            e = this.padding;a > g && (a = g);0 < a && (void 0 !== h && b(h, this.chart), this.nav.attr({ translateX: e, translateY: m + this.padding + 7 + this.titleHeight, visibility: "visible" }), this.up.attr({ "class": 1 === a ? "highcharts-legend-nav-inactive" : "highcharts-legend-nav-active" }), p.attr({ text: a + "/" + g }), this.down.attr({ x: 18 + this.pager.getBBox().width, "class": a === g ? "highcharts-legend-nav-inactive" : "highcharts-legend-nav-active" }), this.up.attr({ fill: 1 === a ? f.inactiveColor : f.activeColor }).css({ cursor: 1 === a ? "default" : "pointer" }), this.down.attr({ fill: a === g ? f.inactiveColor : f.activeColor }).css({ cursor: a === g ? "default" : "pointer" }), h = -d[a - 1] + this.initialItemY, this.scrollGroup.animate({ translateY: h }), this.currentPage = a, this.positionCheckboxes(h));
	      } };a.LegendSymbolMixin = { drawRectangle: function drawRectangle(a, b) {
	        var d = a.options,
	            g = d.symbolHeight || a.fontMetrics.f,
	            d = d.squareSymbol;b.legendSymbol = this.chart.renderer.rect(d ? (a.symbolWidth - g) / 2 : 0, a.baseline - g + 1, d ? g : a.symbolWidth, g, h(a.options.symbolRadius, g / 2)).addClass("highcharts-point").attr({ zIndex: 3 }).add(b.legendGroup);
	      }, drawLineMarker: function drawLineMarker(a) {
	        var b = this.options,
	            d = b.marker,
	            h = a.symbolWidth,
	            g = this.chart.renderer,
	            f = this.legendGroup;a = a.baseline - Math.round(.3 * a.fontMetrics.b);
	        var u;u = { "stroke-width": b.lineWidth || 0 };b.dashStyle && (u.dashstyle = b.dashStyle);this.legendLine = g.path(["M", 0, a, "L", h, a]).addClass("highcharts-graph").attr(u).add(f);d && !1 !== d.enabled && (b = 0 === this.symbol.indexOf("url") ? 0 : d.radius, this.legendSymbol = d = g.symbol(this.symbol, h / 2 - b, a - b, 2 * b, 2 * b, d).addClass("highcharts-point").add(f), d.isMarker = !0);
	      } };(/Trident\/7\.0/.test(A.navigator.userAgent) || x) && u(B.prototype, "positionItem", function (a, b) {
	      var d = this,
	          h = function h() {
	        b._legendItemPos && a.call(d, b);
	      };h();setTimeout(h);
	    });
	  })(K);
	  (function (a) {
	    var B = a.addEvent,
	        C = a.animate,
	        E = a.animObject,
	        F = a.attr,
	        v = a.doc,
	        l = a.Axis,
	        q = a.createElement,
	        x = a.defaultOptions,
	        t = a.discardElement,
	        n = a.charts,
	        h = a.css,
	        b = a.defined,
	        g = a.each,
	        A = a.extend,
	        u = a.find,
	        p = a.fireEvent,
	        m = a.getStyle,
	        d = a.grep,
	        r = a.isNumber,
	        G = a.isObject,
	        f = a.isString,
	        z = a.Legend,
	        e = a.marginNames,
	        y = a.merge,
	        c = a.Pointer,
	        w = a.pick,
	        D = a.pInt,
	        I = a.removeEvent,
	        L = a.seriesTypes,
	        k = a.splat,
	        H = a.svg,
	        R = a.syncTimeout,
	        M = a.win,
	        O = a.Renderer,
	        N = a.Chart = function () {
	      this.getArgs.apply(this, arguments);
	    };a.chart = function (a, b, c) {
	      return new N(a, b, c);
	    };N.prototype = { callbacks: [], getArgs: function getArgs() {
	        var a = [].slice.call(arguments);if (f(a[0]) || a[0].nodeName) this.renderTo = a.shift();this.init(a[0], a[1]);
	      }, init: function init(b, c) {
	        var e,
	            d = b.series;b.series = null;e = y(x, b);e.series = b.series = d;this.userOptions = b;this.respRules = [];b = e.chart;d = b.events;this.margin = [];this.spacing = [];this.bounds = { h: {}, v: {} };this.callback = c;this.isResizing = 0;this.options = e;this.axes = [];this.series = [];this.hasCartesianSeries = b.showAxes;var k;this.index = n.length;
	        n.push(this);a.chartCount++;if (d) for (k in d) {
	          B(this, k, d[k]);
	        }this.xAxis = [];this.yAxis = [];this.pointCount = this.colorCounter = this.symbolCounter = 0;this.firstRender();
	      }, initSeries: function initSeries(b) {
	        var c = this.options.chart;(c = L[b.type || c.type || c.defaultSeriesType]) || a.error(17, !0);c = new c();c.init(this, b);return c;
	      }, isInsidePlot: function isInsidePlot(a, b, c) {
	        var e = c ? b : a;a = c ? a : b;return 0 <= e && e <= this.plotWidth && 0 <= a && a <= this.plotHeight;
	      }, redraw: function redraw(b) {
	        var c = this.axes,
	            e = this.series,
	            d = this.pointer,
	            k = this.legend,
	            f = this.isDirtyLegend,
	            w,
	            h,
	            D = this.hasCartesianSeries,
	            m = this.isDirtyBox,
	            u = e.length,
	            r = u,
	            y = this.renderer,
	            n = y.isHidden(),
	            z = [];a.setAnimation(b, this);n && this.cloneRenderTo();for (this.layOutTitles(); r--;) {
	          if (b = e[r], b.options.stacking && (w = !0, b.isDirty)) {
	            h = !0;break;
	          }
	        }if (h) for (r = u; r--;) {
	          b = e[r], b.options.stacking && (b.isDirty = !0);
	        }g(e, function (a) {
	          a.isDirty && "point" === a.options.legendType && (a.updateTotals && a.updateTotals(), f = !0);a.isDirtyData && p(a, "updatedData");
	        });f && k.options.enabled && (k.render(), this.isDirtyLegend = !1);w && this.getStacks();
	        D && g(c, function (a) {
	          a.updateNames();a.setScale();
	        });this.getMargins();D && (g(c, function (a) {
	          a.isDirty && (m = !0);
	        }), g(c, function (a) {
	          var b = a.min + "," + a.max;a.extKey !== b && (a.extKey = b, z.push(function () {
	            p(a, "afterSetExtremes", A(a.eventArgs, a.getExtremes()));delete a.eventArgs;
	          }));(m || w) && a.redraw();
	        }));m && this.drawChartBox();g(e, function (a) {
	          (m || a.isDirty) && a.visible && a.redraw();
	        });d && d.reset(!0);y.draw();p(this, "redraw");n && this.cloneRenderTo(!0);g(z, function (a) {
	          a.call();
	        });
	      }, get: function get(a) {
	        function b(b) {
	          return b.id === a || b.options.id === a;
	        }var c,
	            e = this.series,
	            d;c = u(this.axes, b) || u(this.series, b);for (d = 0; !c && d < e.length; d++) {
	          c = u(e[d].points || [], b);
	        }return c;
	      }, getAxes: function getAxes() {
	        var a = this,
	            b = this.options,
	            c = b.xAxis = k(b.xAxis || {}),
	            b = b.yAxis = k(b.yAxis || {});g(c, function (a, b) {
	          a.index = b;a.isX = !0;
	        });g(b, function (a, b) {
	          a.index = b;
	        });c = c.concat(b);g(c, function (b) {
	          new l(a, b);
	        });
	      }, getSelectedPoints: function getSelectedPoints() {
	        var a = [];g(this.series, function (b) {
	          a = a.concat(d(b.points || [], function (a) {
	            return a.selected;
	          }));
	        });return a;
	      }, getSelectedSeries: function getSelectedSeries() {
	        return d(this.series, function (a) {
	          return a.selected;
	        });
	      }, setTitle: function setTitle(a, b, c) {
	        var e = this,
	            d = e.options,
	            k;k = d.title = y({ style: { color: "#333333", fontSize: d.isStock ? "16px" : "18px" } }, d.title, a);d = d.subtitle = y({ style: { color: "#666666" } }, d.subtitle, b);g([["title", a, k], ["subtitle", b, d]], function (a, b) {
	          var c = a[0],
	              d = e[c],
	              k = a[1];a = a[2];d && k && (e[c] = d = d.destroy());a && a.text && !d && (e[c] = e.renderer.text(a.text, 0, 0, a.useHTML).attr({ align: a.align, "class": "highcharts-" + c, zIndex: a.zIndex || 4 }).add(), e[c].update = function (a) {
	            e.setTitle(!b && a, b && a);
	          }, e[c].css(a.style));
	        });e.layOutTitles(c);
	      }, layOutTitles: function layOutTitles(a) {
	        var b = 0,
	            c,
	            e = this.renderer,
	            d = this.spacingBox;g(["title", "subtitle"], function (a) {
	          var c = this[a],
	              k = this.options[a],
	              f;c && (f = k.style.fontSize, f = e.fontMetrics(f, c).b, c.css({ width: (k.width || d.width + k.widthAdjust) + "px" }).align(A({ y: b + f + ("title" === a ? -3 : 2) }, k), !1, "spacingBox"), k.floating || k.verticalAlign || (b = Math.ceil(b + c.getBBox().height)));
	        }, this);c = this.titleOffset !== b;this.titleOffset = b;!this.isDirtyBox && c && (this.isDirtyBox = c, this.hasRendered && w(a, !0) && this.isDirtyBox && this.redraw());
	      }, getChartSize: function getChartSize() {
	        var a = this.options.chart,
	            c = a.width,
	            a = a.height,
	            e = this.renderToClone || this.renderTo;b(c) || (this.containerWidth = m(e, "width"));b(a) || (this.containerHeight = m(e, "height"));this.chartWidth = Math.max(0, c || this.containerWidth || 600);this.chartHeight = Math.max(0, w(a, 19 < this.containerHeight ? this.containerHeight : 400));
	      }, cloneRenderTo: function cloneRenderTo(a) {
	        var b = this.renderToClone,
	            c = this.container;if (a) {
	          if (b) {
	            for (; b.childNodes.length;) {
	              this.renderTo.appendChild(b.firstChild);
	            }t(b);delete this.renderToClone;
	          }
	        } else c && c.parentNode === this.renderTo && this.renderTo.removeChild(c), this.renderToClone = b = this.renderTo.cloneNode(0), h(b, { position: "absolute", top: "-9999px", display: "block" }), b.style.setProperty && b.style.setProperty("display", "block", "important"), v.body.appendChild(b), c && b.appendChild(c);
	      }, setClassName: function setClassName(a) {
	        this.container.className = "highcharts-container " + (a || "");
	      }, getContainer: function getContainer() {
	        var b,
	            c = this.options,
	            e = c.chart,
	            d,
	            k;b = this.renderTo;var w = a.uniqueKey(),
	            h;b || (this.renderTo = b = e.renderTo);f(b) && (this.renderTo = b = v.getElementById(b));b || a.error(13, !0);d = D(F(b, "data-highcharts-chart"));r(d) && n[d] && n[d].hasRendered && n[d].destroy();F(b, "data-highcharts-chart", this.index);b.innerHTML = "";e.skipClone || b.offsetWidth || this.cloneRenderTo();this.getChartSize();d = this.chartWidth;k = this.chartHeight;h = A({ position: "relative", overflow: "hidden", width: d + "px", height: k + "px", textAlign: "left", lineHeight: "normal", zIndex: 0, "-webkit-tap-highlight-color": "rgba(0,0,0,0)" }, e.style);
	        this.container = b = q("div", { id: w }, h, this.renderToClone || b);this._cursor = b.style.cursor;this.renderer = new (a[e.renderer] || O)(b, d, k, null, e.forExport, c.exporting && c.exporting.allowHTML);this.setClassName(e.className);this.renderer.setStyle(e.style);this.renderer.chartIndex = this.index;
	      }, getMargins: function getMargins(a) {
	        var c = this.spacing,
	            e = this.margin,
	            d = this.titleOffset;this.resetMargins();d && !b(e[0]) && (this.plotTop = Math.max(this.plotTop, d + this.options.title.margin + c[0]));this.legend.display && this.legend.adjustMargins(e, c);this.extraBottomMargin && (this.marginBottom += this.extraBottomMargin);this.extraTopMargin && (this.plotTop += this.extraTopMargin);a || this.getAxisMargins();
	      }, getAxisMargins: function getAxisMargins() {
	        var a = this,
	            c = a.axisOffset = [0, 0, 0, 0],
	            d = a.margin;a.hasCartesianSeries && g(a.axes, function (a) {
	          a.visible && a.getOffset();
	        });g(e, function (e, k) {
	          b(d[k]) || (a[e] += c[k]);
	        });a.setChartSize();
	      }, reflow: function reflow(a) {
	        var c = this,
	            e = c.options.chart,
	            d = c.renderTo,
	            k = b(e.width),
	            f = e.width || m(d, "width"),
	            e = e.height || m(d, "height"),
	            d = a ? a.target : M;if (!k && !c.isPrinting && f && e && (d === M || d === v)) {
	          if (f !== c.containerWidth || e !== c.containerHeight) clearTimeout(c.reflowTimeout), c.reflowTimeout = R(function () {
	            c.container && c.setSize(void 0, void 0, !1);
	          }, a ? 100 : 0);c.containerWidth = f;c.containerHeight = e;
	        }
	      }, initReflow: function initReflow() {
	        var a = this,
	            b;b = B(M, "resize", function (b) {
	          a.reflow(b);
	        });B(a, "destroy", b);
	      }, setSize: function setSize(b, c, e) {
	        var d = this,
	            k = d.renderer;d.isResizing += 1;a.setAnimation(e, d);d.oldChartHeight = d.chartHeight;d.oldChartWidth = d.chartWidth;void 0 !== b && (d.options.chart.width = b);void 0 !== c && (d.options.chart.height = c);d.getChartSize();b = k.globalAnimation;(b ? C : h)(d.container, { width: d.chartWidth + "px", height: d.chartHeight + "px" }, b);d.setChartSize(!0);k.setSize(d.chartWidth, d.chartHeight, e);g(d.axes, function (a) {
	          a.isDirty = !0;a.setScale();
	        });d.isDirtyLegend = !0;d.isDirtyBox = !0;d.layOutTitles();d.getMargins();d.setResponsive && d.setResponsive(!1);d.redraw(e);d.oldChartHeight = null;p(d, "resize");R(function () {
	          d && p(d, "endResize", null, function () {
	            --d.isResizing;
	          });
	        }, E(b).duration);
	      }, setChartSize: function setChartSize(a) {
	        var b = this.inverted,
	            c = this.renderer,
	            e = this.chartWidth,
	            d = this.chartHeight,
	            k = this.options.chart,
	            f = this.spacing,
	            w = this.clipOffset,
	            h,
	            D,
	            m,
	            u;this.plotLeft = h = Math.round(this.plotLeft);this.plotTop = D = Math.round(this.plotTop);this.plotWidth = m = Math.max(0, Math.round(e - h - this.marginRight));this.plotHeight = u = Math.max(0, Math.round(d - D - this.marginBottom));this.plotSizeX = b ? u : m;this.plotSizeY = b ? m : u;this.plotBorderWidth = k.plotBorderWidth || 0;this.spacingBox = c.spacingBox = { x: f[3], y: f[0], width: e - f[3] - f[1], height: d - f[0] - f[2] };
	        this.plotBox = c.plotBox = { x: h, y: D, width: m, height: u };e = 2 * Math.floor(this.plotBorderWidth / 2);b = Math.ceil(Math.max(e, w[3]) / 2);c = Math.ceil(Math.max(e, w[0]) / 2);this.clipBox = { x: b, y: c, width: Math.floor(this.plotSizeX - Math.max(e, w[1]) / 2 - b), height: Math.max(0, Math.floor(this.plotSizeY - Math.max(e, w[2]) / 2 - c)) };a || g(this.axes, function (a) {
	          a.setAxisSize();a.setAxisTranslation();
	        });
	      }, resetMargins: function resetMargins() {
	        var a = this,
	            b = a.options.chart;g(["margin", "spacing"], function (c) {
	          var e = b[c],
	              d = G(e) ? e : [e, e, e, e];g(["Top", "Right", "Bottom", "Left"], function (e, k) {
	            a[c][k] = w(b[c + e], d[k]);
	          });
	        });g(e, function (b, c) {
	          a[b] = w(a.margin[c], a.spacing[c]);
	        });a.axisOffset = [0, 0, 0, 0];a.clipOffset = [0, 0, 0, 0];
	      }, drawChartBox: function drawChartBox() {
	        var a = this.options.chart,
	            b = this.renderer,
	            c = this.chartWidth,
	            e = this.chartHeight,
	            d = this.chartBackground,
	            k = this.plotBackground,
	            f = this.plotBorder,
	            w,
	            h = this.plotBGImage,
	            g = a.backgroundColor,
	            D = a.plotBackgroundColor,
	            m = a.plotBackgroundImage,
	            u,
	            r = this.plotLeft,
	            p = this.plotTop,
	            y = this.plotWidth,
	            n = this.plotHeight,
	            z = this.plotBox,
	            A = this.clipRect,
	            I = this.clipBox,
	            l = "animate";d || (this.chartBackground = d = b.rect().addClass("highcharts-background").add(), l = "attr");w = a.borderWidth || 0;u = w + (a.shadow ? 8 : 0);g = { fill: g || "none" };if (w || d["stroke-width"]) g.stroke = a.borderColor, g["stroke-width"] = w;d.attr(g).shadow(a.shadow);d[l]({ x: u / 2, y: u / 2, width: c - u - w % 2, height: e - u - w % 2, r: a.borderRadius });l = "animate";k || (l = "attr", this.plotBackground = k = b.rect().addClass("highcharts-plot-background").add());k[l](z);k.attr({ fill: D || "none" }).shadow(a.plotShadow);m && (h ? h.animate(z) : this.plotBGImage = b.image(m, r, p, y, n).add());A ? A.animate({ width: I.width, height: I.height }) : this.clipRect = b.clipRect(I);l = "animate";f || (l = "attr", this.plotBorder = f = b.rect().addClass("highcharts-plot-border").attr({ zIndex: 1 }).add());f.attr({ stroke: a.plotBorderColor, "stroke-width": a.plotBorderWidth || 0, fill: "none" });f[l](f.crisp({ x: r, y: p, width: y, height: n }, -f.strokeWidth()));this.isDirtyBox = !1;
	      }, propFromSeries: function propFromSeries() {
	        var a = this,
	            b = a.options.chart,
	            c,
	            e = a.options.series,
	            d,
	            k;g(["inverted", "angular", "polar"], function (f) {
	          c = L[b.type || b.defaultSeriesType];k = b[f] || c && c.prototype[f];for (d = e && e.length; !k && d--;) {
	            (c = L[e[d].type]) && c.prototype[f] && (k = !0);
	          }a[f] = k;
	        });
	      }, linkSeries: function linkSeries() {
	        var a = this,
	            b = a.series;g(b, function (a) {
	          a.linkedSeries.length = 0;
	        });g(b, function (b) {
	          var c = b.options.linkedTo;f(c) && (c = ":previous" === c ? a.series[b.index - 1] : a.get(c)) && c.linkedParent !== b && (c.linkedSeries.push(b), b.linkedParent = c, b.visible = w(b.options.visible, c.options.visible, b.visible));
	        });
	      }, renderSeries: function renderSeries() {
	        g(this.series, function (a) {
	          a.translate();
	          a.render();
	        });
	      }, renderLabels: function renderLabels() {
	        var a = this,
	            b = a.options.labels;b.items && g(b.items, function (c) {
	          var e = A(b.style, c.style),
	              d = D(e.left) + a.plotLeft,
	              k = D(e.top) + a.plotTop + 12;delete e.left;delete e.top;a.renderer.text(c.html, d, k).attr({ zIndex: 2 }).css(e).add();
	        });
	      }, render: function render() {
	        var a = this.axes,
	            b = this.renderer,
	            c = this.options,
	            e,
	            d,
	            k;this.setTitle();this.legend = new z(this, c.legend);this.getStacks && this.getStacks();this.getMargins(!0);this.setChartSize();c = this.plotWidth;e = this.plotHeight -= 21;g(a, function (a) {
	          a.setScale();
	        });
	        this.getAxisMargins();d = 1.1 < c / this.plotWidth;k = 1.05 < e / this.plotHeight;if (d || k) g(a, function (a) {
	          (a.horiz && d || !a.horiz && k) && a.setTickInterval(!0);
	        }), this.getMargins();this.drawChartBox();this.hasCartesianSeries && g(a, function (a) {
	          a.visible && a.render();
	        });this.seriesGroup || (this.seriesGroup = b.g("series-group").attr({ zIndex: 3 }).add());this.renderSeries();this.renderLabels();this.addCredits();this.setResponsive && this.setResponsive();this.hasRendered = !0;
	      }, addCredits: function addCredits(a) {
	        var b = this;a = y(!0, this.options.credits, a);a.enabled && !this.credits && (this.credits = this.renderer.text(a.text + (this.mapCredits || ""), 0, 0).addClass("highcharts-credits").on("click", function () {
	          a.href && (M.location.href = a.href);
	        }).attr({ align: a.position.align, zIndex: 8 }).css(a.style).add().align(a.position), this.credits.update = function (a) {
	          b.credits = b.credits.destroy();b.addCredits(a);
	        });
	      }, destroy: function destroy() {
	        var b = this,
	            c = b.axes,
	            e = b.series,
	            d = b.container,
	            k,
	            f = d && d.parentNode;p(b, "destroy");n[b.index] = void 0;a.chartCount--;b.renderTo.removeAttribute("data-highcharts-chart");
	        I(b);for (k = c.length; k--;) {
	          c[k] = c[k].destroy();
	        }this.scroller && this.scroller.destroy && this.scroller.destroy();for (k = e.length; k--;) {
	          e[k] = e[k].destroy();
	        }g("title subtitle chartBackground plotBackground plotBGImage plotBorder seriesGroup clipRect credits pointer rangeSelector legend resetZoomButton tooltip renderer".split(" "), function (a) {
	          var c = b[a];c && c.destroy && (b[a] = c.destroy());
	        });d && (d.innerHTML = "", I(d), f && t(d));for (k in b) {
	          delete b[k];
	        }
	      }, isReadyToRender: function isReadyToRender() {
	        var a = this;return H || M != M.top || "complete" === v.readyState ? !0 : (v.attachEvent("onreadystatechange", function () {
	          v.detachEvent("onreadystatechange", a.firstRender);"complete" === v.readyState && a.firstRender();
	        }), !1);
	      }, firstRender: function firstRender() {
	        var a = this,
	            b = a.options;if (a.isReadyToRender()) {
	          a.getContainer();p(a, "init");a.resetMargins();a.setChartSize();a.propFromSeries();a.getAxes();g(b.series || [], function (b) {
	            a.initSeries(b);
	          });a.linkSeries();p(a, "beforeRender");c && (a.pointer = new c(a, b));a.render();a.renderer.draw();if (!a.renderer.imgCount && a.onload) a.onload();
	          a.cloneRenderTo(!0);
	        }
	      }, onload: function onload() {
	        g([this.callback].concat(this.callbacks), function (a) {
	          a && void 0 !== this.index && a.apply(this, [this]);
	        }, this);p(this, "load");b(this.index) && !1 !== this.options.chart.reflow && this.initReflow();this.onload = null;
	      } };
	  })(K);(function (a) {
	    var B,
	        C = a.each,
	        E = a.extend,
	        F = a.erase,
	        v = a.fireEvent,
	        l = a.format,
	        q = a.isArray,
	        x = a.isNumber,
	        t = a.pick,
	        n = a.removeEvent;B = a.Point = function () {};B.prototype = { init: function init(a, b, g) {
	        this.series = a;this.color = a.color;this.applyOptions(b, g);a.options.colorByPoint ? (b = a.options.colors || a.chart.options.colors, this.color = this.color || b[a.colorCounter], b = b.length, g = a.colorCounter, a.colorCounter++, a.colorCounter === b && (a.colorCounter = 0)) : g = a.colorIndex;this.colorIndex = t(this.colorIndex, g);a.chart.pointCount++;return this;
	      }, applyOptions: function applyOptions(a, b) {
	        var g = this.series,
	            h = g.options.pointValKey || g.pointValKey;a = B.prototype.optionsToObject.call(this, a);E(this, a);this.options = this.options ? E(this.options, a) : a;a.group && delete this.group;h && (this.y = this[h]);this.isNull = t(this.isValid && !this.isValid(), null === this.x || !x(this.y, !0));this.selected && (this.state = "select");"name" in this && void 0 === b && g.xAxis && g.xAxis.hasNames && (this.x = g.xAxis.nameToX(this));void 0 === this.x && g && (this.x = void 0 === b ? g.autoIncrement(this) : b);return this;
	      }, optionsToObject: function optionsToObject(a) {
	        var b = {},
	            g = this.series,
	            h = g.options.keys,
	            u = h || g.pointArrayMap || ["y"],
	            p = u.length,
	            m = 0,
	            d = 0;if (x(a) || null === a) b[u[0]] = a;else if (q(a)) for (!h && a.length > p && (g = _typeof(a[0]), "string" === g ? b.name = a[0] : "number" === g && (b.x = a[0]), m++); d < p;) {
	          h && void 0 === a[m] || (b[u[d]] = a[m]), m++, d++;
	        } else "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && (b = a, a.dataLabels && (g._hasPointLabels = !0), a.marker && (g._hasPointMarkers = !0));return b;
	      }, getClassName: function getClassName() {
	        return "highcharts-point" + (this.selected ? " highcharts-point-select" : "") + (this.negative ? " highcharts-negative" : "") + (this.isNull ? " highcharts-null-point" : "") + (void 0 !== this.colorIndex ? " highcharts-color-" + this.colorIndex : "") + (this.options.className ? " " + this.options.className : "") + (this.zone && this.zone.className ? " " + this.zone.className : "");
	      },
	      getZone: function getZone() {
	        var a = this.series,
	            b = a.zones,
	            a = a.zoneAxis || "y",
	            g = 0,
	            n;for (n = b[g]; this[a] >= n.value;) {
	          n = b[++g];
	        }n && n.color && !this.options.color && (this.color = n.color);return n;
	      }, destroy: function destroy() {
	        var a = this.series.chart,
	            b = a.hoverPoints,
	            g;a.pointCount--;b && (this.setState(), F(b, this), b.length || (a.hoverPoints = null));if (this === a.hoverPoint) this.onMouseOut();if (this.graphic || this.dataLabel) n(this), this.destroyElements();this.legendItem && a.legend.destroyItem(this);for (g in this) {
	          this[g] = null;
	        }
	      }, destroyElements: function destroyElements() {
	        for (var a = ["graphic", "dataLabel", "dataLabelUpper", "connector", "shadowGroup"], b, g = 6; g--;) {
	          b = a[g], this[b] && (this[b] = this[b].destroy());
	        }
	      }, getLabelConfig: function getLabelConfig() {
	        return { x: this.category, y: this.y, color: this.color, key: this.name || this.category, series: this.series, point: this, percentage: this.percentage, total: this.total || this.stackTotal };
	      }, tooltipFormatter: function tooltipFormatter(a) {
	        var b = this.series,
	            g = b.tooltipOptions,
	            h = t(g.valueDecimals, ""),
	            u = g.valuePrefix || "",
	            p = g.valueSuffix || "";C(b.pointArrayMap || ["y"], function (b) {
	          b = "{point." + b;
	          if (u || p) a = a.replace(b + "}", u + b + "}" + p);a = a.replace(b + "}", b + ":,." + h + "f}");
	        });return l(a, { point: this, series: this.series });
	      }, firePointEvent: function firePointEvent(a, b, g) {
	        var h = this,
	            u = this.series.options;(u.point.events[a] || h.options && h.options.events && h.options.events[a]) && this.importEvents();"click" === a && u.allowPointSelect && (g = function g(a) {
	          h.select && h.select(null, a.ctrlKey || a.metaKey || a.shiftKey);
	        });v(this, a, b, g);
	      }, visible: !0 };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.animObject,
	        E = a.arrayMax,
	        F = a.arrayMin,
	        v = a.correctFloat,
	        l = a.Date,
	        q = a.defaultOptions,
	        x = a.defaultPlotOptions,
	        t = a.defined,
	        n = a.each,
	        h = a.erase,
	        b = a.extend,
	        g = a.fireEvent,
	        A = a.grep,
	        u = a.isArray,
	        p = a.isNumber,
	        m = a.isString,
	        d = a.merge,
	        r = a.pick,
	        G = a.removeEvent,
	        f = a.splat,
	        z = a.SVGElement,
	        e = a.syncTimeout,
	        y = a.win;a.Series = a.seriesType("line", null, { lineWidth: 2, allowPointSelect: !1, showCheckbox: !1, animation: { duration: 1E3 }, events: {}, marker: { lineWidth: 0, lineColor: "#ffffff", radius: 4, states: { hover: { animation: { duration: 50 }, enabled: !0, radiusPlus: 2, lineWidthPlus: 1 }, select: { fillColor: "#cccccc",
	            lineColor: "#000000", lineWidth: 2 } } }, point: { events: {} }, dataLabels: { align: "center", formatter: function formatter() {
	          return null === this.y ? "" : a.numberFormat(this.y, -1);
	        }, style: { fontSize: "11px", fontWeight: "bold", color: "contrast", textOutline: "1px contrast" }, verticalAlign: "bottom", x: 0, y: 0, padding: 5 }, cropThreshold: 300, pointRange: 0, softThreshold: !0, states: { hover: { lineWidthPlus: 1, marker: {}, halo: { size: 10, opacity: .25 } }, select: { marker: {} } }, stickyTracking: !0, turboThreshold: 1E3 }, { isCartesian: !0, pointClass: a.Point, sorted: !0, requireSorting: !0,
	      directTouch: !1, axisTypes: ["xAxis", "yAxis"], colorCounter: 0, parallelArrays: ["x", "y"], coll: "series", init: function init(a, e) {
	        var c = this,
	            d,
	            f,
	            k = a.series,
	            w;c.chart = a;c.options = e = c.setOptions(e);c.linkedSeries = [];c.bindAxes();b(c, { name: e.name, state: "", visible: !1 !== e.visible, selected: !0 === e.selected });f = e.events;for (d in f) {
	          B(c, d, f[d]);
	        }if (f && f.click || e.point && e.point.events && e.point.events.click || e.allowPointSelect) a.runTrackerClick = !0;c.getColor();c.getSymbol();n(c.parallelArrays, function (a) {
	          c[a + "Data"] = [];
	        });c.setData(e.data, !1);c.isCartesian && (a.hasCartesianSeries = !0);k.length && (w = k[k.length - 1]);c._i = r(w && w._i, -1) + 1;for (a = this.insert(k); a < k.length; a++) {
	          k[a].index = a, k[a].name = k[a].name || "Series " + (k[a].index + 1);
	        }
	      }, insert: function insert(a) {
	        var b = this.options.index,
	            c;if (p(b)) {
	          for (c = a.length; c--;) {
	            if (b >= r(a[c].options.index, a[c]._i)) {
	              a.splice(c + 1, 0, this);break;
	            }
	          }-1 === c && a.unshift(this);c += 1;
	        } else a.push(this);return r(c, a.length - 1);
	      }, bindAxes: function bindAxes() {
	        var b = this,
	            e = b.options,
	            d = b.chart,
	            f;n(b.axisTypes || [], function (c) {
	          n(d[c], function (a) {
	            f = a.options;if (e[c] === f.index || void 0 !== e[c] && e[c] === f.id || void 0 === e[c] && 0 === f.index) b.insert(a.series), b[c] = a, a.isDirty = !0;
	          });b[c] || b.optionalAxis === c || a.error(18, !0);
	        });
	      }, updateParallelArrays: function updateParallelArrays(a, b) {
	        var c = a.series,
	            e = arguments,
	            d = p(b) ? function (e) {
	          var d = "y" === e && c.toYData ? c.toYData(a) : a[e];c[e + "Data"][b] = d;
	        } : function (a) {
	          Array.prototype[b].apply(c[a + "Data"], Array.prototype.slice.call(e, 2));
	        };n(c.parallelArrays, d);
	      }, autoIncrement: function autoIncrement() {
	        var a = this.options,
	            b = this.xIncrement,
	            e,
	            d = a.pointIntervalUnit,
	            b = r(b, a.pointStart, 0);this.pointInterval = e = r(this.pointInterval, a.pointInterval, 1);d && (a = new l(b), "day" === d ? a = +a[l.hcSetDate](a[l.hcGetDate]() + e) : "month" === d ? a = +a[l.hcSetMonth](a[l.hcGetMonth]() + e) : "year" === d && (a = +a[l.hcSetFullYear](a[l.hcGetFullYear]() + e)), e = a - b);this.xIncrement = b + e;return b;
	      }, setOptions: function setOptions(a) {
	        var b = this.chart,
	            c = b.options.plotOptions,
	            b = b.userOptions || {},
	            e = b.plotOptions || {},
	            f = c[this.type];this.userOptions = a;c = d(f, c.series, a);this.tooltipOptions = d(q.tooltip, q.plotOptions[this.type].tooltip, b.tooltip, e.series && e.series.tooltip, e[this.type] && e[this.type].tooltip, a.tooltip);null === f.marker && delete c.marker;this.zoneAxis = c.zoneAxis;a = this.zones = (c.zones || []).slice();!c.negativeColor && !c.negativeFillColor || c.zones || a.push({ value: c[this.zoneAxis + "Threshold"] || c.threshold || 0, className: "highcharts-negative", color: c.negativeColor, fillColor: c.negativeFillColor });a.length && t(a[a.length - 1].value) && a.push({ color: this.color, fillColor: this.fillColor });return c;
	      }, getCyclic: function getCyclic(a, b, e) {
	        var c,
	            d = this.userOptions,
	            k = a + "Index",
	            f = a + "Counter",
	            w = e ? e.length : r(this.chart.options.chart[a + "Count"], this.chart[a + "Count"]);b || (c = r(d[k], d["_" + k]), t(c) || (d["_" + k] = c = this.chart[f] % w, this.chart[f] += 1), e && (b = e[c]));void 0 !== c && (this[k] = c);this[a] = b;
	      }, getColor: function getColor() {
	        this.options.colorByPoint ? this.options.color = null : this.getCyclic("color", this.options.color || x[this.type].color, this.chart.options.colors);
	      }, getSymbol: function getSymbol() {
	        this.getCyclic("symbol", this.options.marker.symbol, this.chart.options.symbols);
	      }, drawLegendSymbol: a.LegendSymbolMixin.drawLineMarker,
	      setData: function setData(b, e, d, f) {
	        var c = this,
	            k = c.points,
	            w = k && k.length || 0,
	            g,
	            h = c.options,
	            D = c.chart,
	            y = null,
	            z = c.xAxis,
	            l = h.turboThreshold,
	            A = this.xData,
	            I = this.yData,
	            G = (g = c.pointArrayMap) && g.length;b = b || [];g = b.length;e = r(e, !0);if (!1 !== f && g && w === g && !c.cropped && !c.hasGroupedData && c.visible) n(b, function (a, b) {
	          k[b].update && a !== h.data[b] && k[b].update(a, !1, null, !1);
	        });else {
	          c.xIncrement = null;c.colorCounter = 0;n(this.parallelArrays, function (a) {
	            c[a + "Data"].length = 0;
	          });if (l && g > l) {
	            for (d = 0; null === y && d < g;) {
	              y = b[d], d++;
	            }if (p(y)) for (d = 0; d < g; d++) {
	              A[d] = this.autoIncrement(), I[d] = b[d];
	            } else if (u(y)) {
	              if (G) for (d = 0; d < g; d++) {
	                y = b[d], A[d] = y[0], I[d] = y.slice(1, G + 1);
	              } else for (d = 0; d < g; d++) {
	                y = b[d], A[d] = y[0], I[d] = y[1];
	              }
	            } else a.error(12);
	          } else for (d = 0; d < g; d++) {
	            void 0 !== b[d] && (y = { series: c }, c.pointClass.prototype.applyOptions.apply(y, [b[d]]), c.updateParallelArrays(y, d));
	          }m(I[0]) && a.error(14, !0);c.data = [];c.options.data = c.userOptions.data = b;for (d = w; d--;) {
	            k[d] && k[d].destroy && k[d].destroy();
	          }z && (z.minRange = z.userMinRange);c.isDirty = D.isDirtyBox = !0;c.isDirtyData = !!k;d = !1;
	        }"point" === h.legendType && (this.processData(), this.generatePoints());e && D.redraw(d);
	      }, processData: function processData(b) {
	        var c = this.xData,
	            e = this.yData,
	            d = c.length,
	            f;f = 0;var k,
	            g,
	            h = this.xAxis,
	            m,
	            u = this.options;m = u.cropThreshold;var r = this.getExtremesFromAll || u.getExtremesFromAll,
	            p = this.isCartesian,
	            u = h && h.val2lin,
	            y = h && h.isLog,
	            n,
	            z;if (p && !this.isDirty && !h.isDirty && !this.yAxis.isDirty && !b) return !1;h && (b = h.getExtremes(), n = b.min, z = b.max);if (p && this.sorted && !r && (!m || d > m || this.forceCrop)) if (c[d - 1] < n || c[0] > z) c = [], e = [];else if (c[0] < n || c[d - 1] > z) f = this.cropData(this.xData, this.yData, n, z), c = f.xData, e = f.yData, f = f.start, k = !0;for (m = c.length || 1; --m;) {
	          d = y ? u(c[m]) - u(c[m - 1]) : c[m] - c[m - 1], 0 < d && (void 0 === g || d < g) ? g = d : 0 > d && this.requireSorting && a.error(15);
	        }this.cropped = k;this.cropStart = f;this.processedXData = c;this.processedYData = e;this.closestPointRange = g;
	      }, cropData: function cropData(a, b, e, d) {
	        var c = a.length,
	            k = 0,
	            f = c,
	            w = r(this.cropShoulder, 1),
	            g;for (g = 0; g < c; g++) {
	          if (a[g] >= e) {
	            k = Math.max(0, g - w);break;
	          }
	        }for (e = g; e < c; e++) {
	          if (a[e] > d) {
	            f = e + w;break;
	          }
	        }return { xData: a.slice(k, f), yData: b.slice(k, f), start: k, end: f };
	      }, generatePoints: function generatePoints() {
	        var a = this.options.data,
	            b = this.data,
	            e,
	            d = this.processedXData,
	            g = this.processedYData,
	            k = this.pointClass,
	            h = d.length,
	            m = this.cropStart || 0,
	            u,
	            r = this.hasGroupedData,
	            p,
	            y = [],
	            n;b || r || (b = [], b.length = a.length, b = this.data = b);for (n = 0; n < h; n++) {
	          u = m + n, r ? (p = new k().init(this, [d[n]].concat(f(g[n]))), p.dataGroup = this.groupMap[n]) : (p = b[u]) || void 0 === a[u] || (b[u] = p = new k().init(this, a[u], d[n])), p.index = u, y[n] = p;
	        }if (b && (h !== (e = b.length) || r)) for (n = 0; n < e; n++) {
	          n !== m || r || (n += h), b[n] && (b[n].destroyElements(), b[n].plotX = void 0);
	        }this.data = b;this.points = y;
	      }, getExtremes: function getExtremes(a) {
	        var b = this.yAxis,
	            c = this.processedXData,
	            e,
	            d = [],
	            k = 0;e = this.xAxis.getExtremes();var f = e.min,
	            g = e.max,
	            h,
	            m,
	            r,
	            n;a = a || this.stackedYData || this.processedYData || [];e = a.length;for (n = 0; n < e; n++) {
	          if (m = c[n], r = a[n], h = (p(r, !0) || u(r)) && (!b.isLog || r.length || 0 < r), m = this.getExtremesFromAll || this.options.getExtremesFromAll || this.cropped || (c[n + 1] || m) >= f && (c[n - 1] || m) <= g, h && m) if (h = r.length) for (; h--;) {
	            null !== r[h] && (d[k++] = r[h]);
	          } else d[k++] = r;
	        }this.dataMin = F(d);this.dataMax = E(d);
	      }, translate: function translate() {
	        this.processedXData || this.processData();this.generatePoints();var a = this.options,
	            b = a.stacking,
	            e = this.xAxis,
	            d = e.categories,
	            f = this.yAxis,
	            k = this.points,
	            g = k.length,
	            h = !!this.modifyValue,
	            m = a.pointPlacement,
	            u = "between" === m || p(m),
	            n = a.threshold,
	            y = a.startFromThreshold ? n : 0,
	            z,
	            l,
	            A,
	            G,
	            q = Number.MAX_VALUE;"between" === m && (m = .5);p(m) && (m *= r(a.pointRange || e.pointRange));for (a = 0; a < g; a++) {
	          var x = k[a],
	              C = x.x,
	              B = x.y;l = x.low;var E = b && f.stacks[(this.negStacks && B < (y ? 0 : n) ? "-" : "") + this.stackKey],
	              F;f.isLog && null !== B && 0 >= B && (x.isNull = !0);x.plotX = z = v(Math.min(Math.max(-1E5, e.translate(C, 0, 0, 0, 1, m, "flags" === this.type)), 1E5));b && this.visible && !x.isNull && E && E[C] && (G = this.getStackIndicator(G, C, this.index), F = E[C], B = F.points[G.key], l = B[0], B = B[1], l === y && G.key === E[C].base && (l = r(n, f.min)), f.isLog && 0 >= l && (l = null), x.total = x.stackTotal = F.total, x.percentage = F.total && x.y / F.total * 100, x.stackY = B, F.setOffset(this.pointXOffset || 0, this.barW || 0));x.yBottom = t(l) ? f.translate(l, 0, 1, 0, 1) : null;h && (B = this.modifyValue(B, x));x.plotY = l = "number" === typeof B && Infinity !== B ? Math.min(Math.max(-1E5, f.translate(B, 0, 1, 0, 1)), 1E5) : void 0;x.isInside = void 0 !== l && 0 <= l && l <= f.len && 0 <= z && z <= e.len;x.clientX = u ? v(e.translate(C, 0, 0, 0, 1, m)) : z;x.negative = x.y < (n || 0);x.category = d && void 0 !== d[x.x] ? d[x.x] : x.x;x.isNull || (void 0 !== A && (q = Math.min(q, Math.abs(z - A))), A = z);x.zone = this.zones.length && x.getZone();
	        }this.closestPointRangePx = q;
	      }, getValidPoints: function getValidPoints(a, b) {
	        var c = this.chart;return A(a || this.points || [], function (a) {
	          return b && !c.isInsidePlot(a.plotX, a.plotY, c.inverted) ? !1 : !a.isNull;
	        });
	      }, setClip: function setClip(a) {
	        var b = this.chart,
	            c = this.options,
	            e = b.renderer,
	            d = b.inverted,
	            f = this.clipBox,
	            g = f || b.clipBox,
	            h = this.sharedClipKey || ["_sharedClip", a && a.duration, a && a.easing, g.height, c.xAxis, c.yAxis].join(),
	            m = b[h],
	            u = b[h + "m"];m || (a && (g.width = 0, b[h + "m"] = u = e.clipRect(-99, d ? -b.plotLeft : -b.plotTop, 99, d ? b.chartWidth : b.chartHeight)), b[h] = m = e.clipRect(g), m.count = { length: 0 });a && !m.count[this.index] && (m.count[this.index] = !0, m.count.length += 1);!1 !== c.clip && (this.group.clip(a || f ? m : b.clipRect), this.markerGroup.clip(u), this.sharedClipKey = h);a || (m.count[this.index] && (delete m.count[this.index], --m.count.length), 0 === m.count.length && h && b[h] && (f || (b[h] = b[h].destroy()), b[h + "m"] && (b[h + "m"] = b[h + "m"].destroy())));
	      }, animate: function animate(a) {
	        var b = this.chart,
	            c = C(this.options.animation),
	            e;a ? this.setClip(c) : (e = this.sharedClipKey, (a = b[e]) && a.animate({ width: b.plotSizeX }, c), b[e + "m"] && b[e + "m"].animate({ width: b.plotSizeX + 99 }, c), this.animate = null);
	      }, afterAnimate: function afterAnimate() {
	        this.setClip();
	        g(this, "afterAnimate");
	      }, drawPoints: function drawPoints() {
	        var a = this.points,
	            b = this.chart,
	            e,
	            d,
	            f,
	            k,
	            g = this.options.marker,
	            h,
	            m,
	            u,
	            n,
	            y = this.markerGroup,
	            z = r(g.enabled, this.xAxis.isRadial ? !0 : null, this.closestPointRangePx > 2 * g.radius);if (!1 !== g.enabled || this._hasPointMarkers) for (d = a.length; d--;) {
	          f = a[d], e = f.plotY, k = f.graphic, h = f.marker || {}, m = !!f.marker, u = z && void 0 === h.enabled || h.enabled, n = f.isInside, u && p(e) && null !== f.y ? (e = r(h.symbol, this.symbol), f.hasImage = 0 === e.indexOf("url"), u = this.markerAttribs(f, f.selected && "select"), k ? k[n ? "show" : "hide"](!0).animate(u) : n && (0 < u.width || f.hasImage) && (f.graphic = k = b.renderer.symbol(e, u.x, u.y, u.width, u.height, m ? h : g).add(y)), k && k.attr(this.pointAttribs(f, f.selected && "select")), k && k.addClass(f.getClassName(), !0)) : k && (f.graphic = k.destroy());
	        }
	      }, markerAttribs: function markerAttribs(a, b) {
	        var c = this.options.marker,
	            e = a && a.options,
	            d = e && e.marker || {},
	            e = r(d.radius, c.radius);b && (c = c.states[b], b = d.states && d.states[b], e = r(b && b.radius, c && c.radius, e + (c && c.radiusPlus || 0)));a.hasImage && (e = 0);a = { x: Math.floor(a.plotX) - e, y: a.plotY - e };e && (a.width = a.height = 2 * e);return a;
	      }, pointAttribs: function pointAttribs(a, b) {
	        var c = this.options.marker,
	            e = a && a.options,
	            d = e && e.marker || {},
	            f = this.color,
	            g = e && e.color,
	            h = a && a.color,
	            e = r(d.lineWidth, c.lineWidth);a = a && a.zone && a.zone.color;f = g || a || h || f;a = d.fillColor || c.fillColor || f;f = d.lineColor || c.lineColor || f;b && (c = c.states[b], b = d.states && d.states[b] || {}, e = r(b.lineWidth, c.lineWidth, e + r(b.lineWidthPlus, c.lineWidthPlus, 0)), a = b.fillColor || c.fillColor || a, f = b.lineColor || c.lineColor || f);return { stroke: f, "stroke-width": e,
	          fill: a };
	      }, destroy: function destroy() {
	        var a = this,
	            b = a.chart,
	            e = /AppleWebKit\/533/.test(y.navigator.userAgent),
	            d,
	            f = a.data || [],
	            k,
	            m,
	            u;g(a, "destroy");G(a);n(a.axisTypes || [], function (b) {
	          (u = a[b]) && u.series && (h(u.series, a), u.isDirty = u.forceRedraw = !0);
	        });a.legendItem && a.chart.legend.destroyItem(a);for (d = f.length; d--;) {
	          (k = f[d]) && k.destroy && k.destroy();
	        }a.points = null;clearTimeout(a.animationTimeout);for (m in a) {
	          a[m] instanceof z && !a[m].survive && (d = e && "group" === m ? "hide" : "destroy", a[m][d]());
	        }b.hoverSeries === a && (b.hoverSeries = null);h(b.series, a);for (m in a) {
	          delete a[m];
	        }
	      }, getGraphPath: function getGraphPath(a, b, e) {
	        var c = this,
	            d = c.options,
	            f = d.step,
	            g,
	            h = [],
	            w = [],
	            m;a = a || c.points;(g = a.reversed) && a.reverse();(f = { right: 1, center: 2 }[f] || f && 3) && g && (f = 4 - f);!d.connectNulls || b || e || (a = this.getValidPoints(a));n(a, function (k, g) {
	          var u = k.plotX,
	              r = k.plotY,
	              p = a[g - 1];(k.leftCliff || p && p.rightCliff) && !e && (m = !0);k.isNull && !t(b) && 0 < g ? m = !d.connectNulls : k.isNull && !b ? m = !0 : (0 === g || m ? g = ["M", k.plotX, k.plotY] : c.getPointSpline ? g = c.getPointSpline(a, k, g) : f ? (g = 1 === f ? ["L", p.plotX, r] : 2 === f ? ["L", (p.plotX + u) / 2, p.plotY, "L", (p.plotX + u) / 2, r] : ["L", u, p.plotY], g.push("L", u, r)) : g = ["L", u, r], w.push(k.x), f && w.push(k.x), h.push.apply(h, g), m = !1);
	        });h.xMap = w;return c.graphPath = h;
	      }, drawGraph: function drawGraph() {
	        var a = this,
	            b = this.options,
	            e = (this.gappedPath || this.getGraphPath).call(this),
	            d = [["graph", "highcharts-graph", b.lineColor || this.color, b.dashStyle]];n(this.zones, function (c, e) {
	          d.push(["zone-graph-" + e, "highcharts-graph highcharts-zone-graph-" + e + " " + (c.className || ""), c.color || a.color, c.dashStyle || b.dashStyle]);
	        });
	        n(d, function (c, d) {
	          var f = c[0],
	              k = a[f];k ? (k.endX = e.xMap, k.animate({ d: e })) : e.length && (a[f] = a.chart.renderer.path(e).addClass(c[1]).attr({ zIndex: 1 }).add(a.group), k = { stroke: c[2], "stroke-width": b.lineWidth, fill: a.fillGraph && a.color || "none" }, c[3] ? k.dashstyle = c[3] : "square" !== b.linecap && (k["stroke-linecap"] = k["stroke-linejoin"] = "round"), k = a[f].attr(k).shadow(2 > d && b.shadow));k && (k.startX = e.xMap, k.isArea = e.isArea);
	        });
	      }, applyZones: function applyZones() {
	        var a = this,
	            b = this.chart,
	            e = b.renderer,
	            d = this.zones,
	            f,
	            k,
	            g = this.clips || [],
	            h,
	            m = this.graph,
	            u = this.area,
	            p = Math.max(b.chartWidth, b.chartHeight),
	            y = this[(this.zoneAxis || "y") + "Axis"],
	            z,
	            l,
	            A = b.inverted,
	            G,
	            q,
	            t,
	            v,
	            x = !1;d.length && (m || u) && y && void 0 !== y.min && (l = y.reversed, G = y.horiz, m && m.hide(), u && u.hide(), z = y.getExtremes(), n(d, function (c, d) {
	          f = l ? G ? b.plotWidth : 0 : G ? 0 : y.toPixels(z.min);f = Math.min(Math.max(r(k, f), 0), p);k = Math.min(Math.max(Math.round(y.toPixels(r(c.value, z.max), !0)), 0), p);x && (f = k = y.toPixels(z.max));q = Math.abs(f - k);t = Math.min(f, k);v = Math.max(f, k);y.isXAxis ? (h = { x: A ? v : t, y: 0, width: q,
	            height: p }, G || (h.x = b.plotHeight - h.x)) : (h = { x: 0, y: A ? v : t, width: p, height: q }, G && (h.y = b.plotWidth - h.y));A && e.isVML && (h = y.isXAxis ? { x: 0, y: l ? t : v, height: h.width, width: b.chartWidth } : { x: h.y - b.plotLeft - b.spacingBox.x, y: 0, width: h.height, height: b.chartHeight });g[d] ? g[d].animate(h) : (g[d] = e.clipRect(h), m && a["zone-graph-" + d].clip(g[d]), u && a["zone-area-" + d].clip(g[d]));x = c.value > z.max;
	        }), this.clips = g);
	      }, invertGroups: function invertGroups(a) {
	        function b() {
	          var b = { width: c.yAxis.len, height: c.xAxis.len };n(["group", "markerGroup"], function (e) {
	            c[e] && c[e].attr(b).invert(a);
	          });
	        }var c = this,
	            e;c.xAxis && (e = B(c.chart, "resize", b), B(c, "destroy", e), b(a), c.invertGroups = b);
	      }, plotGroup: function plotGroup(a, b, e, d, f) {
	        var c = this[a],
	            g = !c;g && (this[a] = c = this.chart.renderer.g(b).attr({ zIndex: d || .1 }).add(f), c.addClass("highcharts-series-" + this.index + " highcharts-" + this.type + "-series highcharts-color-" + this.colorIndex + " " + (this.options.className || "")));c.attr({ visibility: e })[g ? "attr" : "animate"](this.getPlotBox());return c;
	      }, getPlotBox: function getPlotBox() {
	        var a = this.chart,
	            b = this.xAxis,
	            e = this.yAxis;a.inverted && (b = e, e = this.xAxis);return { translateX: b ? b.left : a.plotLeft, translateY: e ? e.top : a.plotTop, scaleX: 1, scaleY: 1 };
	      }, render: function render() {
	        var a = this,
	            b = a.chart,
	            d,
	            f = a.options,
	            g = !!a.animate && b.renderer.isSVG && C(f.animation).duration,
	            k = a.visible ? "inherit" : "hidden",
	            h = f.zIndex,
	            m = a.hasRendered,
	            u = b.seriesGroup,
	            r = b.inverted;d = a.plotGroup("group", "series", k, h, u);a.markerGroup = a.plotGroup("markerGroup", "markers", k, h, u);g && a.animate(!0);d.inverted = a.isCartesian ? r : !1;a.drawGraph && (a.drawGraph(), a.applyZones());
	        a.drawDataLabels && a.drawDataLabels();a.visible && a.drawPoints();a.drawTracker && !1 !== a.options.enableMouseTracking && a.drawTracker();a.invertGroups(r);!1 === f.clip || a.sharedClipKey || m || d.clip(b.clipRect);g && a.animate();m || (a.animationTimeout = e(function () {
	          a.afterAnimate();
	        }, g));a.isDirty = a.isDirtyData = !1;a.hasRendered = !0;
	      }, redraw: function redraw() {
	        var a = this.chart,
	            b = this.isDirty || this.isDirtyData,
	            e = this.group,
	            d = this.xAxis,
	            f = this.yAxis;e && (a.inverted && e.attr({ width: a.plotWidth, height: a.plotHeight }), e.animate({ translateX: r(d && d.left, a.plotLeft), translateY: r(f && f.top, a.plotTop) }));this.translate();this.render();b && delete this.kdTree;
	      }, kdDimensions: 1, kdAxisArray: ["clientX", "plotY"], searchPoint: function searchPoint(a, b) {
	        var c = this.xAxis,
	            e = this.yAxis,
	            d = this.chart.inverted;return this.searchKDTree({ clientX: d ? c.len - a.chartY + c.pos : a.chartX - c.pos, plotY: d ? e.len - a.chartX + e.pos : a.chartY - e.pos }, b);
	      }, buildKDTree: function buildKDTree() {
	        function a(c, e, d) {
	          var f, k;if (k = c && c.length) return f = b.kdAxisArray[e % d], c.sort(function (a, b) {
	            return a[f] - b[f];
	          }), k = Math.floor(k / 2), { point: c[k], left: a(c.slice(0, k), e + 1, d), right: a(c.slice(k + 1), e + 1, d) };
	        }var b = this,
	            d = b.kdDimensions;delete b.kdTree;e(function () {
	          b.kdTree = a(b.getValidPoints(null, !b.directTouch), d, d);
	        }, b.options.kdNow ? 0 : 1);
	      }, searchKDTree: function searchKDTree(a, b) {
	        function c(a, b, k, h) {
	          var m = b.point,
	              u = e.kdAxisArray[k % h],
	              w,
	              r,
	              p = m;r = t(a[d]) && t(m[d]) ? Math.pow(a[d] - m[d], 2) : null;w = t(a[f]) && t(m[f]) ? Math.pow(a[f] - m[f], 2) : null;w = (r || 0) + (w || 0);m.dist = t(w) ? Math.sqrt(w) : Number.MAX_VALUE;m.distX = t(r) ? Math.sqrt(r) : Number.MAX_VALUE;u = a[u] - m[u];w = 0 > u ? "left" : "right";r = 0 > u ? "right" : "left";b[w] && (w = c(a, b[w], k + 1, h), p = w[g] < p[g] ? w : m);b[r] && Math.sqrt(u * u) < p[g] && (a = c(a, b[r], k + 1, h), p = a[g] < p[g] ? a : p);return p;
	        }var e = this,
	            d = this.kdAxisArray[0],
	            f = this.kdAxisArray[1],
	            g = b ? "distX" : "dist";this.kdTree || this.buildKDTree();if (this.kdTree) return c(a, this.kdTree, this.kdDimensions, this.kdDimensions);
	      } });
	  })(K);(function (a) {
	    function B(a, h, b, g, l) {
	      var u = a.chart.inverted;this.axis = a;this.isNegative = b;this.options = h;this.x = g;this.total = null;this.points = {};this.stack = l;this.rightCliff = this.leftCliff = 0;this.alignOptions = { align: h.align || (u ? b ? "left" : "right" : "center"), verticalAlign: h.verticalAlign || (u ? "middle" : b ? "bottom" : "top"), y: t(h.y, u ? 4 : b ? 14 : -6), x: t(h.x, u ? b ? -6 : 6 : 0) };this.textAlign = h.textAlign || (u ? b ? "right" : "left" : "center");
	    }var C = a.Axis,
	        E = a.Chart,
	        F = a.correctFloat,
	        v = a.defined,
	        l = a.destroyObjectProperties,
	        q = a.each,
	        x = a.format,
	        t = a.pick;a = a.Series;B.prototype = { destroy: function destroy() {
	        l(this, this.axis);
	      }, render: function render(a) {
	        var h = this.options,
	            b = h.format,
	            b = b ? x(b, this) : h.formatter.call(this);this.label ? this.label.attr({ text: b, visibility: "hidden" }) : this.label = this.axis.chart.renderer.text(b, null, null, h.useHTML).css(h.style).attr({ align: this.textAlign, rotation: h.rotation, visibility: "hidden" }).add(a);
	      }, setOffset: function setOffset(a, h) {
	        var b = this.axis,
	            g = b.chart,
	            n = g.inverted,
	            u = b.reversed,
	            u = this.isNegative && !u || !this.isNegative && u,
	            p = b.translate(b.usePercentage ? 100 : this.total, 0, 0, 0, 1),
	            b = b.translate(0),
	            b = Math.abs(p - b);a = g.xAxis[0].translate(this.x) + a;var m = g.plotHeight,
	            n = { x: n ? u ? p : p - b : a, y: n ? m - a - h : u ? m - p - b : m - p, width: n ? b : h, height: n ? h : b };if (h = this.label) h.align(this.alignOptions, null, n), n = h.alignAttr, h[!1 === this.options.crop || g.isInsidePlot(n.x, n.y) ? "show" : "hide"](!0);
	      } };E.prototype.getStacks = function () {
	      var a = this;q(a.yAxis, function (a) {
	        a.stacks && a.hasVisibleSeries && (a.oldStacks = a.stacks);
	      });q(a.series, function (h) {
	        !h.options.stacking || !0 !== h.visible && !1 !== a.options.chart.ignoreHiddenSeries || (h.stackKey = h.type + t(h.options.stack, ""));
	      });
	    };C.prototype.buildStacks = function () {
	      var a = this.series,
	          h,
	          b = t(this.options.reversedStacks, !0),
	          g = a.length,
	          l;if (!this.isXAxis) {
	        this.usePercentage = !1;for (l = g; l--;) {
	          a[b ? l : g - l - 1].setStackedPoints();
	        }for (l = g; l--;) {
	          h = a[b ? l : g - l - 1], h.setStackCliffs && h.setStackCliffs();
	        }if (this.usePercentage) for (l = 0; l < g; l++) {
	          a[l].setPercentStacks();
	        }
	      }
	    };C.prototype.renderStackTotals = function () {
	      var a = this.chart,
	          h = a.renderer,
	          b = this.stacks,
	          g,
	          l,
	          u = this.stackTotalGroup;u || (this.stackTotalGroup = u = h.g("stack-labels").attr({ visibility: "visible", zIndex: 6 }).add());u.translate(a.plotLeft, a.plotTop);for (g in b) {
	        for (l in a = b[g], a) {
	          a[l].render(u);
	        }
	      }
	    };
	    C.prototype.resetStacks = function () {
	      var a = this.stacks,
	          h,
	          b;if (!this.isXAxis) for (h in a) {
	        for (b in a[h]) {
	          a[h][b].touched < this.stacksTouched ? (a[h][b].destroy(), delete a[h][b]) : (a[h][b].total = null, a[h][b].cum = null);
	        }
	      }
	    };C.prototype.cleanStacks = function () {
	      var a, h, b;if (!this.isXAxis) for (h in this.oldStacks && (a = this.stacks = this.oldStacks), a) {
	        for (b in a[h]) {
	          a[h][b].cum = a[h][b].total;
	        }
	      }
	    };a.prototype.setStackedPoints = function () {
	      if (this.options.stacking && (!0 === this.visible || !1 === this.chart.options.chart.ignoreHiddenSeries)) {
	        var a = this.processedXData,
	            h = this.processedYData,
	            b = [],
	            g = h.length,
	            l = this.options,
	            u = l.threshold,
	            p = l.startFromThreshold ? u : 0,
	            m = l.stack,
	            l = l.stacking,
	            d = this.stackKey,
	            r = "-" + d,
	            G = this.negStacks,
	            f = this.yAxis,
	            z = f.stacks,
	            e = f.oldStacks,
	            y,
	            c,
	            w,
	            D,
	            q,
	            x,
	            k;f.stacksTouched += 1;for (q = 0; q < g; q++) {
	          x = a[q], k = h[q], y = this.getStackIndicator(y, x, this.index), D = y.key, w = (c = G && k < (p ? 0 : u)) ? r : d, z[w] || (z[w] = {}), z[w][x] || (e[w] && e[w][x] ? (z[w][x] = e[w][x], z[w][x].total = null) : z[w][x] = new B(f, f.options.stackLabels, c, x, m)), w = z[w][x], null !== k && (w.points[D] = w.points[this.index] = [t(w.cum, p)], v(w.cum) || (w.base = D), w.touched = f.stacksTouched, 0 < y.index && !1 === this.singleStacks && (w.points[D][0] = w.points[this.index + "," + x + ",0"][0])), "percent" === l ? (c = c ? d : r, G && z[c] && z[c][x] ? (c = z[c][x], w.total = c.total = Math.max(c.total, w.total) + Math.abs(k) || 0) : w.total = F(w.total + (Math.abs(k) || 0))) : w.total = F(w.total + (k || 0)), w.cum = t(w.cum, p) + (k || 0), null !== k && (w.points[D].push(w.cum), b[q] = w.cum);
	        }"percent" === l && (f.usePercentage = !0);this.stackedYData = b;f.oldStacks = {};
	      }
	    };a.prototype.setPercentStacks = function () {
	      var a = this,
	          h = a.stackKey,
	          b = a.yAxis.stacks,
	          g = a.processedXData,
	          l;q([h, "-" + h], function (h) {
	        for (var u = g.length, m, d; u--;) {
	          if (m = g[u], l = a.getStackIndicator(l, m, a.index, h), m = (d = b[h] && b[h][m]) && d.points[l.key]) d = d.total ? 100 / d.total : 0, m[0] = F(m[0] * d), m[1] = F(m[1] * d), a.stackedYData[u] = m[1];
	        }
	      });
	    };a.prototype.getStackIndicator = function (a, h, b, g) {
	      !v(a) || a.x !== h || g && a.key !== g ? a = { x: h, index: 0, key: g } : a.index++;a.key = [b, h, a.index].join();return a;
	    };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.animate,
	        E = a.Axis,
	        F = a.createElement,
	        v = a.css,
	        l = a.defined,
	        q = a.each,
	        x = a.erase,
	        t = a.extend,
	        n = a.fireEvent,
	        h = a.inArray,
	        b = a.isNumber,
	        g = a.isObject,
	        A = a.merge,
	        u = a.pick,
	        p = a.Point,
	        m = a.Series,
	        d = a.seriesTypes,
	        r = a.setAnimation,
	        G = a.splat;t(a.Chart.prototype, { addSeries: function addSeries(a, b, e) {
	        var d,
	            c = this;a && (b = u(b, !0), n(c, "addSeries", { options: a }, function () {
	          d = c.initSeries(a);c.isDirtyLegend = !0;c.linkSeries();b && c.redraw(e);
	        }));return d;
	      }, addAxis: function addAxis(a, b, e, d) {
	        var c = b ? "xAxis" : "yAxis",
	            f = this.options;a = A(a, { index: this[c].length, isX: b });new E(this, a);f[c] = G(f[c] || {});f[c].push(a);u(e, !0) && this.redraw(d);
	      }, showLoading: function showLoading(a) {
	        var b = this,
	            e = b.options,
	            d = b.loadingDiv,
	            c = e.loading,
	            f = function f() {
	          d && v(d, { left: b.plotLeft + "px", top: b.plotTop + "px", width: b.plotWidth + "px", height: b.plotHeight + "px" });
	        };d || (b.loadingDiv = d = F("div", { className: "highcharts-loading highcharts-loading-hidden" }, null, b.container), b.loadingSpan = F("span", { className: "highcharts-loading-inner" }, null, d), B(b, "redraw", f));d.className = "highcharts-loading";b.loadingSpan.innerHTML = a || e.lang.loading;v(d, t(c.style, { zIndex: 10 }));v(b.loadingSpan, c.labelStyle);b.loadingShown || (v(d, { opacity: 0, display: "" }), C(d, { opacity: c.style.opacity || .5 }, { duration: c.showDuration || 0 }));b.loadingShown = !0;f();
	      }, hideLoading: function hideLoading() {
	        var a = this.options,
	            b = this.loadingDiv;b && (b.className = "highcharts-loading highcharts-loading-hidden", C(b, { opacity: 0 }, { duration: a.loading.hideDuration || 100, complete: function complete() {
	            v(b, { display: "none" });
	          } }));this.loadingShown = !1;
	      }, propsRequireDirtyBox: "backgroundColor borderColor borderWidth margin marginTop marginRight marginBottom marginLeft spacing spacingTop spacingRight spacingBottom spacingLeft borderRadius plotBackgroundColor plotBackgroundImage plotBorderColor plotBorderWidth plotShadow shadow".split(" "),
	      propsRequireUpdateSeries: "chart.inverted chart.polar chart.ignoreHiddenSeries chart.type colors plotOptions".split(" "), update: function update(a, d) {
	        var e,
	            f = { credits: "addCredits", title: "setTitle", subtitle: "setSubtitle" },
	            c = a.chart,
	            g,
	            m;if (c) {
	          A(!0, this.options.chart, c);"className" in c && this.setClassName(c.className);if ("inverted" in c || "polar" in c) this.propFromSeries(), g = !0;for (e in c) {
	            c.hasOwnProperty(e) && (-1 !== h("chart." + e, this.propsRequireUpdateSeries) && (m = !0), -1 !== h(e, this.propsRequireDirtyBox) && (this.isDirtyBox = !0));
	          }"style" in c && this.renderer.setStyle(c.style);
	        }for (e in a) {
	          if (this[e] && "function" === typeof this[e].update) this[e].update(a[e], !1);else if ("function" === typeof this[f[e]]) this[f[e]](a[e]);"chart" !== e && -1 !== h(e, this.propsRequireUpdateSeries) && (m = !0);
	        }a.colors && (this.options.colors = a.colors);a.plotOptions && A(!0, this.options.plotOptions, a.plotOptions);q(["xAxis", "yAxis", "series"], function (b) {
	          a[b] && q(G(a[b]), function (a) {
	            var c = l(a.id) && this.get(a.id) || this[b][0];c && c.coll === b && c.update(a, !1);
	          }, this);
	        }, this);
	        g && q(this.axes, function (a) {
	          a.update({}, !1);
	        });m && q(this.series, function (a) {
	          a.update({}, !1);
	        });a.loading && A(!0, this.options.loading, a.loading);e = c && c.width;c = c && c.height;b(e) && e !== this.chartWidth || b(c) && c !== this.chartHeight ? this.setSize(e, c) : u(d, !0) && this.redraw();
	      }, setSubtitle: function setSubtitle(a) {
	        this.setTitle(void 0, a);
	      } });t(p.prototype, { update: function update(a, b, e, d) {
	        function c() {
	          f.applyOptions(a);null === f.y && m && (f.graphic = m.destroy());g(a, !0) && (m && m.element && a && a.marker && a.marker.symbol && (f.graphic = m.destroy()), a && a.dataLabels && f.dataLabel && (f.dataLabel = f.dataLabel.destroy()));r = f.index;h.updateParallelArrays(f, r);p.data[r] = g(p.data[r], !0) ? f.options : a;h.isDirty = h.isDirtyData = !0;!h.fixedBox && h.hasCartesianSeries && (k.isDirtyBox = !0);"point" === p.legendType && (k.isDirtyLegend = !0);b && k.redraw(e);
	        }var f = this,
	            h = f.series,
	            m = f.graphic,
	            r,
	            k = h.chart,
	            p = h.options;b = u(b, !0);!1 === d ? c() : f.firePointEvent("update", { options: a }, c);
	      }, remove: function remove(a, b) {
	        this.series.removePoint(h(this, this.series.data), a, b);
	      } });t(m.prototype, { addPoint: function addPoint(a, b, e, d) {
	        var c = this.options,
	            f = this.data,
	            g = this.chart,
	            h = this.xAxis && this.xAxis.names,
	            m = c.data,
	            k,
	            r,
	            p = this.xData,
	            y,
	            l;b = u(b, !0);k = { series: this };this.pointClass.prototype.applyOptions.apply(k, [a]);l = k.x;y = p.length;if (this.requireSorting && l < p[y - 1]) for (r = !0; y && p[y - 1] > l;) {
	          y--;
	        }this.updateParallelArrays(k, "splice", y, 0, 0);this.updateParallelArrays(k, y);h && k.name && (h[l] = k.name);m.splice(y, 0, a);r && (this.data.splice(y, 0, null), this.processData());"point" === c.legendType && this.generatePoints();e && (f[0] && f[0].remove ? f[0].remove(!1) : (f.shift(), this.updateParallelArrays(k, "shift"), m.shift()));this.isDirtyData = this.isDirty = !0;b && g.redraw(d);
	      }, removePoint: function removePoint(a, b, e) {
	        var d = this,
	            c = d.data,
	            f = c[a],
	            g = d.points,
	            h = d.chart,
	            m = function m() {
	          g && g.length === c.length && g.splice(a, 1);c.splice(a, 1);d.options.data.splice(a, 1);d.updateParallelArrays(f || { series: d }, "splice", a, 1);f && f.destroy();d.isDirty = !0;d.isDirtyData = !0;b && h.redraw();
	        };r(e, h);b = u(b, !0);f ? f.firePointEvent("remove", null, m) : m();
	      }, remove: function remove(a, b, e) {
	        function d() {
	          c.destroy();
	          f.isDirtyLegend = f.isDirtyBox = !0;f.linkSeries();u(a, !0) && f.redraw(b);
	        }var c = this,
	            f = c.chart;!1 !== e ? n(c, "remove", null, d) : d();
	      }, update: function update(a, b) {
	        var e = this,
	            f = this.chart,
	            c = this.userOptions,
	            g = this.type,
	            h = a.type || c.type || f.options.chart.type,
	            m = d[g].prototype,
	            r = ["group", "markerGroup", "dataLabelsGroup"],
	            k;if (h && h !== g || void 0 !== a.zIndex) r.length = 0;q(r, function (a) {
	          r[a] = e[a];delete e[a];
	        });a = A(c, { animation: !1, index: this.index, pointStart: this.xData[0] }, { data: this.options.data }, a);this.remove(!1, null, !1);for (k in m) {
	          this[k] = void 0;
	        }t(this, d[h || g].prototype);q(r, function (a) {
	          e[a] = r[a];
	        });this.init(f, a);f.linkSeries();u(b, !0) && f.redraw(!1);
	      } });t(E.prototype, { update: function update(a, b) {
	        var d = this.chart;a = d.options[this.coll][this.options.index] = A(this.userOptions, a);this.destroy(!0);this.init(d, t(a, { events: void 0 }));d.isDirtyBox = !0;u(b, !0) && d.redraw();
	      }, remove: function remove(a) {
	        for (var b = this.chart, d = this.coll, f = this.series, c = f.length; c--;) {
	          f[c] && f[c].remove(!1);
	        }x(b.axes, this);x(b[d], this);b.options[d].splice(this.options.index, 1);q(b[d], function (a, b) {
	          a.options.index = b;
	        });this.destroy();b.isDirtyBox = !0;u(a, !0) && b.redraw();
	      }, setTitle: function setTitle(a, b) {
	        this.update({ title: a }, b);
	      }, setCategories: function setCategories(a, b) {
	        this.update({ categories: a }, b);
	      } });
	  })(K);(function (a) {
	    var B = a.color,
	        C = a.each,
	        E = a.map,
	        F = a.pick,
	        v = a.Series,
	        l = a.seriesType;l("area", "line", { softThreshold: !1, threshold: 0 }, { singleStacks: !1, getStackPoints: function getStackPoints() {
	        var a = [],
	            l = [],
	            t = this.xAxis,
	            n = this.yAxis,
	            h = n.stacks[this.stackKey],
	            b = {},
	            g = this.points,
	            A = this.index,
	            u = n.series,
	            p = u.length,
	            m,
	            d = F(n.options.reversedStacks, !0) ? 1 : -1,
	            r,
	            G;if (this.options.stacking) {
	          for (r = 0; r < g.length; r++) {
	            b[g[r].x] = g[r];
	          }for (G in h) {
	            null !== h[G].total && l.push(G);
	          }l.sort(function (a, b) {
	            return a - b;
	          });m = E(u, function () {
	            return this.visible;
	          });C(l, function (f, g) {
	            var e = 0,
	                u,
	                c;if (b[f] && !b[f].isNull) a.push(b[f]), C([-1, 1], function (a) {
	              var e = 1 === a ? "rightNull" : "leftNull",
	                  w = 0,
	                  n = h[l[g + a]];if (n) for (r = A; 0 <= r && r < p;) {
	                u = n.points[r], u || (r === A ? b[f][e] = !0 : m[r] && (c = h[f].points[r]) && (w -= c[1] - c[0])), r += d;
	              }b[f][1 === a ? "rightCliff" : "leftCliff"] = w;
	            });else {
	              for (r = A; 0 <= r && r < p;) {
	                if (u = h[f].points[r]) {
	                  e = u[1];break;
	                }r += d;
	              }e = n.toPixels(e, !0);a.push({ isNull: !0, plotX: t.toPixels(f, !0), plotY: e, yBottom: e });
	            }
	          });
	        }return a;
	      }, getGraphPath: function getGraphPath(a) {
	        var l = v.prototype.getGraphPath,
	            q = this.options,
	            n = q.stacking,
	            h = this.yAxis,
	            b,
	            g,
	            A = [],
	            u = [],
	            p = this.index,
	            m,
	            d = h.stacks[this.stackKey],
	            r = q.threshold,
	            G = h.getThreshold(q.threshold),
	            f,
	            q = q.connectNulls || "percent" === n,
	            z = function z(b, f, c) {
	          var e = a[b];b = n && d[e.x].points[p];var g = e[c + "Null"] || 0;c = e[c + "Cliff"] || 0;var l,
	              y,
	              e = !0;c || g ? (l = (g ? b[0] : b[1]) + c, y = b[0] + c, e = !!g) : !n && a[f] && a[f].isNull && (l = y = r);void 0 !== l && (u.push({ plotX: m, plotY: null === l ? G : h.getThreshold(l), isNull: e }), A.push({ plotX: m, plotY: null === y ? G : h.getThreshold(y), doCurve: !1 }));
	        };a = a || this.points;n && (a = this.getStackPoints());for (b = 0; b < a.length; b++) {
	          if (g = a[b].isNull, m = F(a[b].rectPlotX, a[b].plotX), f = F(a[b].yBottom, G), !g || q) q || z(b, b - 1, "left"), g && !n && q || (u.push(a[b]), A.push({ x: b, plotX: m, plotY: f })), q || z(b, b + 1, "right");
	        }b = l.call(this, u, !0, !0);A.reversed = !0;g = l.call(this, A, !0, !0);g.length && (g[0] = "L");g = b.concat(g);l = l.call(this, u, !1, q);g.xMap = b.xMap;this.areaPath = g;return l;
	      }, drawGraph: function drawGraph() {
	        this.areaPath = [];v.prototype.drawGraph.apply(this);var a = this,
	            l = this.areaPath,
	            t = this.options,
	            n = [["area", "highcharts-area", this.color, t.fillColor]];C(this.zones, function (h, b) {
	          n.push(["zone-area-" + b, "highcharts-area highcharts-zone-area-" + b + " " + h.className, h.color || a.color, h.fillColor || t.fillColor]);
	        });C(n, function (h) {
	          var b = h[0],
	              g = a[b];g ? (g.endX = l.xMap, g.animate({ d: l })) : (g = a[b] = a.chart.renderer.path(l).addClass(h[1]).attr({ fill: F(h[3], B(h[2]).setOpacity(F(t.fillOpacity, .75)).get()), zIndex: 0 }).add(a.group), g.isArea = !0);g.startX = l.xMap;g.shiftUnit = t.step ? 2 : 1;
	        });
	      }, drawLegendSymbol: a.LegendSymbolMixin.drawRectangle });
	  })(K);(function (a) {
	    var B = a.pick;a = a.seriesType;a("spline", "line", {}, { getPointSpline: function getPointSpline(a, E, F) {
	        var v = E.plotX,
	            l = E.plotY,
	            q = a[F - 1];F = a[F + 1];var x, t, n, h;if (q && !q.isNull && !1 !== q.doCurve && F && !F.isNull && !1 !== F.doCurve) {
	          a = q.plotY;n = F.plotX;F = F.plotY;var b = 0;x = (1.5 * v + q.plotX) / 2.5;t = (1.5 * l + a) / 2.5;n = (1.5 * v + n) / 2.5;h = (1.5 * l + F) / 2.5;
	          n !== x && (b = (h - t) * (n - v) / (n - x) + l - h);t += b;h += b;t > a && t > l ? (t = Math.max(a, l), h = 2 * l - t) : t < a && t < l && (t = Math.min(a, l), h = 2 * l - t);h > F && h > l ? (h = Math.max(F, l), t = 2 * l - h) : h < F && h < l && (h = Math.min(F, l), t = 2 * l - h);E.rightContX = n;E.rightContY = h;
	        }E = ["C", B(q.rightContX, q.plotX), B(q.rightContY, q.plotY), B(x, v), B(t, l), v, l];q.rightContX = q.rightContY = null;return E;
	      } });
	  })(K);(function (a) {
	    var B = a.seriesTypes.area.prototype,
	        C = a.seriesType;C("areaspline", "spline", a.defaultPlotOptions.area, { getStackPoints: B.getStackPoints, getGraphPath: B.getGraphPath,
	      setStackCliffs: B.setStackCliffs, drawGraph: B.drawGraph, drawLegendSymbol: a.LegendSymbolMixin.drawRectangle });
	  })(K);(function (a) {
	    var B = a.animObject,
	        C = a.color,
	        E = a.each,
	        F = a.extend,
	        v = a.isNumber,
	        l = a.merge,
	        q = a.pick,
	        x = a.Series,
	        t = a.seriesType,
	        n = a.svg;t("column", "line", { borderRadius: 0, groupPadding: .2, marker: null, pointPadding: .1, minPointLength: 0, cropThreshold: 50, pointRange: null, states: { hover: { halo: !1, brightness: .1, shadow: !1 }, select: { color: "#cccccc", borderColor: "#000000", shadow: !1 } }, dataLabels: { align: null, verticalAlign: null,
	        y: null }, softThreshold: !1, startFromThreshold: !0, stickyTracking: !1, tooltip: { distance: 6 }, threshold: 0, borderColor: "#ffffff" }, { cropShoulder: 0, directTouch: !0, trackerGroups: ["group", "dataLabelsGroup"], negStacks: !0, init: function init() {
	        x.prototype.init.apply(this, arguments);var a = this,
	            b = a.chart;b.hasRendered && E(b.series, function (b) {
	          b.type === a.type && (b.isDirty = !0);
	        });
	      }, getColumnMetrics: function getColumnMetrics() {
	        var a = this,
	            b = a.options,
	            g = a.xAxis,
	            l = a.yAxis,
	            u = g.reversed,
	            p,
	            m = {},
	            d = 0;!1 === b.grouping ? d = 1 : E(a.chart.series, function (b) {
	          var e = b.options,
	              f = b.yAxis,
	              c;b.type === a.type && b.visible && l.len === f.len && l.pos === f.pos && (e.stacking ? (p = b.stackKey, void 0 === m[p] && (m[p] = d++), c = m[p]) : !1 !== e.grouping && (c = d++), b.columnIndex = c);
	        });var r = Math.min(Math.abs(g.transA) * (g.ordinalSlope || b.pointRange || g.closestPointRange || g.tickInterval || 1), g.len),
	            n = r * b.groupPadding,
	            f = (r - 2 * n) / d,
	            b = Math.min(b.maxPointWidth || g.len, q(b.pointWidth, f * (1 - 2 * b.pointPadding)));a.columnMetrics = { width: b, offset: (f - b) / 2 + (n + ((a.columnIndex || 0) + (u ? 1 : 0)) * f - r / 2) * (u ? -1 : 1) };return a.columnMetrics;
	      },
	      crispCol: function crispCol(a, b, g, l) {
	        var h = this.chart,
	            p = this.borderWidth,
	            m = -(p % 2 ? .5 : 0),
	            p = p % 2 ? .5 : 1;h.inverted && h.renderer.isVML && (p += 1);g = Math.round(a + g) + m;a = Math.round(a) + m;l = Math.round(b + l) + p;m = .5 >= Math.abs(b) && .5 < l;b = Math.round(b) + p;l -= b;m && l && (--b, l += 1);return { x: a, y: b, width: g - a, height: l };
	      }, translate: function translate() {
	        var a = this,
	            b = a.chart,
	            g = a.options,
	            l = a.dense = 2 > a.closestPointRange * a.xAxis.transA,
	            l = a.borderWidth = q(g.borderWidth, l ? 0 : 1),
	            u = a.yAxis,
	            p = a.translatedThreshold = u.getThreshold(g.threshold),
	            m = q(g.minPointLength, 5),
	            d = a.getColumnMetrics(),
	            r = d.width,
	            n = a.barW = Math.max(r, 1 + 2 * l),
	            f = a.pointXOffset = d.offset;b.inverted && (p -= .5);g.pointPadding && (n = Math.ceil(n));x.prototype.translate.apply(a);E(a.points, function (d) {
	          var e = q(d.yBottom, p),
	              g = 999 + Math.abs(e),
	              g = Math.min(Math.max(-g, d.plotY), u.len + g),
	              c = d.plotX + f,
	              h = n,
	              l = Math.min(g, e),
	              G,
	              z = Math.max(g, e) - l;Math.abs(z) < m && m && (z = m, G = !u.reversed && !d.negative || u.reversed && d.negative, l = Math.abs(l - p) > m ? e - m : p - (G ? m : 0));d.barX = c;d.pointWidth = r;d.tooltipPos = b.inverted ? [u.len + u.pos - b.plotLeft - g, a.xAxis.len - c - h / 2, z] : [c + h / 2, g + u.pos - b.plotTop, z];d.shapeType = "rect";d.shapeArgs = a.crispCol.apply(a, d.isNull ? [d.plotX, u.len / 2, 0, 0] : [c, l, h, z]);
	        });
	      }, getSymbol: a.noop, drawLegendSymbol: a.LegendSymbolMixin.drawRectangle, drawGraph: function drawGraph() {
	        this.group[this.dense ? "addClass" : "removeClass"]("highcharts-dense-data");
	      }, pointAttribs: function pointAttribs(a, b) {
	        var g = this.options,
	            h,
	            u = this.pointAttrToOptions || {};h = u.stroke || "borderColor";var p = u["stroke-width"] || "borderWidth",
	            m = a && a.color || this.color,
	            d = a[h] || g[h] || this.color || m,
	            r = a[p] || g[p] || this[p] || 0,
	            u = g.dashStyle;a && this.zones.length && (m = (m = a.getZone()) && m.color || a.options.color || this.color);b && (a = g.states[b], b = a.brightness, m = a.color || void 0 !== b && C(m).brighten(a.brightness).get() || m, d = a[h] || d, r = a[p] || r, u = a.dashStyle || u);h = { fill: m, stroke: d, "stroke-width": r };g.borderRadius && (h.r = g.borderRadius);u && (h.dashstyle = u);return h;
	      }, drawPoints: function drawPoints() {
	        var a = this,
	            b = this.chart,
	            g = a.options,
	            n = b.renderer,
	            u = g.animationLimit || 250,
	            p;E(a.points, function (m) {
	          var d = m.graphic;if (v(m.plotY) && null !== m.y) {
	            p = m.shapeArgs;if (d) d[b.pointCount < u ? "animate" : "attr"](l(p));else m.graphic = d = n[m.shapeType](p).attr({ "class": m.getClassName() }).add(m.group || a.group);d.attr(a.pointAttribs(m, m.selected && "select")).shadow(g.shadow, null, g.stacking && !g.borderRadius);
	          } else d && (m.graphic = d.destroy());
	        });
	      }, animate: function animate(a) {
	        var b = this,
	            g = this.yAxis,
	            h = b.options,
	            u = this.chart.inverted,
	            p = {};n && (a ? (p.scaleY = .001, a = Math.min(g.pos + g.len, Math.max(g.pos, g.toPixels(h.threshold))), u ? p.translateX = a - g.len : p.translateY = a, b.group.attr(p)) : (p[u ? "translateX" : "translateY"] = g.pos, b.group.animate(p, F(B(b.options.animation), { step: function step(a, d) {
	            b.group.attr({ scaleY: Math.max(.001, d.pos) });
	          } })), b.animate = null));
	      }, remove: function remove() {
	        var a = this,
	            b = a.chart;b.hasRendered && E(b.series, function (b) {
	          b.type === a.type && (b.isDirty = !0);
	        });x.prototype.remove.apply(a, arguments);
	      } });
	  })(K);(function (a) {
	    a = a.seriesType;a("bar", "column", null, { inverted: !0 });
	  })(K);(function (a) {
	    var B = a.Series;a = a.seriesType;a("scatter", "line", { lineWidth: 0, marker: { enabled: !0 }, tooltip: { headerFormat: "<span style=\"color:{point.color}\">\u25CF</span> <span style=\"font-size: 0.85em\"> {series.name}</span><br/>",
	        pointFormat: "x: \x3cb\x3e{point.x}\x3c/b\x3e\x3cbr/\x3ey: \x3cb\x3e{point.y}\x3c/b\x3e\x3cbr/\x3e" } }, { sorted: !1, requireSorting: !1, noSharedTooltip: !0, trackerGroups: ["group", "markerGroup", "dataLabelsGroup"], takeOrdinalPosition: !1, kdDimensions: 2, drawGraph: function drawGraph() {
	        this.options.lineWidth && B.prototype.drawGraph.call(this);
	      } });
	  })(K);(function (a) {
	    var B = a.pick,
	        C = a.relativeLength;a.CenteredSeriesMixin = { getCenter: function getCenter() {
	        var a = this.options,
	            F = this.chart,
	            v = 2 * (a.slicedOffset || 0),
	            l = F.plotWidth - 2 * v,
	            F = F.plotHeight - 2 * v,
	            q = a.center,
	            q = [B(q[0], "50%"), B(q[1], "50%"), a.size || "100%", a.innerSize || 0],
	            x = Math.min(l, F),
	            t,
	            n;for (t = 0; 4 > t; ++t) {
	          n = q[t], a = 2 > t || 2 === t && /%$/.test(n), q[t] = C(n, [l, F, x, q[2]][t]) + (a ? v : 0);
	        }q[3] > q[2] && (q[3] = q[2]);return q;
	      } };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.defined,
	        E = a.each,
	        F = a.extend,
	        v = a.inArray,
	        l = a.noop,
	        q = a.pick,
	        x = a.Point,
	        t = a.Series,
	        n = a.seriesType,
	        h = a.setAnimation;n("pie", "line", { center: [null, null], clip: !1, colorByPoint: !0, dataLabels: { distance: 30, enabled: !0, formatter: function formatter() {
	          return null === this.y ? void 0 : this.point.name;
	        }, x: 0 }, ignoreHiddenPoint: !0, legendType: "point", marker: null, size: null, showInLegend: !1, slicedOffset: 10, stickyTracking: !1, tooltip: { followPointer: !0 }, borderColor: "#ffffff", borderWidth: 1, states: { hover: { brightness: .1, shadow: !1 } } }, { isCartesian: !1, requireSorting: !1, directTouch: !0, noSharedTooltip: !0, trackerGroups: ["group", "dataLabelsGroup"], axisTypes: [], pointAttribs: a.seriesTypes.column.prototype.pointAttribs, animate: function animate(a) {
	        var b = this,
	            h = b.points,
	            u = b.startAngleRad;a || (E(h, function (a) {
	          var g = a.graphic,
	              d = a.shapeArgs;g && (g.attr({ r: a.startR || b.center[3] / 2, start: u, end: u }), g.animate({ r: d.r, start: d.start, end: d.end }, b.options.animation));
	        }), b.animate = null);
	      }, updateTotals: function updateTotals() {
	        var a,
	            g = 0,
	            h = this.points,
	            u = h.length,
	            p,
	            m = this.options.ignoreHiddenPoint;for (a = 0; a < u; a++) {
	          p = h[a], 0 > p.y && (p.y = null), g += m && !p.visible ? 0 : p.y;
	        }this.total = g;for (a = 0; a < u; a++) {
	          p = h[a], p.percentage = 0 < g && (p.visible || !m) ? p.y / g * 100 : 0, p.total = g;
	        }
	      }, generatePoints: function generatePoints() {
	        t.prototype.generatePoints.call(this);this.updateTotals();
	      }, translate: function translate(a) {
	        this.generatePoints();
	        var b = 0,
	            h = this.options,
	            u = h.slicedOffset,
	            p = u + (h.borderWidth || 0),
	            m,
	            d,
	            r,
	            l = h.startAngle || 0,
	            f = this.startAngleRad = Math.PI / 180 * (l - 90),
	            l = (this.endAngleRad = Math.PI / 180 * (q(h.endAngle, l + 360) - 90)) - f,
	            n = this.points,
	            e = h.dataLabels.distance,
	            h = h.ignoreHiddenPoint,
	            y,
	            c = n.length,
	            w;a || (this.center = a = this.getCenter());this.getX = function (b, c) {
	          r = Math.asin(Math.min((b - a[1]) / (a[2] / 2 + e), 1));return a[0] + (c ? -1 : 1) * Math.cos(r) * (a[2] / 2 + e);
	        };for (y = 0; y < c; y++) {
	          w = n[y];m = f + b * l;if (!h || w.visible) b += w.percentage / 100;d = f + b * l;w.shapeType = "arc";w.shapeArgs = { x: a[0], y: a[1], r: a[2] / 2, innerR: a[3] / 2, start: Math.round(1E3 * m) / 1E3, end: Math.round(1E3 * d) / 1E3 };r = (d + m) / 2;r > 1.5 * Math.PI ? r -= 2 * Math.PI : r < -Math.PI / 2 && (r += 2 * Math.PI);w.slicedTranslation = { translateX: Math.round(Math.cos(r) * u), translateY: Math.round(Math.sin(r) * u) };m = Math.cos(r) * a[2] / 2;d = Math.sin(r) * a[2] / 2;w.tooltipPos = [a[0] + .7 * m, a[1] + .7 * d];w.half = r < -Math.PI / 2 || r > Math.PI / 2 ? 1 : 0;w.angle = r;p = Math.min(p, e / 5);w.labelPos = [a[0] + m + Math.cos(r) * e, a[1] + d + Math.sin(r) * e, a[0] + m + Math.cos(r) * p, a[1] + d + Math.sin(r) * p, a[0] + m, a[1] + d, 0 > e ? "center" : w.half ? "right" : "left", r];
	        }
	      }, drawGraph: null, drawPoints: function drawPoints() {
	        var a = this,
	            g = a.chart.renderer,
	            h,
	            u,
	            p,
	            m,
	            d = a.options.shadow;d && !a.shadowGroup && (a.shadowGroup = g.g("shadow").add(a.group));E(a.points, function (b) {
	          if (null !== b.y) {
	            u = b.graphic;m = b.shapeArgs;h = b.sliced ? b.slicedTranslation : {};var r = b.shadowGroup;d && !r && (r = b.shadowGroup = g.g("shadow").add(a.shadowGroup));r && r.attr(h);p = a.pointAttribs(b, b.selected && "select");u ? u.setRadialReference(a.center).attr(p).animate(F(m, h)) : (b.graphic = u = g[b.shapeType](m).addClass(b.getClassName()).setRadialReference(a.center).attr(h).add(a.group), b.visible || u.attr({ visibility: "hidden" }), u.attr(p).attr({ "stroke-linejoin": "round" }).shadow(d, r));
	          }
	        });
	      }, searchPoint: l, sortByAngle: function sortByAngle(a, g) {
	        a.sort(function (a, b) {
	          return void 0 !== a.angle && (b.angle - a.angle) * g;
	        });
	      }, drawLegendSymbol: a.LegendSymbolMixin.drawRectangle, getCenter: a.CenteredSeriesMixin.getCenter, getSymbol: l }, { init: function init() {
	        x.prototype.init.apply(this, arguments);var a = this,
	            g;a.name = q(a.name, "Slice");
	        g = function g(b) {
	          a.slice("select" === b.type);
	        };B(a, "select", g);B(a, "unselect", g);return a;
	      }, setVisible: function setVisible(a, g) {
	        var b = this,
	            h = b.series,
	            p = h.chart,
	            m = h.options.ignoreHiddenPoint;g = q(g, m);a !== b.visible && (b.visible = b.options.visible = a = void 0 === a ? !b.visible : a, h.options.data[v(b, h.data)] = b.options, E(["graphic", "dataLabel", "connector", "shadowGroup"], function (d) {
	          if (b[d]) b[d][a ? "show" : "hide"](!0);
	        }), b.legendItem && p.legend.colorizeItem(b, a), a || "hover" !== b.state || b.setState(""), m && (h.isDirty = !0), g && p.redraw());
	      },
	      slice: function slice(a, g, l) {
	        var b = this.series;h(l, b.chart);q(g, !0);this.sliced = this.options.sliced = a = C(a) ? a : !this.sliced;b.options.data[v(this, b.data)] = this.options;a = a ? this.slicedTranslation : { translateX: 0, translateY: 0 };this.graphic.animate(a);this.shadowGroup && this.shadowGroup.animate(a);
	      }, haloPath: function haloPath(a) {
	        var b = this.shapeArgs;return this.sliced || !this.visible ? [] : this.series.chart.renderer.symbols.arc(b.x, b.y, b.r + a, b.r + a, { innerR: this.shapeArgs.r, start: b.start, end: b.end });
	      } });
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.arrayMax,
	        E = a.defined,
	        F = a.each,
	        v = a.extend,
	        l = a.format,
	        q = a.map,
	        x = a.merge,
	        t = a.noop,
	        n = a.pick,
	        h = a.relativeLength,
	        b = a.Series,
	        g = a.seriesTypes,
	        A = a.stableSort;a.distribute = function (a, b) {
	      function g(a, b) {
	        return a.target - b.target;
	      }var d,
	          h = !0,
	          u = a,
	          f = [],
	          p;p = 0;for (d = a.length; d--;) {
	        p += a[d].size;
	      }if (p > b) {
	        A(a, function (a, b) {
	          return (b.rank || 0) - (a.rank || 0);
	        });for (p = d = 0; p <= b;) {
	          p += a[d].size, d++;
	        }f = a.splice(d - 1, a.length);
	      }A(a, g);for (a = q(a, function (a) {
	        return { size: a.size, targets: [a.target] };
	      }); h;) {
	        for (d = a.length; d--;) {
	          h = a[d], p = (Math.min.apply(0, h.targets) + Math.max.apply(0, h.targets)) / 2, h.pos = Math.min(Math.max(0, p - h.size / 2), b - h.size);
	        }d = a.length;for (h = !1; d--;) {
	          0 < d && a[d - 1].pos + a[d - 1].size > a[d].pos && (a[d - 1].size += a[d].size, a[d - 1].targets = a[d - 1].targets.concat(a[d].targets), a[d - 1].pos + a[d - 1].size > b && (a[d - 1].pos = b - a[d - 1].size), a.splice(d, 1), h = !0);
	        }
	      }d = 0;F(a, function (a) {
	        var b = 0;F(a.targets, function () {
	          u[d].pos = a.pos + b;b += u[d].size;d++;
	        });
	      });u.push.apply(u, f);A(u, g);
	    };b.prototype.drawDataLabels = function () {
	      var a = this,
	          b = a.options,
	          g = b.dataLabels,
	          d = a.points,
	          h,
	          q,
	          f = a.hasRendered || 0,
	          t,
	          e,
	          y = n(g.defer, !0),
	          c = a.chart.renderer;if (g.enabled || a._hasPointLabels) a.dlProcessOptions && a.dlProcessOptions(g), e = a.plotGroup("dataLabelsGroup", "data-labels", y && !f ? "hidden" : "visible", g.zIndex || 6), y && (e.attr({ opacity: +f }), f || B(a, "afterAnimate", function () {
	        a.visible && e.show(!0);e[b.animation ? "animate" : "attr"]({ opacity: 1 }, { duration: 200 });
	      })), q = g, F(d, function (d) {
	        var f,
	            m = d.dataLabel,
	            r,
	            k,
	            u = d.connector,
	            p = !0,
	            w,
	            y = {};h = d.dlOptions || d.options && d.options.dataLabels;
	        f = n(h && h.enabled, q.enabled) && null !== d.y;if (m && !f) d.dataLabel = m.destroy();else if (f) {
	          g = x(q, h);w = g.style;f = g.rotation;r = d.getLabelConfig();t = g.format ? l(g.format, r) : g.formatter.call(r, g);w.color = n(g.color, w.color, a.color, "#000000");if (m) E(t) ? (m.attr({ text: t }), p = !1) : (d.dataLabel = m = m.destroy(), u && (d.connector = u.destroy()));else if (E(t)) {
	            m = { fill: g.backgroundColor, stroke: g.borderColor, "stroke-width": g.borderWidth, r: g.borderRadius || 0, rotation: f, padding: g.padding, zIndex: 1 };"contrast" === w.color && (y.color = g.inside || 0 > g.distance || b.stacking ? c.getContrast(d.color || a.color) : "#000000");b.cursor && (y.cursor = b.cursor);for (k in m) {
	              void 0 === m[k] && delete m[k];
	            }m = d.dataLabel = c[f ? "text" : "label"](t, 0, -9999, g.shape, null, null, g.useHTML, null, "data-label").attr(m);m.addClass("highcharts-data-label-color-" + d.colorIndex + " " + (g.className || "") + (g.useHTML ? "highcharts-tracker" : ""));m.css(v(w, y));m.add(e);m.shadow(g.shadow);
	          }m && a.alignDataLabel(d, m, g, null, p);
	        }
	      });
	    };b.prototype.alignDataLabel = function (a, b, g, d, h) {
	      var m = this.chart,
	          f = m.inverted,
	          r = n(a.plotX, -9999),
	          e = n(a.plotY, -9999),
	          u = b.getBBox(),
	          c,
	          p = g.rotation,
	          l = g.align,
	          q = this.visible && (a.series.forceDL || m.isInsidePlot(r, Math.round(e), f) || d && m.isInsidePlot(r, f ? d.x + 1 : d.y + d.height - 1, f)),
	          t = "justify" === n(g.overflow, "justify");q && (c = g.style.fontSize, c = m.renderer.fontMetrics(c, b).b, d = v({ x: f ? m.plotWidth - e : r, y: Math.round(f ? m.plotHeight - r : e), width: 0, height: 0 }, d), v(g, { width: u.width, height: u.height }), p ? (t = !1, f = m.renderer.rotCorr(c, p), f = { x: d.x + g.x + d.width / 2 + f.x, y: d.y + g.y + { top: 0, middle: .5, bottom: 1 }[g.verticalAlign] * d.height }, b[h ? "attr" : "animate"](f).attr({ align: l }), r = (p + 720) % 360, r = 180 < r && 360 > r, "left" === l ? f.y -= r ? u.height : 0 : "center" === l ? (f.x -= u.width / 2, f.y -= u.height / 2) : "right" === l && (f.x -= u.width, f.y -= r ? 0 : u.height)) : (b.align(g, null, d), f = b.alignAttr), t ? this.justifyDataLabel(b, g, f, u, d, h) : n(g.crop, !0) && (q = m.isInsidePlot(f.x, f.y) && m.isInsidePlot(f.x + u.width, f.y + u.height)), g.shape && !p && b.attr({ anchorX: a.plotX, anchorY: a.plotY }));q || (b.attr({ y: -9999 }), b.placed = !1);
	    };b.prototype.justifyDataLabel = function (a, b, g, d, h, l) {
	      var f = this.chart,
	          m = b.align,
	          e = b.verticalAlign,
	          r,
	          c,
	          u = a.box ? 0 : a.padding || 0;r = g.x + u;0 > r && ("right" === m ? b.align = "left" : b.x = -r, c = !0);r = g.x + d.width - u;r > f.plotWidth && ("left" === m ? b.align = "right" : b.x = f.plotWidth - r, c = !0);r = g.y + u;0 > r && ("bottom" === e ? b.verticalAlign = "top" : b.y = -r, c = !0);r = g.y + d.height - u;r > f.plotHeight && ("top" === e ? b.verticalAlign = "bottom" : b.y = f.plotHeight - r, c = !0);c && (a.placed = !l, a.align(b, null, h));
	    };g.pie && (g.pie.prototype.drawDataLabels = function () {
	      var g = this,
	          h = g.data,
	          m,
	          d = g.chart,
	          r = g.options.dataLabels,
	          l = n(r.connectorPadding, 10),
	          f = n(r.connectorWidth, 1),
	          t = d.plotWidth,
	          e = d.plotHeight,
	          y,
	          c = r.distance,
	          w = g.center,
	          D = w[2] / 2,
	          v = w[1],
	          x = 0 < c,
	          k,
	          A,
	          B,
	          E,
	          O = [[], []],
	          N,
	          J,
	          S,
	          Q,
	          P = [0, 0, 0, 0];g.visible && (r.enabled || g._hasPointLabels) && (b.prototype.drawDataLabels.apply(g), F(h, function (a) {
	        a.dataLabel && a.visible && (O[a.half].push(a), a.dataLabel._pos = null);
	      }), F(O, function (b, f) {
	        var h,
	            u,
	            p = b.length,
	            n,
	            y,
	            G;if (p) for (g.sortByAngle(b, f - .5), 0 < c && (h = Math.max(0, v - D - c), u = Math.min(v + D + c, d.plotHeight), n = q(b, function (a) {
	          if (a.dataLabel) return G = a.dataLabel.getBBox().height || 21, { target: a.labelPos[1] - h + G / 2, size: G, rank: a.y };
	        }), a.distribute(n, u + G - h)), Q = 0; Q < p; Q++) {
	          m = b[Q], B = m.labelPos, k = m.dataLabel, S = !1 === m.visible ? "hidden" : "inherit", y = B[1], n ? void 0 === n[Q].pos ? S = "hidden" : (E = n[Q].size, J = h + n[Q].pos) : J = y, N = r.justify ? w[0] + (f ? -1 : 1) * (D + c) : g.getX(J < h + 2 || J > u - 2 ? y : J, f), k._attr = { visibility: S, align: B[6] }, k._pos = { x: N + r.x + ({ left: l, right: -l }[B[6]] || 0), y: J + r.y - 10 }, B.x = N, B.y = J, null === g.options.size && (A = k.width, N - A < l ? P[3] = Math.max(Math.round(A - N + l), P[3]) : N + A > t - l && (P[1] = Math.max(Math.round(N + A - t + l), P[1])), 0 > J - E / 2 ? P[0] = Math.max(Math.round(-J + E / 2), P[0]) : J + E / 2 > e && (P[2] = Math.max(Math.round(J + E / 2 - e), P[2])));
	        }
	      }), 0 === C(P) || this.verifyDataLabelOverflow(P)) && (this.placeDataLabels(), x && f && F(this.points, function (a) {
	        var b;y = a.connector;if ((k = a.dataLabel) && k._pos && a.visible) {
	          S = k._attr.visibility;if (b = !y) a.connector = y = d.renderer.path().addClass("highcharts-data-label-connector highcharts-color-" + a.colorIndex).add(g.dataLabelsGroup), y.attr({ "stroke-width": f, stroke: r.connectorColor || a.color || "#666666" });y[b ? "attr" : "animate"]({ d: g.connectorPath(a.labelPos) });y.attr("visibility", S);
	        } else y && (a.connector = y.destroy());
	      }));
	    }, g.pie.prototype.connectorPath = function (a) {
	      var b = a.x,
	          g = a.y;return n(this.options.dataLabels.softConnector, !0) ? ["M", b + ("left" === a[6] ? 5 : -5), g, "C", b, g, 2 * a[2] - a[4], 2 * a[3] - a[5], a[2], a[3], "L", a[4], a[5]] : ["M", b + ("left" === a[6] ? 5 : -5), g, "L", a[2], a[3], "L", a[4], a[5]];
	    }, g.pie.prototype.placeDataLabels = function () {
	      F(this.points, function (a) {
	        var b = a.dataLabel;b && a.visible && ((a = b._pos) ? (b.attr(b._attr), b[b.moved ? "animate" : "attr"](a), b.moved = !0) : b && b.attr({ y: -9999 }));
	      });
	    }, g.pie.prototype.alignDataLabel = t, g.pie.prototype.verifyDataLabelOverflow = function (a) {
	      var b = this.center,
	          g = this.options,
	          d = g.center,
	          r = g.minSize || 80,
	          l,
	          f;null !== d[0] ? l = Math.max(b[2] - Math.max(a[1], a[3]), r) : (l = Math.max(b[2] - a[1] - a[3], r), b[0] += (a[3] - a[1]) / 2);null !== d[1] ? l = Math.max(Math.min(l, b[2] - Math.max(a[0], a[2])), r) : (l = Math.max(Math.min(l, b[2] - a[0] - a[2]), r), b[1] += (a[0] - a[2]) / 2);l < b[2] ? (b[2] = l, b[3] = Math.min(h(g.innerSize || 0, l), l), this.translate(b), this.drawDataLabels && this.drawDataLabels()) : f = !0;return f;
	    });g.column && (g.column.prototype.alignDataLabel = function (a, g, h, d, r) {
	      var m = this.chart.inverted,
	          f = a.series,
	          l = a.dlBox || a.shapeArgs,
	          e = n(a.below, a.plotY > n(this.translatedThreshold, f.yAxis.len)),
	          u = n(h.inside, !!this.options.stacking);l && (d = x(l), 0 > d.y && (d.height += d.y, d.y = 0), l = d.y + d.height - f.yAxis.len, 0 < l && (d.height -= l), m && (d = { x: f.yAxis.len - d.y - d.height, y: f.xAxis.len - d.x - d.width, width: d.height, height: d.width }), u || (m ? (d.x += e ? 0 : d.width, d.width = 0) : (d.y += e ? d.height : 0, d.height = 0)));h.align = n(h.align, !m || u ? "center" : e ? "right" : "left");h.verticalAlign = n(h.verticalAlign, m || u ? "middle" : e ? "top" : "bottom");b.prototype.alignDataLabel.call(this, a, g, h, d, r);
	    });
	  })(K);(function (a) {
	    var B = a.Chart,
	        C = a.each,
	        E = a.pick,
	        F = a.addEvent;B.prototype.callbacks.push(function (a) {
	      function l() {
	        var l = [];C(a.series, function (a) {
	          var q = a.options.dataLabels,
	              n = a.dataLabelCollections || ["dataLabel"];(q.enabled || a._hasPointLabels) && !q.allowOverlap && a.visible && C(n, function (h) {
	            C(a.points, function (a) {
	              a[h] && (a[h].labelrank = E(a.labelrank, a.shapeArgs && a.shapeArgs.height), l.push(a[h]));
	            });
	          });
	        });a.hideOverlappingLabels(l);
	      }l();F(a, "redraw", l);
	    });B.prototype.hideOverlappingLabels = function (a) {
	      var l = a.length,
	          q,
	          v,
	          t,
	          n,
	          h,
	          b,
	          g,
	          A,
	          u,
	          p = function p(a, b, g, h, f, l, e, u) {
	        return !(f > a + g || f + e < a || l > b + h || l + u < b);
	      };for (v = 0; v < l; v++) {
	        if (q = a[v]) q.oldOpacity = q.opacity, q.newOpacity = 1;
	      }a.sort(function (a, b) {
	        return (b.labelrank || 0) - (a.labelrank || 0);
	      });for (v = 0; v < l; v++) {
	        for (t = a[v], q = v + 1; q < l; ++q) {
	          if (n = a[q], t && n && t.placed && n.placed && 0 !== t.newOpacity && 0 !== n.newOpacity && (h = t.alignAttr, b = n.alignAttr, g = t.parentGroup, A = n.parentGroup, u = 2 * (t.box ? 0 : t.padding), h = p(h.x + g.translateX, h.y + g.translateY, t.width - u, t.height - u, b.x + A.translateX, b.y + A.translateY, n.width - u, n.height - u))) (t.labelrank < n.labelrank ? t : n).newOpacity = 0;
	        }
	      }C(a, function (a) {
	        var b, g;a && (g = a.newOpacity, a.oldOpacity !== g && a.placed && (g ? a.show(!0) : b = function b() {
	          a.hide();
	        }, a.alignAttr.opacity = g, a[a.isOld ? "animate" : "attr"](a.alignAttr, null, b)), a.isOld = !0);
	      });
	    };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.Chart,
	        E = a.createElement,
	        F = a.css,
	        v = a.defaultOptions,
	        l = a.defaultPlotOptions,
	        q = a.each,
	        x = a.extend,
	        t = a.fireEvent,
	        n = a.hasTouch,
	        h = a.inArray,
	        b = a.isObject,
	        g = a.Legend,
	        A = a.merge,
	        u = a.pick,
	        p = a.Point,
	        m = a.Series,
	        d = a.seriesTypes,
	        r = a.svg;a = a.TrackerMixin = { drawTrackerPoint: function drawTrackerPoint() {
	        var a = this,
	            b = a.chart,
	            d = b.pointer,
	            e = function e(a) {
	          for (var c = a.target, d; c && !d;) {
	            d = c.point, c = c.parentNode;
	          }if (void 0 !== d && d !== b.hoverPoint) d.onMouseOver(a);
	        };q(a.points, function (a) {
	          a.graphic && (a.graphic.element.point = a);a.dataLabel && (a.dataLabel.div ? a.dataLabel.div.point = a : a.dataLabel.element.point = a);
	        });a._hasTracking || (q(a.trackerGroups, function (b) {
	          if (a[b]) {
	            a[b].addClass("highcharts-tracker").on("mouseover", e).on("mouseout", function (a) {
	              d.onTrackerMouseOut(a);
	            });if (n) a[b].on("touchstart", e);a.options.cursor && a[b].css(F).css({ cursor: a.options.cursor });
	          }
	        }), a._hasTracking = !0);
	      }, drawTrackerGraph: function drawTrackerGraph() {
	        var a = this,
	            b = a.options,
	            d = b.trackByArea,
	            e = [].concat(d ? a.areaPath : a.graphPath),
	            g = e.length,
	            c = a.chart,
	            h = c.pointer,
	            m = c.renderer,
	            l = c.options.tooltip.snap,
	            u = a.tracker,
	            k,
	            p = function p() {
	          if (c.hoverSeries !== a) a.onMouseOver();
	        },
	            t = "rgba(192,192,192," + (r ? .0001 : .002) + ")";if (g && !d) for (k = g + 1; k--;) {
	          "M" === e[k] && e.splice(k + 1, 0, e[k + 1] - l, e[k + 2], "L"), (k && "M" === e[k] || k === g) && e.splice(k, 0, "L", e[k - 2] + l, e[k - 1]);
	        }u ? u.attr({ d: e }) : a.graph && (a.tracker = m.path(e).attr({ "stroke-linejoin": "round", visibility: a.visible ? "visible" : "hidden", stroke: t, fill: d ? t : "none", "stroke-width": a.graph.strokeWidth() + (d ? 0 : 2 * l), zIndex: 2 }).add(a.group), q([a.tracker, a.markerGroup], function (a) {
	          a.addClass("highcharts-tracker").on("mouseover", p).on("mouseout", function (a) {
	            h.onTrackerMouseOut(a);
	          });b.cursor && a.css({ cursor: b.cursor });if (n) a.on("touchstart", p);
	        }));
	      } };d.column && (d.column.prototype.drawTracker = a.drawTrackerPoint);d.pie && (d.pie.prototype.drawTracker = a.drawTrackerPoint);d.scatter && (d.scatter.prototype.drawTracker = a.drawTrackerPoint);x(g.prototype, { setItemEvents: function setItemEvents(a, b, d) {
	        var e = this,
	            f = e.chart,
	            c = "highcharts-legend-" + (a.series ? "point" : "series") + "-active";(d ? b : a.legendGroup).on("mouseover", function () {
	          a.setState("hover");f.seriesGroup.addClass(c);
	          b.css(e.options.itemHoverStyle);
	        }).on("mouseout", function () {
	          b.css(a.visible ? e.itemStyle : e.itemHiddenStyle);f.seriesGroup.removeClass(c);a.setState();
	        }).on("click", function (b) {
	          var c = function c() {
	            a.setVisible && a.setVisible();
	          };b = { browserEvent: b };a.firePointEvent ? a.firePointEvent("legendItemClick", b, c) : t(a, "legendItemClick", b, c);
	        });
	      }, createCheckboxForItem: function createCheckboxForItem(a) {
	        a.checkbox = E("input", { type: "checkbox", checked: a.selected, defaultChecked: a.selected }, this.options.itemCheckboxStyle, this.chart.container);B(a.checkbox, "click", function (b) {
	          t(a.series || a, "checkboxClick", { checked: b.target.checked, item: a }, function () {
	            a.select();
	          });
	        });
	      } });v.legend.itemStyle.cursor = "pointer";x(C.prototype, { showResetZoom: function showResetZoom() {
	        var a = this,
	            b = v.lang,
	            d = a.options.chart.resetZoomButton,
	            e = d.theme,
	            g = e.states,
	            c = "chart" === d.relativeTo ? null : "plotBox";this.resetZoomButton = a.renderer.button(b.resetZoom, null, null, function () {
	          a.zoomOut();
	        }, e, g && g.hover).attr({ align: d.position.align, title: b.resetZoomTitle }).addClass("highcharts-reset-zoom").add().align(d.position, !1, c);
	      }, zoomOut: function zoomOut() {
	        var a = this;t(a, "selection", { resetSelection: !0 }, function () {
	          a.zoom();
	        });
	      }, zoom: function zoom(a) {
	        var d,
	            g = this.pointer,
	            e = !1,
	            h;!a || a.resetSelection ? q(this.axes, function (a) {
	          d = a.zoom();
	        }) : q(a.xAxis.concat(a.yAxis), function (a) {
	          var b = a.axis;g[b.isXAxis ? "zoomX" : "zoomY"] && (d = b.zoom(a.min, a.max), b.displayBtn && (e = !0));
	        });h = this.resetZoomButton;e && !h ? this.showResetZoom() : !e && b(h) && (this.resetZoomButton = h.destroy());d && this.redraw(u(this.options.chart.animation, a && a.animation, 100 > this.pointCount));
	      },
	      pan: function pan(a, b) {
	        var d = this,
	            e = d.hoverPoints,
	            f;e && q(e, function (a) {
	          a.setState();
	        });q("xy" === b ? [1, 0] : [1], function (b) {
	          b = d[b ? "xAxis" : "yAxis"][0];var c = b.horiz,
	              e = a[c ? "chartX" : "chartY"],
	              c = c ? "mouseDownX" : "mouseDownY",
	              g = d[c],
	              h = (b.pointRange || 0) / 2,
	              k = b.getExtremes(),
	              m = b.toValue(g - e, !0) + h,
	              h = b.toValue(g + b.len - e, !0) - h,
	              r = h < m,
	              g = r ? h : m,
	              m = r ? m : h,
	              h = Math.min(k.dataMin, k.min) - g,
	              k = m - Math.max(k.dataMax, k.max);b.series.length && 0 > h && 0 > k && (b.setExtremes(g, m, !1, !1, { trigger: "pan" }), f = !0);d[c] = e;
	        });f && d.redraw(!1);F(d.container, { cursor: "move" });
	      } });x(p.prototype, { select: function select(a, b) {
	        var d = this,
	            e = d.series,
	            f = e.chart;a = u(a, !d.selected);d.firePointEvent(a ? "select" : "unselect", { accumulate: b }, function () {
	          d.selected = d.options.selected = a;e.options.data[h(d, e.data)] = d.options;d.setState(a && "select");b || q(f.getSelectedPoints(), function (a) {
	            a.selected && a !== d && (a.selected = a.options.selected = !1, e.options.data[h(a, e.data)] = a.options, a.setState(""), a.firePointEvent("unselect"));
	          });
	        });
	      }, onMouseOver: function onMouseOver(a, b) {
	        var d = this.series,
	            e = d.chart,
	            f = e.tooltip,
	            c = e.hoverPoint;if (this.series) {
	          if (!b) {
	            if (c && c !== this) c.onMouseOut();if (e.hoverSeries !== d) d.onMouseOver();e.hoverPoint = this;
	          }!f || f.shared && !d.noSharedTooltip ? f || this.setState("hover") : (this.setState("hover"), f.refresh(this, a));this.firePointEvent("mouseOver");
	        }
	      }, onMouseOut: function onMouseOut() {
	        var a = this.series.chart,
	            b = a.hoverPoints;this.firePointEvent("mouseOut");b && -1 !== h(this, b) || (this.setState(), a.hoverPoint = null);
	      }, importEvents: function importEvents() {
	        if (!this.hasImportedEvents) {
	          var a = A(this.series.options.point, this.options).events,
	              b;this.events = a;for (b in a) {
	            B(this, b, a[b]);
	          }this.hasImportedEvents = !0;
	        }
	      }, setState: function setState(a, b) {
	        var d = Math.floor(this.plotX),
	            e = this.plotY,
	            f = this.series,
	            c = f.options.states[a] || {},
	            g = l[f.type].marker && f.options.marker,
	            h = g && !1 === g.enabled,
	            m = g && g.states && g.states[a] || {},
	            r = !1 === m.enabled,
	            k = f.stateMarkerGraphic,
	            p = this.marker || {},
	            n = f.chart,
	            q = f.halo,
	            t,
	            v = g && f.markerAttribs;a = a || "";if (!(a === this.state && !b || this.selected && "select" !== a || !1 === c.enabled || a && (r || h && !1 === m.enabled) || a && p.states && p.states[a] && !1 === p.states[a].enabled)) {
	          v && (t = f.markerAttribs(this, a));if (this.graphic) this.state && this.graphic.removeClass("highcharts-point-" + this.state), a && this.graphic.addClass("highcharts-point-" + a), this.graphic.attr(f.pointAttribs(this, a)), t && this.graphic.animate(t, u(n.options.chart.animation, m.animation, g.animation)), k && k.hide();else {
	            if (a && m) {
	              g = p.symbol || f.symbol;k && k.currentSymbol !== g && (k = k.destroy());if (k) k[b ? "animate" : "attr"]({ x: t.x, y: t.y });else g && (f.stateMarkerGraphic = k = n.renderer.symbol(g, t.x, t.y, t.width, t.height).add(f.markerGroup), k.currentSymbol = g);k && k.attr(f.pointAttribs(this, a));
	            }k && (k[a && n.isInsidePlot(d, e, n.inverted) ? "show" : "hide"](), k.element.point = this);
	          }(d = c.halo) && d.size ? (q || (f.halo = q = n.renderer.path().add(v ? f.markerGroup : f.group)), q[b ? "animate" : "attr"]({ d: this.haloPath(d.size) }), q.attr({ "class": "highcharts-halo highcharts-color-" + u(this.colorIndex, f.colorIndex) }), q.point = this, q.attr(x({ fill: this.color || f.color, "fill-opacity": d.opacity, zIndex: -1 }, d.attributes))) : q && q.point && q.point.haloPath && q.animate({ d: q.point.haloPath(0) });this.state = a;
	        }
	      }, haloPath: function haloPath(a) {
	        return this.series.chart.renderer.symbols.circle(Math.floor(this.plotX) - a, this.plotY - a, 2 * a, 2 * a);
	      } });x(m.prototype, { onMouseOver: function onMouseOver() {
	        var a = this.chart,
	            b = a.hoverSeries;if (b && b !== this) b.onMouseOut();this.options.events.mouseOver && t(this, "mouseOver");this.setState("hover");a.hoverSeries = this;
	      }, onMouseOut: function onMouseOut() {
	        var a = this.options,
	            b = this.chart,
	            d = b.tooltip,
	            e = b.hoverPoint;b.hoverSeries = null;if (e) e.onMouseOut();
	        this && a.events.mouseOut && t(this, "mouseOut");!d || a.stickyTracking || d.shared && !this.noSharedTooltip || d.hide();this.setState();
	      }, setState: function setState(a) {
	        var b = this,
	            d = b.options,
	            e = b.graph,
	            g = d.states,
	            c = d.lineWidth,
	            d = 0;a = a || "";if (b.state !== a && (q([b.group, b.markerGroup], function (c) {
	          c && (b.state && c.removeClass("highcharts-series-" + b.state), a && c.addClass("highcharts-series-" + a));
	        }), b.state = a, !g[a] || !1 !== g[a].enabled) && (a && (c = g[a].lineWidth || c + (g[a].lineWidthPlus || 0)), e && !e.dashstyle)) for (g = { "stroke-width": c }, e.attr(g); b["zone-graph-" + d];) {
	          b["zone-graph-" + d].attr(g), d += 1;
	        }
	      }, setVisible: function setVisible(a, b) {
	        var d = this,
	            e = d.chart,
	            f = d.legendItem,
	            c,
	            g = e.options.chart.ignoreHiddenSeries,
	            h = d.visible;c = (d.visible = a = d.options.visible = d.userOptions.visible = void 0 === a ? !h : a) ? "show" : "hide";q(["group", "dataLabelsGroup", "markerGroup", "tracker", "tt"], function (a) {
	          if (d[a]) d[a][c]();
	        });if (e.hoverSeries === d || (e.hoverPoint && e.hoverPoint.series) === d) d.onMouseOut();f && e.legend.colorizeItem(d, a);d.isDirty = !0;d.options.stacking && q(e.series, function (a) {
	          a.options.stacking && a.visible && (a.isDirty = !0);
	        });q(d.linkedSeries, function (b) {
	          b.setVisible(a, !1);
	        });g && (e.isDirtyBox = !0);!1 !== b && e.redraw();t(d, c);
	      }, show: function show() {
	        this.setVisible(!0);
	      }, hide: function hide() {
	        this.setVisible(!1);
	      }, select: function select(a) {
	        this.selected = a = void 0 === a ? !this.selected : a;this.checkbox && (this.checkbox.checked = a);t(this, a ? "select" : "unselect");
	      }, drawTracker: a.drawTrackerGraph });
	  })(K);(function (a) {
	    var B = a.Chart,
	        C = a.each,
	        E = a.inArray,
	        F = a.isObject,
	        v = a.pick,
	        l = a.splat;B.prototype.setResponsive = function (a) {
	      var l = this.options.responsive;
	      l && l.rules && C(l.rules, function (l) {
	        this.matchResponsiveRule(l, a);
	      }, this);
	    };B.prototype.matchResponsiveRule = function (l, x) {
	      var q = this.respRules,
	          n = l.condition,
	          h;h = n.callback || function () {
	        return this.chartWidth <= v(n.maxWidth, Number.MAX_VALUE) && this.chartHeight <= v(n.maxHeight, Number.MAX_VALUE) && this.chartWidth >= v(n.minWidth, 0) && this.chartHeight >= v(n.minHeight, 0);
	      };void 0 === l._id && (l._id = a.uniqueKey());h = h.call(this);!q[l._id] && h ? l.chartOptions && (q[l._id] = this.currentOptions(l.chartOptions), this.update(l.chartOptions, x)) : q[l._id] && !h && (this.update(q[l._id], x), delete q[l._id]);
	    };B.prototype.currentOptions = function (a) {
	      function q(a, h, b) {
	        var g, n;for (g in a) {
	          if (-1 < E(g, ["series", "xAxis", "yAxis"])) for (a[g] = l(a[g]), b[g] = [], n = 0; n < a[g].length; n++) {
	            b[g][n] = {}, q(a[g][n], h[g][n], b[g][n]);
	          } else F(a[g]) ? (b[g] = {}, q(a[g], h[g] || {}, b[g])) : b[g] = h[g] || null;
	        }
	      }var t = {};q(a, this.options, t);return t;
	    };
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.Axis,
	        E = a.Chart,
	        F = a.css,
	        v = a.dateFormat,
	        l = a.defined,
	        q = a.each,
	        x = a.extend,
	        t = a.noop,
	        n = a.Series,
	        h = a.timeUnits;
	    a = a.wrap;a(n.prototype, "init", function (a) {
	      var b;a.apply(this, Array.prototype.slice.call(arguments, 1));(b = this.xAxis) && b.options.ordinal && B(this, "updatedData", function () {
	        delete b.ordinalIndex;
	      });
	    });a(C.prototype, "getTimeTicks", function (a, g, n, u, p, m, d, r) {
	      var b = 0,
	          f,
	          q,
	          e = {},
	          t,
	          c,
	          w,
	          D = [],
	          x = -Number.MAX_VALUE,
	          A = this.options.tickPixelInterval;if (!this.options.ordinal && !this.options.breaks || !m || 3 > m.length || void 0 === n) return a.call(this, g, n, u, p);c = m.length;for (f = 0; f < c; f++) {
	        w = f && m[f - 1] > u;m[f] < n && (b = f);if (f === c - 1 || m[f + 1] - m[f] > 5 * d || w) {
	          if (m[f] > x) {
	            for (q = a.call(this, g, m[b], m[f], p); q.length && q[0] <= x;) {
	              q.shift();
	            }q.length && (x = q[q.length - 1]);D = D.concat(q);
	          }b = f + 1;
	        }if (w) break;
	      }a = q.info;if (r && a.unitRange <= h.hour) {
	        f = D.length - 1;for (b = 1; b < f; b++) {
	          v("%d", D[b]) !== v("%d", D[b - 1]) && (e[D[b]] = "day", t = !0);
	        }t && (e[D[0]] = "day");a.higherRanks = e;
	      }D.info = a;if (r && l(A)) {
	        r = a = D.length;f = [];var k;for (t = []; r--;) {
	          b = this.translate(D[r]), k && (t[r] = k - b), f[r] = k = b;
	        }t.sort();t = t[Math.floor(t.length / 2)];t < .6 * A && (t = null);r = D[a - 1] > u ? a - 1 : a;for (k = void 0; r--;) {
	          b = f[r], u = Math.abs(k - b), k && u < .8 * A && (null === t || u < .8 * t) ? (e[D[r]] && !e[D[r + 1]] ? (u = r + 1, k = b) : u = r, D.splice(u, 1)) : k = b;
	        }
	      }return D;
	    });x(C.prototype, { beforeSetTickPositions: function beforeSetTickPositions() {
	        var a,
	            g = [],
	            h = !1,
	            l,
	            p = this.getExtremes(),
	            m = p.min,
	            d = p.max,
	            r,
	            n = this.isXAxis && !!this.options.breaks,
	            p = this.options.ordinal,
	            f = this.chart.options.chart.ignoreHiddenSeries;if (p || n) {
	          q(this.series, function (b, d) {
	            if (!(f && !1 === b.visible || !1 === b.takeOrdinalPosition && !n) && (g = g.concat(b.processedXData), a = g.length, g.sort(function (a, b) {
	              return a - b;
	            }), a)) for (d = a - 1; d--;) {
	              g[d] === g[d + 1] && g.splice(d, 1);
	            }
	          });a = g.length;if (2 < a) {
	            l = g[1] - g[0];for (r = a - 1; r-- && !h;) {
	              g[r + 1] - g[r] !== l && (h = !0);
	            }!this.options.keepOrdinalPadding && (g[0] - m > l || d - g[g.length - 1] > l) && (h = !0);
	          }h ? (this.ordinalPositions = g, l = this.val2lin(Math.max(m, g[0]), !0), r = Math.max(this.val2lin(Math.min(d, g[g.length - 1]), !0), 1), this.ordinalSlope = d = (d - m) / (r - l), this.ordinalOffset = m - l * d) : this.ordinalPositions = this.ordinalSlope = this.ordinalOffset = void 0;
	        }this.isOrdinal = p && h;this.groupIntervalFactor = null;
	      }, val2lin: function val2lin(a, g) {
	        var b = this.ordinalPositions;if (b) {
	          var h = b.length,
	              l,
	              m;for (l = h; l--;) {
	            if (b[l] === a) {
	              m = l;break;
	            }
	          }for (l = h - 1; l--;) {
	            if (a > b[l] || 0 === l) {
	              a = (a - b[l]) / (b[l + 1] - b[l]);m = l + a;break;
	            }
	          }g = g ? m : this.ordinalSlope * (m || 0) + this.ordinalOffset;
	        } else g = a;return g;
	      }, lin2val: function lin2val(a, g) {
	        var b = this.ordinalPositions;if (b) {
	          var h = this.ordinalSlope,
	              l = this.ordinalOffset,
	              m = b.length - 1,
	              d;if (g) 0 > a ? a = b[0] : a > m ? a = b[m] : (m = Math.floor(a), d = a - m);else for (; m--;) {
	            if (g = h * m + l, a >= g) {
	              h = h * (m + 1) + l;d = (a - g) / (h - g);break;
	            }
	          }return void 0 !== d && void 0 !== b[m] ? b[m] + (d ? d * (b[m + 1] - b[m]) : 0) : a;
	        }return a;
	      }, getExtendedPositions: function getExtendedPositions() {
	        var a = this.chart,
	            g = this.series[0].currentDataGrouping,
	            h = this.ordinalIndex,
	            l = g ? g.count + g.unitName : "raw",
	            p = this.getExtremes(),
	            m,
	            d;h || (h = this.ordinalIndex = {});h[l] || (m = { series: [], chart: a, getExtremes: function getExtremes() {
	            return { min: p.dataMin, max: p.dataMax };
	          }, options: { ordinal: !0 }, val2lin: C.prototype.val2lin }, q(this.series, function (b) {
	          d = { xAxis: m, xData: b.xData, chart: a, destroyGroupedData: t };d.options = { dataGrouping: g ? { enabled: !0, forced: !0, approximation: "open", units: [[g.unitName, [g.count]]] } : { enabled: !1 } };b.processData.apply(d);m.series.push(d);
	        }), this.beforeSetTickPositions.apply(m), h[l] = m.ordinalPositions);return h[l];
	      }, getGroupIntervalFactor: function getGroupIntervalFactor(a, g, h) {
	        var b;h = h.processedXData;var l = h.length,
	            m = [];b = this.groupIntervalFactor;if (!b) {
	          for (b = 0; b < l - 1; b++) {
	            m[b] = h[b + 1] - h[b];
	          }m.sort(function (a, b) {
	            return a - b;
	          });m = m[Math.floor(l / 2)];a = Math.max(a, h[0]);g = Math.min(g, h[l - 1]);this.groupIntervalFactor = b = l * m / (g - a);
	        }return b;
	      }, postProcessTickInterval: function postProcessTickInterval(a) {
	        var b = this.ordinalSlope;return b ? this.options.breaks ? this.closestPointRange : a / (b / this.closestPointRange) : a;
	      } });a(E.prototype, "pan", function (a, g) {
	      var b = this.xAxis[0],
	          h = g.chartX,
	          l = !1;if (b.options.ordinal && b.series.length) {
	        var m = this.mouseDownX,
	            d = b.getExtremes(),
	            r = d.dataMax,
	            n = d.min,
	            f = d.max,
	            t = this.hoverPoints,
	            e = b.closestPointRange,
	            m = (m - h) / (b.translationSlope * (b.ordinalSlope || e)),
	            v = { ordinalPositions: b.getExtendedPositions() },
	            e = b.lin2val,
	            c = b.val2lin,
	            w;v.ordinalPositions ? 1 < Math.abs(m) && (t && q(t, function (a) {
	          a.setState();
	        }), 0 > m ? (t = v, w = b.ordinalPositions ? b : v) : (t = b.ordinalPositions ? b : v, w = v), v = w.ordinalPositions, r > v[v.length - 1] && v.push(r), this.fixedRange = f - n, m = b.toFixedRange(null, null, e.apply(t, [c.apply(t, [n, !0]) + m, !0]), e.apply(w, [c.apply(w, [f, !0]) + m, !0])), m.min >= Math.min(d.dataMin, n) && m.max <= Math.max(r, f) && b.setExtremes(m.min, m.max, !0, !1, { trigger: "pan" }), this.mouseDownX = h, F(this.container, { cursor: "move" })) : l = !0;
	      } else l = !0;l && a.apply(this, Array.prototype.slice.call(arguments, 1));
	    });n.prototype.gappedPath = function () {
	      var a = this.options.gapSize,
	          g = this.points.slice(),
	          h = g.length - 1;if (a && 0 < h) for (; h--;) {
	        g[h + 1].x - g[h].x > this.closestPointRange * a && g.splice(h + 1, 0, { isNull: !0 });
	      }return this.getGraphPath(g);
	    };
	  })(K);(function (a) {
	    function B() {
	      return Array.prototype.slice.call(arguments, 1);
	    }function C(a) {
	      a.apply(this);this.drawBreaks(this.xAxis, ["x"]);this.drawBreaks(this.yAxis, E(this.pointArrayMap, ["y"]));
	    }var E = a.pick,
	        F = a.wrap,
	        v = a.each,
	        l = a.extend,
	        q = a.fireEvent,
	        x = a.Axis,
	        t = a.Series;l(x.prototype, { isInBreak: function isInBreak(a, h) {
	        var b = a.repeat || Infinity,
	            g = a.from,
	            l = a.to - a.from;h = h >= g ? (h - g) % b : b - (g - h) % b;return a.inclusive ? h <= l : h < l && 0 !== h;
	      }, isInAnyBreak: function isInAnyBreak(a, h) {
	        var b = this.options.breaks,
	            g = b && b.length,
	            l,
	            u,
	            p;if (g) {
	          for (; g--;) {
	            this.isInBreak(b[g], a) && (l = !0, u || (u = E(b[g].showPoints, this.isXAxis ? !1 : !0)));
	          }p = l && h ? l && !u : l;
	        }return p;
	      } });F(x.prototype, "setTickPositions", function (a) {
	      a.apply(this, Array.prototype.slice.call(arguments, 1));if (this.options.breaks) {
	        var h = this.tickPositions,
	            b = this.tickPositions.info,
	            g = [],
	            l;for (l = 0; l < h.length; l++) {
	          this.isInAnyBreak(h[l]) || g.push(h[l]);
	        }this.tickPositions = g;this.tickPositions.info = b;
	      }
	    });F(x.prototype, "init", function (a, h, b) {
	      b.breaks && b.breaks.length && (b.ordinal = !1);a.call(this, h, b);if (this.options.breaks) {
	        var g = this;g.isBroken = !0;this.val2lin = function (a) {
	          var b = a,
	              h,
	              m;for (m = 0; m < g.breakArray.length; m++) {
	            if (h = g.breakArray[m], h.to <= a) b -= h.len;else if (h.from >= a) break;else if (g.isInBreak(h, a)) {
	              b -= a - h.from;break;
	            }
	          }return b;
	        };this.lin2val = function (a) {
	          var b, h;for (h = 0; h < g.breakArray.length && !(b = g.breakArray[h], b.from >= a); h++) {
	            b.to < a ? a += b.len : g.isInBreak(b, a) && (a += b.len);
	          }return a;
	        };this.setExtremes = function (a, b, g, h, d) {
	          for (; this.isInAnyBreak(a);) {
	            a -= this.closestPointRange;
	          }for (; this.isInAnyBreak(b);) {
	            b -= this.closestPointRange;
	          }x.prototype.setExtremes.call(this, a, b, g, h, d);
	        };this.setAxisTranslation = function (a) {
	          x.prototype.setAxisTranslation.call(this, a);var b = g.options.breaks;a = [];var h = [],
	              m = 0,
	              d,
	              l,
	              n = g.userMin || g.min,
	              f = g.userMax || g.max,
	              t,
	              e;for (e in b) {
	            l = b[e], d = l.repeat || Infinity, g.isInBreak(l, n) && (n += l.to % d - n % d), g.isInBreak(l, f) && (f -= f % d - l.from % d);
	          }for (e in b) {
	            l = b[e];t = l.from;
	            for (d = l.repeat || Infinity; t - d > n;) {
	              t -= d;
	            }for (; t < n;) {
	              t += d;
	            }for (; t < f; t += d) {
	              a.push({ value: t, move: "in" }), a.push({ value: t + (l.to - l.from), move: "out", size: l.breakSize });
	            }
	          }a.sort(function (a, b) {
	            return a.value === b.value ? ("in" === a.move ? 0 : 1) - ("in" === b.move ? 0 : 1) : a.value - b.value;
	          });b = 0;t = n;for (e in a) {
	            l = a[e], b += "in" === l.move ? 1 : -1, 1 === b && "in" === l.move && (t = l.value), 0 === b && (h.push({ from: t, to: l.value, len: l.value - t - (l.size || 0) }), m += l.value - t - (l.size || 0));
	          }g.breakArray = h;q(g, "afterBreaks");g.transA *= (f - g.min) / (f - n - m);g.min = n;g.max = f;
	        };
	      }
	    });F(t.prototype, "generatePoints", function (a) {
	      a.apply(this, B(arguments));var h = this.xAxis,
	          b = this.yAxis,
	          g = this.points,
	          l,
	          n = g.length,
	          p = this.options.connectNulls,
	          m;if (h && b && (h.options.breaks || b.options.breaks)) for (; n--;) {
	        l = g[n], m = null === l.y && !1 === p, m || !h.isInAnyBreak(l.x, !0) && !b.isInAnyBreak(l.y, !0) || (g.splice(n, 1), this.data[n] && this.data[n].destroyElements());
	      }
	    });a.Series.prototype.drawBreaks = function (a, h) {
	      var b = this,
	          g = b.points,
	          l,
	          n,
	          p,
	          m;a && v(h, function (d) {
	        l = a.breakArray || [];n = a.isXAxis ? a.min : E(b.options.threshold, a.min);v(g, function (b) {
	          m = E(b["stack" + d.toUpperCase()], b[d]);v(l, function (d) {
	            p = !1;if (n < d.from && m > d.to || n > d.from && m < d.from) p = "pointBreak";else if (n < d.from && m > d.from && m < d.to || n > d.from && m > d.to && m < d.from) p = "pointInBreak";p && q(a, p, { point: b, brk: d });
	          });
	        });
	      });
	    };F(a.seriesTypes.column.prototype, "drawPoints", C);F(a.Series.prototype, "drawPoints", C);
	  })(K);(function (a) {
	    var B = a.arrayMax,
	        C = a.arrayMin,
	        E = a.Axis,
	        F = a.defaultPlotOptions,
	        v = a.defined,
	        l = a.each,
	        q = a.extend,
	        x = a.format,
	        t = a.isNumber,
	        n = a.merge,
	        h = a.pick,
	        b = a.Point,
	        g = a.Tooltip,
	        A = a.wrap,
	        u = a.Series.prototype,
	        p = u.processData,
	        m = u.generatePoints,
	        d = u.destroy,
	        r = { approximation: "average", groupPixelWidth: 2, dateTimeLabelFormats: { millisecond: ["%A, %b %e, %H:%M:%S.%L", "%A, %b %e, %H:%M:%S.%L", "-%H:%M:%S.%L"], second: ["%A, %b %e, %H:%M:%S", "%A, %b %e, %H:%M:%S", "-%H:%M:%S"], minute: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"], hour: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"], day: ["%A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"], week: ["Week from %A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"], month: ["%B %Y", "%B", "-%B %Y"], year: ["%Y", "%Y", "-%Y"] } },
	        G = { line: {}, spline: {}, area: {}, areaspline: {}, column: { approximation: "sum", groupPixelWidth: 10 }, arearange: { approximation: "range" }, areasplinerange: { approximation: "range" }, columnrange: { approximation: "range", groupPixelWidth: 10 }, candlestick: { approximation: "ohlc", groupPixelWidth: 10 }, ohlc: { approximation: "ohlc", groupPixelWidth: 5 } },
	        f = a.defaultDataGroupingUnits = [["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], ["second", [1, 2, 5, 10, 15, 30]], ["minute", [1, 2, 5, 10, 15, 30]], ["hour", [1, 2, 3, 4, 6, 8, 12]], ["day", [1]], ["week", [1]], ["month", [1, 3, 6]], ["year", null]],
	        z = { sum: function sum(a) {
	        var b = a.length,
	            c;if (!b && a.hasNulls) c = null;else if (b) for (c = 0; b--;) {
	          c += a[b];
	        }return c;
	      }, average: function average(a) {
	        var b = a.length;a = z.sum(a);t(a) && b && (a /= b);return a;
	      }, open: function open(a) {
	        return a.length ? a[0] : a.hasNulls ? null : void 0;
	      }, high: function high(a) {
	        return a.length ? B(a) : a.hasNulls ? null : void 0;
	      }, low: function low(a) {
	        return a.length ? C(a) : a.hasNulls ? null : void 0;
	      }, close: function close(a) {
	        return a.length ? a[a.length - 1] : a.hasNulls ? null : void 0;
	      }, ohlc: function ohlc(a, b, c, d) {
	        a = z.open(a);b = z.high(b);c = z.low(c);d = z.close(d);if (t(a) || t(b) || t(c) || t(d)) return [a, b, c, d];
	      }, range: function range(a, b) {
	        a = z.low(a);b = z.high(b);if (t(a) || t(b)) return [a, b];
	      } };u.groupData = function (a, b, c, d) {
	      var e = this.data,
	          f = this.options.data,
	          g = [],
	          k = [],
	          h = [],
	          l = a.length,
	          m,
	          r,
	          n = !!b,
	          w = [[], [], [], []];d = "function" === typeof d ? d : z[d];var p = this.pointArrayMap,
	          u = p && p.length,
	          q,
	          v = 0;for (q = r = 0; q <= l && !(a[q] >= c[0]); q++) {}for (q; q <= l; q++) {
	        for (; (void 0 !== c[v + 1] && a[q] >= c[v + 1] || q === l) && (m = c[v], this.dataGroupInfo = { start: r, length: w[0].length }, r = d.apply(this, w), void 0 !== r && (g.push(m), k.push(r), h.push(this.dataGroupInfo)), r = q, w[0] = [], w[1] = [], w[2] = [], w[3] = [], v += 1, q !== l);) {}if (q === l) break;if (p) {
	          m = this.cropStart + q;m = e && e[m] || this.pointClass.prototype.applyOptions.apply({ series: this }, [f[m]]);var y, x;for (y = 0; y < u; y++) {
	            x = m[p[y]], t(x) ? w[y].push(x) : null === x && (w[y].hasNulls = !0);
	          }
	        } else m = n ? b[q] : null, t(m) ? w[0].push(m) : null === m && (w[0].hasNulls = !0);
	      }return [g, k, h];
	    };u.processData = function () {
	      var a = this.chart,
	          b = this.options.dataGrouping,
	          c = !1 !== this.allowDG && b && h(b.enabled, a.options.isStock),
	          d = this.visible || !a.options.chart.ignoreHiddenSeries,
	          g;this.forceCrop = c;this.groupPixelWidth = null;this.hasProcessed = !0;if (!1 !== p.apply(this, arguments) && c && d) {
	        this.destroyGroupedData();var l = this.processedXData,
	            m = this.processedYData,
	            k = a.plotSizeX,
	            a = this.xAxis,
	            r = a.options.ordinal,
	            n = this.groupPixelWidth = a.getGroupPixelWidth && a.getGroupPixelWidth();if (n) {
	          this.isDirty = g = !0;d = a.getExtremes();c = d.min;d = d.max;r = r && a.getGroupIntervalFactor(c, d, this) || 1;k = n * (d - c) / k * r;n = a.getTimeTicks(a.normalizeTimeTickInterval(k, b.units || f), Math.min(c, l[0]), Math.max(d, l[l.length - 1]), a.options.startOfWeek, l, this.closestPointRange);l = u.groupData.apply(this, [l, m, n, b.approximation]);m = l[0];r = l[1];if (b.smoothed) {
	            b = m.length - 1;for (m[b] = Math.min(m[b], d); b-- && 0 < b;) {
	              m[b] += k / 2;
	            }m[0] = Math.max(m[0], c);
	          }this.currentDataGrouping = n.info;this.closestPointRange = n.info.totalRange;this.groupMap = l[2];v(m[0]) && m[0] < a.dataMin && (a.min === a.dataMin && (a.min = m[0]), a.dataMin = m[0]);
	          this.processedXData = m;this.processedYData = r;
	        } else this.currentDataGrouping = this.groupMap = null;this.hasGroupedData = g;
	      }
	    };u.destroyGroupedData = function () {
	      var a = this.groupedData;l(a || [], function (b, c) {
	        b && (a[c] = b.destroy ? b.destroy() : null);
	      });this.groupedData = null;
	    };u.generatePoints = function () {
	      m.apply(this);this.destroyGroupedData();this.groupedData = this.hasGroupedData ? this.points : null;
	    };A(b.prototype, "update", function (b) {
	      this.dataGroup ? a.error(24) : b.apply(this, [].slice.call(arguments, 1));
	    });A(g.prototype, "tooltipFooterHeaderFormatter", function (b, d, c) {
	      var e = d.series,
	          f = e.tooltipOptions,
	          g = e.options.dataGrouping,
	          h = f.xDateFormat,
	          k,
	          l = e.xAxis,
	          m = a.dateFormat;return l && "datetime" === l.options.type && g && t(d.key) ? (b = e.currentDataGrouping, g = g.dateTimeLabelFormats, b ? (l = g[b.unitName], 1 === b.count ? h = l[0] : (h = l[1], k = l[2])) : !h && g && (h = this.getXDateFormat(d, f, l)), h = m(h, d.key), k && (h += m(k, d.key + b.totalRange - 1)), x(f[(c ? "footer" : "header") + "Format"], { point: q(d.point, { key: h }), series: e })) : b.call(this, d, c);
	    });u.destroy = function () {
	      for (var a = this.groupedData || [], b = a.length; b--;) {
	        a[b] && a[b].destroy();
	      }d.apply(this);
	    };A(u, "setOptions", function (a, b) {
	      a = a.call(this, b);var c = this.type,
	          d = this.chart.options.plotOptions,
	          e = F[c].dataGrouping;G[c] && (e || (e = n(r, G[c])), a.dataGrouping = n(e, d.series && d.series.dataGrouping, d[c].dataGrouping, b.dataGrouping));this.chart.options.isStock && (this.requireSorting = !0);return a;
	    });A(E.prototype, "setScale", function (a) {
	      a.call(this);l(this.series, function (a) {
	        a.hasProcessed = !1;
	      });
	    });E.prototype.getGroupPixelWidth = function () {
	      var a = this.series,
	          b = a.length,
	          c,
	          d = 0,
	          f = !1,
	          g;for (c = b; c--;) {
	        (g = a[c].options.dataGrouping) && (d = Math.max(d, g.groupPixelWidth));
	      }for (c = b; c--;) {
	        (g = a[c].options.dataGrouping) && a[c].hasProcessed && (b = (a[c].processedXData || a[c].data).length, a[c].groupPixelWidth || b > this.chart.plotSizeX / d || b && g.forced) && (f = !0);
	      }return f ? d : 0;
	    };E.prototype.setDataGrouping = function (a, b) {
	      var c;b = h(b, !0);a || (a = { forced: !1, units: null });if (this instanceof E) for (c = this.series.length; c--;) {
	        this.series[c].update({ dataGrouping: a }, !1);
	      } else l(this.chart.options.series, function (b) {
	        b.dataGrouping = a;
	      }, !1);b && this.chart.redraw();
	    };
	  })(K);(function (a) {
	    var B = a.each,
	        C = a.Point,
	        E = a.seriesType,
	        F = a.seriesTypes;E("ohlc", "column", { lineWidth: 1, tooltip: { pointFormat: "<span style=\"color:{point.color}\">\u25CF</span> <b> {series.name}</b><br/>Open: {point.open}<br/>High: {point.high}<br/>Low: {point.low}<br/>Close: {point.close}<br/>" }, threshold: null, states: { hover: { lineWidth: 3 } } }, { pointArrayMap: ["open", "high", "low", "close"], toYData: function toYData(a) {
	        return [a.open, a.high, a.low, a.close];
	      }, pointValKey: "high", pointAttribs: function pointAttribs(a, l) {
	        l = F.column.prototype.pointAttribs.call(this, a, l);var q = this.options;delete l.fill;l["stroke-width"] = q.lineWidth;l.stroke = a.options.color || (a.open < a.close ? q.upColor || this.color : this.color);return l;
	      }, translate: function translate() {
	        var a = this,
	            l = a.yAxis,
	            q = !!a.modifyValue,
	            x = ["plotOpen", "yBottom", "plotClose"];F.column.prototype.translate.apply(a);B(a.points, function (t) {
	          B([t.open, t.low, t.close], function (n, h) {
	            null !== n && (q && (n = a.modifyValue(n)), t[x[h]] = l.toPixels(n, !0));
	          });
	        });
	      }, drawPoints: function drawPoints() {
	        var a = this,
	            l = a.chart;B(a.points, function (q) {
	          var v,
	              t,
	              n,
	              h,
	              b = q.graphic,
	              g,
	              A = !b;void 0 !== q.plotY && (b || (q.graphic = b = l.renderer.path().add(a.group)), b.attr(a.pointAttribs(q, q.selected && "select")), t = b.strokeWidth() % 2 / 2, g = Math.round(q.plotX) - t, n = Math.round(q.shapeArgs.width / 2), h = ["M", g, Math.round(q.yBottom), "L", g, Math.round(q.plotY)], null !== q.open && (v = Math.round(q.plotOpen) + t, h.push("M", g, v, "L", g - n, v)), null !== q.close && (v = Math.round(q.plotClose) + t, h.push("M", g, v, "L", g + n, v)), b[A ? "attr" : "animate"]({ d: h }).addClass(q.getClassName(), !0));
	        });
	      }, animate: null }, { getClassName: function getClassName() {
	        return C.prototype.getClassName.call(this) + (this.open < this.close ? " highcharts-point-up" : " highcharts-point-down");
	      } });
	  })(K);(function (a) {
	    var B = a.defaultPlotOptions,
	        C = a.each,
	        E = a.merge,
	        F = a.seriesType,
	        v = a.seriesTypes;F("candlestick", "ohlc", E(B.column, { states: { hover: { lineWidth: 2 } }, tooltip: B.ohlc.tooltip, threshold: null, lineColor: "#000000", lineWidth: 1, upColor: "#ffffff" }), { pointAttribs: function pointAttribs(a, q) {
	        var l = v.column.prototype.pointAttribs.call(this, a, q),
	            t = this.options,
	            n = a.open < a.close,
	            h = t.lineColor || this.color;l["stroke-width"] = t.lineWidth;l.fill = a.options.color || (n ? t.upColor || this.color : this.color);l.stroke = a.lineColor || (n ? t.upLineColor || h : h);q && (a = t.states[q], l.fill = a.color || l.fill, l.stroke = a.stroke || l.stroke);return l;
	      }, drawPoints: function drawPoints() {
	        var a = this,
	            q = a.chart;C(a.points, function (l) {
	          var t = l.graphic,
	              n,
	              h,
	              b,
	              g,
	              v,
	              u,
	              p,
	              m = !t;void 0 !== l.plotY && (t || (l.graphic = t = q.renderer.path().add(a.group)), t.attr(a.pointAttribs(l, l.selected && "select")).shadow(a.options.shadow), v = t.strokeWidth() % 2 / 2, u = Math.round(l.plotX) - v, n = l.plotOpen, h = l.plotClose, b = Math.min(n, h), n = Math.max(n, h), p = Math.round(l.shapeArgs.width / 2), h = Math.round(b) !== Math.round(l.plotY), g = n !== l.yBottom, b = Math.round(b) + v, n = Math.round(n) + v, v = [], v.push("M", u - p, n, "L", u - p, b, "L", u + p, b, "L", u + p, n, "Z", "M", u, b, "L", u, h ? Math.round(l.plotY) : b, "M", u, n, "L", u, g ? Math.round(l.yBottom) : n), t[m ? "attr" : "animate"]({ d: v }).addClass(l.getClassName(), !0));
	        });
	      } });
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.each,
	        E = a.merge,
	        F = a.noop,
	        v = a.Renderer,
	        l = a.seriesType,
	        q = a.seriesTypes,
	        x = a.TrackerMixin,
	        t = a.VMLRenderer,
	        n = a.SVGRenderer.prototype.symbols;l("flags", "column", { pointRange: 0, shape: "flag", stackDistance: 12, textAlign: "center", tooltip: { pointFormat: "{point.text}\x3cbr/\x3e" }, threshold: null, y: -30, fillColor: "#ffffff", lineWidth: 1, states: { hover: { lineColor: "#000000", fillColor: "#ccd6eb" } }, style: { fontSize: "11px", fontWeight: "bold" } }, { sorted: !1, noSharedTooltip: !0, allowDG: !1, takeOrdinalPosition: !1, trackerGroups: ["markerGroup"],
	      forceCrop: !0, init: a.Series.prototype.init, pointAttribs: function pointAttribs(a, b) {
	        var g = this.options,
	            h = a && a.color || this.color,
	            l = g.lineColor,
	            n = a && a.lineWidth;a = a && a.fillColor || g.fillColor;b && (a = g.states[b].fillColor, l = g.states[b].lineColor, n = g.states[b].lineWidth);return { fill: a || h, stroke: l || h, "stroke-width": n || g.lineWidth || 0 };
	      }, translate: function translate() {
	        q.column.prototype.translate.apply(this);var a = this.options,
	            b = this.chart,
	            g = this.points,
	            l = g.length - 1,
	            n,
	            p,
	            m = a.onSeries;n = m && b.get(m);var a = a.onKey || "y",
	            m = n && n.options.step,
	            d = n && n.points,
	            r = d && d.length,
	            t = this.xAxis,
	            f = t.getExtremes(),
	            v = 0,
	            e,
	            x,
	            c;if (n && n.visible && r) for (v = (n.pointXOffset || 0) + (n.barW || 0) / 2, n = n.currentDataGrouping, x = d[r - 1].x + (n ? n.totalRange : 0), g.sort(function (a, b) {
	          return a.x - b.x;
	        }), a = "plot" + a[0].toUpperCase() + a.substr(1); r-- && g[l] && !(n = g[l], e = d[r], e.x <= n.x && void 0 !== e[a] && (n.x <= x && (n.plotY = e[a], e.x < n.x && !m && (c = d[r + 1]) && void 0 !== c[a] && (n.plotY += (n.x - e.x) / (c.x - e.x) * (c[a] - e[a]))), l--, r++, 0 > l));) {}C(g, function (a, c) {
	          var d;void 0 === a.plotY && (a.x >= f.min && a.x <= f.max ? a.plotY = b.chartHeight - t.bottom - (t.opposite ? t.height : 0) + t.offset - b.plotTop : a.shapeArgs = {});a.plotX += v;(p = g[c - 1]) && p.plotX === a.plotX && (void 0 === p.stackIndex && (p.stackIndex = 0), d = p.stackIndex + 1);a.stackIndex = d;
	        });
	      }, drawPoints: function drawPoints() {
	        var a = this.points,
	            b = this.chart,
	            g = b.renderer,
	            l,
	            n,
	            p = this.options,
	            m = p.y,
	            d,
	            r,
	            q,
	            f,
	            t,
	            e,
	            v,
	            c = this.yAxis;for (r = a.length; r--;) {
	          q = a[r], v = q.plotX > this.xAxis.len, l = q.plotX, f = q.stackIndex, d = q.options.shape || p.shape, n = q.plotY, void 0 !== n && (n = q.plotY + m - (void 0 !== f && f * p.stackDistance)), t = f ? void 0 : q.plotX, e = f ? void 0 : q.plotY, f = q.graphic, void 0 !== n && 0 <= l && !v ? (f || (f = q.graphic = g.label("", null, null, d, null, null, p.useHTML).attr(this.pointAttribs(q)).css(E(p.style, q.style)).attr({ align: "flag" === d ? "left" : "center", width: p.width, height: p.height, "text-align": p.textAlign }).addClass("highcharts-point").add(this.markerGroup), f.shadow(p.shadow)), 0 < l && (l -= f.strokeWidth() % 2), f.attr({ text: q.options.title || p.title || "A", x: l, y: n, anchorX: t, anchorY: e }), q.tooltipPos = b.inverted ? [c.len + c.pos - b.plotLeft - n, this.xAxis.len - l] : [l, n]) : f && (q.graphic = f.destroy());
	        }
	      }, drawTracker: function drawTracker() {
	        var a = this.points;x.drawTrackerPoint.apply(this);C(a, function (b) {
	          var g = b.graphic;g && B(g.element, "mouseover", function () {
	            0 < b.stackIndex && !b.raised && (b._y = g.y, g.attr({ y: b._y - 8 }), b.raised = !0);C(a, function (a) {
	              a !== b && a.raised && a.graphic && (a.graphic.attr({ y: a._y }), a.raised = !1);
	            });
	          });
	        });
	      }, animate: F, buildKDTree: F, setClip: F });n.flag = function (a, b, g, l, n) {
	      return ["M", n && n.anchorX || a, n && n.anchorY || b, "L", a, b + l, a, b, a + g, b, a + g, b + l, a, b + l, "Z"];
	    };C(["circle", "square"], function (a) {
	      n[a + "pin"] = function (b, g, h, l, p) {
	        var m = p && p.anchorX;p = p && p.anchorY;"circle" === a && l > h && (b -= Math.round((l - h) / 2), h = l);b = n[a](b, g, h, l);m && p && b.push("M", m, g > p ? g : g + l, "L", m, p);return b;
	      };
	    });v === t && C(["flag", "circlepin", "squarepin"], function (a) {
	      t.prototype.symbols[a] = n[a];
	    });
	  })(K);(function (a) {
	    function B(a, b, g) {
	      this.init(a, b, g);
	    }var C = a.addEvent,
	        E = a.Axis,
	        F = a.correctFloat,
	        v = a.defaultOptions,
	        l = a.defined,
	        q = a.destroyObjectProperties,
	        x = a.doc,
	        t = a.each,
	        n = a.fireEvent,
	        h = a.hasTouch,
	        b = a.isTouchDevice,
	        g = a.merge,
	        A = a.pick,
	        u = a.removeEvent,
	        p = a.wrap,
	        m = { height: b ? 20 : 14, barBorderRadius: 0, buttonBorderRadius: 0, liveRedraw: a.svg && !b, margin: 10, minWidth: 6, step: .2, zIndex: 3, barBackgroundColor: "#cccccc", barBorderWidth: 1, barBorderColor: "#cccccc", buttonArrowColor: "#333333", buttonBackgroundColor: "#e6e6e6", buttonBorderColor: "#cccccc", buttonBorderWidth: 1, rifleColor: "#333333", trackBackgroundColor: "#f2f2f2", trackBorderColor: "#f2f2f2", trackBorderWidth: 1 };v.scrollbar = g(!0, m, v.scrollbar);B.prototype = { init: function init(a, b, h) {
	        this.scrollbarButtons = [];this.renderer = a;this.userOptions = b;this.options = g(m, b);this.chart = h;this.size = A(this.options.size, this.options.height);b.enabled && (this.render(), this.initEvents(), this.addEvents());
	      }, render: function render() {
	        var a = this.renderer,
	            b = this.options,
	            g = this.size,
	            f;this.group = f = a.g("scrollbar").attr({ zIndex: b.zIndex, translateY: -99999 }).add();this.track = a.rect().addClass("highcharts-scrollbar-track").attr({ x: 0, r: b.trackBorderRadius || 0, height: g, width: g }).add(f);this.track.attr({ fill: b.trackBackgroundColor, stroke: b.trackBorderColor,
	          "stroke-width": b.trackBorderWidth });this.trackBorderWidth = this.track.strokeWidth();this.track.attr({ y: -this.trackBorderWidth % 2 / 2 });this.scrollbarGroup = a.g().add(f);this.scrollbar = a.rect().addClass("highcharts-scrollbar-thumb").attr({ height: g, width: g, r: b.barBorderRadius || 0 }).add(this.scrollbarGroup);this.scrollbarRifles = a.path(this.swapXY(["M", -3, g / 4, "L", -3, 2 * g / 3, "M", 0, g / 4, "L", 0, 2 * g / 3, "M", 3, g / 4, "L", 3, 2 * g / 3], b.vertical)).addClass("highcharts-scrollbar-rifles").add(this.scrollbarGroup);this.scrollbar.attr({ fill: b.barBackgroundColor,
	          stroke: b.barBorderColor, "stroke-width": b.barBorderWidth });this.scrollbarRifles.attr({ stroke: b.rifleColor, "stroke-width": 1 });this.scrollbarStrokeWidth = this.scrollbar.strokeWidth();this.scrollbarGroup.translate(-this.scrollbarStrokeWidth % 2 / 2, -this.scrollbarStrokeWidth % 2 / 2);this.drawScrollbarButton(0);this.drawScrollbarButton(1);
	      }, position: function position(a, b, g, f) {
	        var d = this.options.vertical,
	            e = 0,
	            h = this.rendered ? "animate" : "attr";this.x = a;this.y = b + this.trackBorderWidth;this.width = g;this.xOffset = this.height = f;
	        this.yOffset = e;d ? (this.width = this.yOffset = g = e = this.size, this.xOffset = b = 0, this.barWidth = f - 2 * g, this.x = a += this.options.margin) : (this.height = this.xOffset = f = b = this.size, this.barWidth = g - 2 * f, this.y += this.options.margin);this.group[h]({ translateX: a, translateY: this.y });this.track[h]({ width: g, height: f });this.scrollbarButtons[1].attr({ translateX: d ? 0 : g - b, translateY: d ? f - e : 0 });
	      }, drawScrollbarButton: function drawScrollbarButton(a) {
	        var b = this.renderer,
	            d = this.scrollbarButtons,
	            f = this.options,
	            g = this.size,
	            e;e = b.g().add(this.group);d.push(e);
	        e = b.rect().addClass("highcharts-scrollbar-button").add(e);e.attr({ stroke: f.buttonBorderColor, "stroke-width": f.buttonBorderWidth, fill: f.buttonBackgroundColor });e.attr(e.crisp({ x: -.5, y: -.5, width: g + 1, height: g + 1, r: f.buttonBorderRadius }, e.strokeWidth()));e = b.path(this.swapXY(["M", g / 2 + (a ? -1 : 1), g / 2 - 3, "L", g / 2 + (a ? -1 : 1), g / 2 + 3, "L", g / 2 + (a ? 2 : -2), g / 2], f.vertical)).addClass("highcharts-scrollbar-arrow").add(d[a]);e.attr({ fill: f.buttonArrowColor });
	      }, swapXY: function swapXY(a, b) {
	        var d = a.length,
	            f;if (b) for (b = 0; b < d; b += 3) {
	          f = a[b + 1], a[b + 1] = a[b + 2], a[b + 2] = f;
	        }return a;
	      }, setRange: function setRange(a, b) {
	        var d = this.options,
	            f = d.vertical,
	            g = d.minWidth,
	            e = this.barWidth,
	            h,
	            c,
	            m = this.rendered && !this.hasDragged ? "animate" : "attr";l(e) && (a = Math.max(a, 0), h = e * a, this.calculatedWidth = c = F(e * Math.min(b, 1) - h), c < g && (h = (e - g + c) * a, c = g), g = Math.floor(h + this.xOffset + this.yOffset), e = c / 2 - .5, this.from = a, this.to = b, f ? (this.scrollbarGroup[m]({ translateY: g }), this.scrollbar[m]({ height: c }), this.scrollbarRifles[m]({ translateY: e }), this.scrollbarTop = g, this.scrollbarLeft = 0) : (this.scrollbarGroup[m]({ translateX: g }), this.scrollbar[m]({ width: c }), this.scrollbarRifles[m]({ translateX: e }), this.scrollbarLeft = g, this.scrollbarTop = 0), 12 >= c ? this.scrollbarRifles.hide() : this.scrollbarRifles.show(!0), !1 === d.showFull && (0 >= a && 1 <= b ? this.group.hide() : this.group.show()), this.rendered = !0);
	      }, initEvents: function initEvents() {
	        var a = this;a.mouseMoveHandler = function (b) {
	          var d = a.chart.pointer.normalize(b),
	              f = a.options.vertical ? "chartY" : "chartX",
	              g = a.initPositions;!a.grabbedCenter || b.touches && 0 === b.touches[0][f] || (d = a.cursorToScrollbarPosition(d)[f], f = a[f], f = d - f, a.hasDragged = !0, a.updatePosition(g[0] + f, g[1] + f), a.hasDragged && n(a, "changed", { from: a.from, to: a.to, trigger: "scrollbar", DOMType: b.type, DOMEvent: b }));
	        };a.mouseUpHandler = function (b) {
	          a.hasDragged && n(a, "changed", { from: a.from, to: a.to, trigger: "scrollbar", DOMType: b.type, DOMEvent: b });a.grabbedCenter = a.hasDragged = a.chartX = a.chartY = null;
	        };a.mouseDownHandler = function (b) {
	          b = a.chart.pointer.normalize(b);b = a.cursorToScrollbarPosition(b);a.chartX = b.chartX;a.chartY = b.chartY;a.initPositions = [a.from, a.to];a.grabbedCenter = !0;
	        };a.buttonToMinClick = function (b) {
	          var d = F(a.to - a.from) * a.options.step;a.updatePosition(F(a.from - d), F(a.to - d));n(a, "changed", { from: a.from, to: a.to, trigger: "scrollbar", DOMEvent: b });
	        };a.buttonToMaxClick = function (b) {
	          var d = (a.to - a.from) * a.options.step;a.updatePosition(a.from + d, a.to + d);n(a, "changed", { from: a.from, to: a.to, trigger: "scrollbar", DOMEvent: b });
	        };a.trackClick = function (b) {
	          var d = a.chart.pointer.normalize(b),
	              f = a.to - a.from,
	              g = a.y + a.scrollbarTop,
	              e = a.x + a.scrollbarLeft;a.options.vertical && d.chartY > g || !a.options.vertical && d.chartX > e ? a.updatePosition(a.from + f, a.to + f) : a.updatePosition(a.from - f, a.to - f);n(a, "changed", { from: a.from, to: a.to, trigger: "scrollbar", DOMEvent: b });
	        };
	      }, cursorToScrollbarPosition: function cursorToScrollbarPosition(a) {
	        var b = this.options,
	            b = b.minWidth > this.calculatedWidth ? b.minWidth : 0;return { chartX: (a.chartX - this.x - this.xOffset) / (this.barWidth - b), chartY: (a.chartY - this.y - this.yOffset) / (this.barWidth - b) };
	      }, updatePosition: function updatePosition(a, b) {
	        1 < b && (a = F(1 - F(b - a)), b = 1);0 > a && (b = F(b - a), a = 0);this.from = a;this.to = b;
	      }, update: function update(a) {
	        this.destroy();
	        this.init(this.chart.renderer, g(!0, this.options, a), this.chart);
	      }, addEvents: function addEvents() {
	        var a = this.options.inverted ? [1, 0] : [0, 1],
	            b = this.scrollbarButtons,
	            g = this.scrollbarGroup.element,
	            f = this.mouseDownHandler,
	            l = this.mouseMoveHandler,
	            e = this.mouseUpHandler,
	            a = [[b[a[0]].element, "click", this.buttonToMinClick], [b[a[1]].element, "click", this.buttonToMaxClick], [this.track.element, "click", this.trackClick], [g, "mousedown", f], [x, "mousemove", l], [x, "mouseup", e]];h && a.push([g, "touchstart", f], [x, "touchmove", l], [x, "touchend", e]);t(a, function (a) {
	          C.apply(null, a);
	        });this._events = a;
	      }, removeEvents: function removeEvents() {
	        t(this._events, function (a) {
	          u.apply(null, a);
	        });this._events = void 0;
	      }, destroy: function destroy() {
	        var a = this.chart.scroller;this.removeEvents();t(["track", "scrollbarRifles", "scrollbar", "scrollbarGroup", "group"], function (a) {
	          this[a] && this[a].destroy && (this[a] = this[a].destroy());
	        }, this);a && (a.scrollbar = null, q(a.scrollbarButtons));
	      } };p(E.prototype, "init", function (a) {
	      var b = this;a.apply(b, [].slice.call(arguments, 1));b.options.scrollbar && b.options.scrollbar.enabled && (b.options.scrollbar.vertical = !b.horiz, b.options.startOnTick = b.options.endOnTick = !1, b.scrollbar = new B(b.chart.renderer, b.options.scrollbar, b.chart), C(b.scrollbar, "changed", function (a) {
	        var d = Math.min(A(b.options.min, b.min), b.min, b.dataMin),
	            g = Math.max(A(b.options.max, b.max), b.max, b.dataMax) - d,
	            e;b.horiz && !b.reversed || !b.horiz && b.reversed ? (e = d + g * this.to, d += g * this.from) : (e = d + g * (1 - this.from), d += g * (1 - this.to));b.setExtremes(d, e, !0, !1, a);
	      }));
	    });p(E.prototype, "render", function (a) {
	      var b = Math.min(A(this.options.min, this.min), this.min, this.dataMin),
	          d = Math.max(A(this.options.max, this.max), this.max, this.dataMax),
	          f = this.scrollbar,
	          g;a.apply(this, [].slice.call(arguments, 1));f && (this.horiz ? f.position(this.left, this.top + this.height + this.offset + 2 + (this.opposite ? 0 : this.axisTitleMargin), this.width, this.height) : f.position(this.left + this.width + 2 + this.offset + (this.opposite ? this.axisTitleMargin : 0), this.top, this.width, this.height), isNaN(b) || isNaN(d) || !l(this.min) || !l(this.max) ? f.setRange(0, 0) : (g = (this.min - b) / (d - b), b = (this.max - b) / (d - b), this.horiz && !this.reversed || !this.horiz && this.reversed ? f.setRange(g, b) : f.setRange(1 - b, 1 - g)));
	    });p(E.prototype, "getOffset", function (a) {
	      var b = this.horiz ? 2 : 1,
	          d = this.scrollbar;a.apply(this, [].slice.call(arguments, 1));d && (this.chart.axisOffset[b] += d.size + d.options.margin);
	    });p(E.prototype, "destroy", function (a) {
	      this.scrollbar && (this.scrollbar = this.scrollbar.destroy());a.apply(this, [].slice.call(arguments, 1));
	    });a.Scrollbar = B;
	  })(K);(function (a) {
	    function B(a) {
	      this.init(a);
	    }var C = a.addEvent,
	        E = a.Axis,
	        F = a.Chart,
	        v = a.color,
	        l = a.defaultOptions,
	        q = a.defined,
	        x = a.destroyObjectProperties,
	        t = a.doc,
	        n = a.each,
	        h = a.erase,
	        b = a.extend,
	        g = a.grep,
	        A = a.hasTouch,
	        u = a.isNumber,
	        p = a.isObject,
	        m = a.isTouchDevice,
	        d = a.merge,
	        r = a.pick,
	        G = a.removeEvent,
	        f = a.Scrollbar,
	        z = a.Series,
	        e = a.seriesTypes,
	        y = a.wrap,
	        c = [].concat(a.defaultDataGroupingUnits),
	        w = function w(a) {
	      var b = g(arguments, u);if (b.length) return Math[a].apply(0, b);
	    };c[4] = ["day", [1, 2, 3, 4]];c[5] = ["week", [1, 2, 3]];e = void 0 === e.areaspline ? "line" : "areaspline";b(l, { navigator: { height: 40, margin: 25,
	        maskInside: !0, handles: { backgroundColor: "#f2f2f2", borderColor: "#999999" }, maskFill: v("#6685c2").setOpacity(.3).get(), outlineColor: "#cccccc", outlineWidth: 1, series: { type: e, color: "#335cad", fillOpacity: .05, lineWidth: 1, compare: null, dataGrouping: { approximation: "average", enabled: !0, groupPixelWidth: 2, smoothed: !0, units: c }, dataLabels: { enabled: !1, zIndex: 2 }, id: "highcharts-navigator-series", className: "highcharts-navigator-series", lineColor: null, marker: { enabled: !1 }, pointRange: 0, shadow: !1, threshold: null }, xAxis: { className: "highcharts-navigator-xaxis",
	          tickLength: 0, lineWidth: 0, gridLineColor: "#e6e6e6", gridLineWidth: 1, tickPixelInterval: 200, labels: { align: "left", style: { color: "#999999" }, x: 3, y: -4 }, crosshair: !1 }, yAxis: { className: "highcharts-navigator-yaxis", gridLineWidth: 0, startOnTick: !1, endOnTick: !1, minPadding: .1, maxPadding: .1, labels: { enabled: !1 }, crosshair: !1, title: { text: null }, tickLength: 0, tickWidth: 0 } } });B.prototype = { drawHandle: function drawHandle(a, b) {
	        var c = this.chart.renderer,
	            d = this.handles;this.rendered || (d[b] = c.path(["M", -4.5, .5, "L", 3.5, .5, 3.5, 15.5, -4.5, 15.5, -4.5, .5, "M", -1.5, 4, "L", -1.5, 12, "M", .5, 4, "L", .5, 12]).attr({ zIndex: 10 - b }).addClass("highcharts-navigator-handle highcharts-navigator-handle-" + ["left", "right"][b]).add(), c = this.navigatorOptions.handles, d[b].attr({ fill: c.backgroundColor, stroke: c.borderColor, "stroke-width": 1 }).css({ cursor: "ew-resize" }));d[b][this.rendered && !this.hasDragged ? "animate" : "attr"]({ translateX: Math.round(this.scrollerLeft + this.scrollbarHeight + parseInt(a, 10)), translateY: Math.round(this.top + this.height / 2 - 8) });
	      }, update: function update(a) {
	        this.destroy();
	        d(!0, this.chart.options.navigator, this.options, a);this.init(this.chart);
	      }, render: function render(a, b, c, d) {
	        var e = this.chart,
	            f = e.renderer,
	            g,
	            k,
	            h,
	            l;l = this.scrollbarHeight;var m = this.xAxis,
	            n = this.navigatorOptions,
	            p = n.maskInside,
	            w = this.height,
	            t = this.top,
	            v = this.navigatorEnabled,
	            D = this.outlineHeight,
	            x;x = this.rendered;if (u(a) && u(b) && (!this.hasDragged || q(c)) && (this.navigatorLeft = g = r(m.left, e.plotLeft + l), this.navigatorWidth = k = r(m.len, e.plotWidth - 2 * l), this.scrollerLeft = h = g - l, this.scrollerWidth = l = l = k + 2 * l, c = r(c, m.translate(a)), d = r(d, m.translate(b)), u(c) && Infinity !== Math.abs(c) || (c = 0, d = l), !(m.translate(d, !0) - m.translate(c, !0) < e.xAxis[0].minRange))) {
	          this.zoomedMax = Math.min(Math.max(c, d, 0), k);this.zoomedMin = Math.min(Math.max(this.fixedWidth ? this.zoomedMax - this.fixedWidth : Math.min(c, d), 0), k);this.range = this.zoomedMax - this.zoomedMin;b = Math.round(this.zoomedMax);a = Math.round(this.zoomedMin);!x && v && (this.navigatorGroup = c = f.g("navigator").attr({ zIndex: 3 }).add(), this.leftShade = f.rect().addClass("highcharts-navigator-mask" + (p ? "-inside" : "")).attr({ fill: n.maskFill }).css(p && { cursor: "ew-resize" }).add(c), p || (this.rightShade = f.rect().addClass("highcharts-navigator-mask").attr({ fill: n.maskFill }).add(c)), this.outline = f.path().addClass("highcharts-navigator-outline").attr({ "stroke-width": n.outlineWidth, stroke: n.outlineColor }).add(c));if (v) {
	            f = x && !this.hasDragged ? "animate" : "attr";p = this.outline.strokeWidth();p /= 2;x = t + p;this.leftShade[f](n.maskInside ? { x: g + a, y: t, width: b - a, height: w } : { x: g, y: t, width: a, height: w });if (this.rightShade) this.rightShade[f]({ x: g + b, y: t, width: k - b, height: w });this.outline[f]({ d: ["M", h, x, "L", g + a - p, x, g + a - p, x + D, "L", g + b - p, x + D, "L", g + b - p, x, h + l, x].concat(n.maskInside ? ["M", g + a + p, x, "L", g + b - p, x] : []) });this.drawHandle(a + p, 0);this.drawHandle(b + p, 1);
	          }this.scrollbar && (this.scrollbar.hasDragged = this.hasDragged, this.scrollbar.position(this.scrollerLeft, this.top + (v ? this.height : -this.scrollbarHeight), this.scrollerWidth, this.scrollbarHeight), this.scrollbar.setRange(a / k, b / k));this.rendered = !0;
	        }
	      }, addEvents: function addEvents() {
	        var a = this.chart,
	            b = a.container,
	            c = this.mouseDownHandler,
	            d = this.mouseMoveHandler,
	            e = this.mouseUpHandler,
	            f;f = [[b, "mousedown", c], [b, "mousemove", d], [t, "mouseup", e]];A && f.push([b, "touchstart", c], [b, "touchmove", d], [t, "touchend", e]);n(f, function (a) {
	          C.apply(null, a);
	        });this._events = f;this.series && this.series[0] && C(this.series[0].xAxis, "foundExtremes", function () {
	          a.scroller.modifyNavigatorAxisExtremes();
	        });C(a, "redraw", function () {
	          var a = this.scroller,
	              b = a && (a.baseSeries && a.baseSeries[0] && a.baseSeries[0].xAxis || a.scrollbar && this.xAxis[0]);b && a.render(b.min, b.max);
	        });
	      }, removeEvents: function removeEvents() {
	        this._events && (n(this._events, function (a) {
	          G.apply(null, a);
	        }), this._events = void 0);this.removeBaseSeriesEvents();
	      }, removeBaseSeriesEvents: function removeBaseSeriesEvents() {
	        var a = this.baseSeries || [];this.navigatorEnabled && a[0] && !1 !== this.navigatorOptions.adaptToUpdatedData && (n(a, function (a) {
	          G(a, "updatedData", this.updatedDataHandler);
	        }, this), a[0].xAxis && G(a[0].xAxis, "foundExtremes", this.modifyBaseAxisExtremes));
	      }, init: function init(a) {
	        var b = a.options,
	            c = b.navigator,
	            e = c.enabled,
	            b = b.scrollbar,
	            g = b.enabled,
	            h = e ? c.height : 0,
	            l = g ? b.height : 0;this.handles = [];this.scrollbarButtons = [];this.elementsToDestroy = [];this.chart = a;this.setBaseSeries();this.height = h;this.scrollbarHeight = l;this.scrollbarEnabled = g;this.navigatorEnabled = e;this.navigatorOptions = c;this.scrollbarOptions = b;this.outlineHeight = h + l;var n = this,
	            p,
	            r,
	            e = n.baseSeries;n.mouseDownHandler = function (b) {
	          b = a.pointer.normalize(b);var c = n.zoomedMin,
	              d = n.zoomedMax,
	              e = n.top,
	              f = n.scrollerLeft,
	              g = n.scrollerWidth,
	              k = n.navigatorLeft,
	              l = n.navigatorWidth,
	              w = n.scrollbarPad || 0,
	              q = n.range,
	              t = b.chartX,
	              u = b.chartY;b = a.xAxis[0];var v,
	              x = m ? 10 : 7;u > e && u < e + h && (Math.abs(t - c - k) < x ? (n.grabbedLeft = !0, n.otherHandlePos = d, n.fixedExtreme = b.max, a.fixedRange = null) : Math.abs(t - d - k) < x ? (n.grabbedRight = !0, n.otherHandlePos = c, n.fixedExtreme = b.min, a.fixedRange = null) : t > k + c - w && t < k + d + w ? (n.grabbedCenter = t, n.fixedWidth = q, r = t - c) : t > f && t < f + g && (d = t - k - q / 2, 0 > d ? d = 0 : d + q >= l && (d = l - q, v = n.getUnionExtremes().dataMax), d !== c && (n.fixedWidth = q, c = p.toFixedRange(d, d + q, null, v), b.setExtremes(c.min, c.max, !0, null, { trigger: "navigator" }))));
	        };
	        n.mouseMoveHandler = function (b) {
	          var c = n.scrollbarHeight,
	              d = n.navigatorLeft,
	              e = n.navigatorWidth,
	              f = n.scrollerLeft,
	              g = n.scrollerWidth,
	              k = n.range,
	              h;b.touches && 0 === b.touches[0].pageX || (b = a.pointer.normalize(b), h = b.chartX, h < d ? h = d : h > f + g - c && (h = f + g - c), n.grabbedLeft ? (n.hasDragged = !0, n.render(0, 0, h - d, n.otherHandlePos)) : n.grabbedRight ? (n.hasDragged = !0, n.render(0, 0, n.otherHandlePos, h - d)) : n.grabbedCenter && (n.hasDragged = !0, h < r ? h = r : h > e + r - k && (h = e + r - k), n.render(0, 0, h - r, h - r + k)), n.hasDragged && n.scrollbar && n.scrollbar.options.liveRedraw && (b.DOMType = b.type, setTimeout(function () {
	            n.mouseUpHandler(b);
	          }, 0)));
	        };n.mouseUpHandler = function (b) {
	          var c,
	              d,
	              e = b.DOMEvent || b;if (n.hasDragged || "scrollbar" === b.trigger) n.zoomedMin === n.otherHandlePos ? c = n.fixedExtreme : n.zoomedMax === n.otherHandlePos && (d = n.fixedExtreme), n.zoomedMax === n.navigatorWidth && (d = n.getUnionExtremes().dataMax), c = p.toFixedRange(n.zoomedMin, n.zoomedMax, c, d), q(c.min) && a.xAxis[0].setExtremes(c.min, c.max, !0, n.hasDragged ? !1 : null, { trigger: "navigator", triggerOp: "navigator-drag", DOMEvent: e });
	          "mousemove" !== b.DOMType && (n.grabbedLeft = n.grabbedRight = n.grabbedCenter = n.fixedWidth = n.fixedExtreme = n.otherHandlePos = n.hasDragged = r = null);
	        };var b = a.xAxis.length,
	            g = a.yAxis.length,
	            t = e && e[0] && e[0].xAxis || a.xAxis[0];a.extraBottomMargin = n.outlineHeight + c.margin;a.isDirtyBox = !0;n.navigatorEnabled ? (n.xAxis = p = new E(a, d({ offset: 0 }, { breaks: t.options.breaks, ordinal: t.options.ordinal }, c.xAxis, { id: "navigator-x-axis", yAxis: "navigator-y-axis", isX: !0, type: "datetime", index: b, height: h, offsetLeft: l, offsetRight: -l, keepOrdinalPadding: !0,
	          startOnTick: !1, endOnTick: !1, minPadding: 0, maxPadding: 0, zoomEnabled: !1 })), n.yAxis = new E(a, d(c.yAxis, { id: "navigator-y-axis", alignTicks: !1, height: h, offset: 0, index: g, zoomEnabled: !1 })), e || c.series.data ? n.addBaseSeries() : 0 === a.series.length && y(a, "redraw", function (b, c) {
	          0 < a.series.length && !n.series && (n.setBaseSeries(), a.redraw = b);b.call(a, c);
	        })) : n.xAxis = p = { translate: function translate(b, c) {
	            var d = a.xAxis[0],
	                e = d.getExtremes(),
	                f = a.plotWidth - 2 * l,
	                g = w("min", d.options.min, e.dataMin),
	                d = w("max", d.options.max, e.dataMax) - g;return c ? b * d / f + g : f * (b - g) / d;
	          }, toFixedRange: E.prototype.toFixedRange, fake: !0 };a.options.scrollbar.enabled && (a.scrollbar = n.scrollbar = new f(a.renderer, d(a.options.scrollbar, { margin: n.navigatorEnabled ? 0 : 10 }), a), C(n.scrollbar, "changed", function (b) {
	          var c = n.navigatorWidth,
	              d = c * this.to,
	              c = c * this.from;n.hasDragged = n.scrollbar.hasDragged;n.render(0, 0, c, d);(a.options.scrollbar.liveRedraw || "mousemove" !== b.DOMType) && setTimeout(function () {
	            n.mouseUpHandler(b);
	          });
	        }));n.addBaseSeriesEvents();n.addEvents();
	      }, getUnionExtremes: function getUnionExtremes(a) {
	        var b = this.chart.xAxis[0],
	            c = this.xAxis,
	            d = c.options,
	            e = b.options,
	            f;a && null === b.dataMin || (f = { dataMin: r(d && d.min, w("min", e.min, b.dataMin, c.dataMin, c.min)), dataMax: r(d && d.max, w("max", e.max, b.dataMax, c.dataMax, c.max)) });return f;
	      }, setBaseSeries: function setBaseSeries(a) {
	        var b = this.chart,
	            c = this.baseSeries = [];a = a || b.options && b.options.navigator.baseSeries || 0;this.series && (this.removeBaseSeriesEvents(), n(this.series, function (a) {
	          a.destroy();
	        }));n(b.series || [], function (b, d) {
	          (b.options.showInNavigator || (d === a || b.options.id === a) && !1 !== b.options.showInNavigator) && c.push(b);
	        });this.xAxis && !this.xAxis.fake && this.addBaseSeries();
	      }, addBaseSeries: function addBaseSeries() {
	        var a = this,
	            b = a.chart,
	            c = a.series = [],
	            e = a.baseSeries,
	            f,
	            g,
	            h = a.navigatorOptions.series,
	            l,
	            m = { enableMouseTracking: !1, group: "nav", padXAxis: !1, xAxis: "navigator-x-axis", yAxis: "navigator-y-axis", showInLegend: !1, stacking: !1, isInternal: !0, visible: !0 };e ? n(e, function (e, k) {
	          m.name = "Navigator " + (k + 1);f = e.options || {};l = f.navigatorOptions || {};g = d(f, m, h, l);k = l.data || h.data;a.hasNavigatorData = a.hasNavigatorData || !!k;g.data = k || f.data && f.data.slice(0);e.navigatorSeries = b.initSeries(g);c.push(e.navigatorSeries);
	        }) : (g = d(h, m), g.data = h.data, a.hasNavigatorData = !!g.data, c.push(b.initSeries(g)));this.addBaseSeriesEvents();
	      }, addBaseSeriesEvents: function addBaseSeriesEvents() {
	        var a = this,
	            c = a.baseSeries || [];c[0] && c[0].xAxis && C(c[0].xAxis, "foundExtremes", this.modifyBaseAxisExtremes);!1 !== this.navigatorOptions.adaptToUpdatedData && n(c, function (c) {
	          c.xAxis && (C(c, "updatedData", this.updatedDataHandler), c.userOptions.events = b(c.userOptions.event, { updatedData: this.updatedDataHandler }));C(c, "remove", function () {
	            this.navigatorSeries && (h(a.series, this.navigatorSeries), this.navigatorSeries.remove(), delete this.navigatorSeries);
	          });
	        }, this);
	      }, modifyNavigatorAxisExtremes: function modifyNavigatorAxisExtremes() {
	        var a = this.xAxis,
	            b;a.getExtremes && (!(b = this.getUnionExtremes(!0)) || b.dataMin === a.min && b.dataMax === a.max || (a.min = b.dataMin, a.max = b.dataMax));
	      }, modifyBaseAxisExtremes: function modifyBaseAxisExtremes() {
	        var a = this.chart.scroller,
	            b = this.getExtremes(),
	            c = b.dataMin,
	            d = b.dataMax,
	            b = b.max - b.min,
	            e = a.stickToMin,
	            f = a.stickToMax,
	            g,
	            h,
	            l = a.series && a.series[0],
	            m = !!this.setExtremes;this.eventArgs && "rangeSelectorButton" === this.eventArgs.trigger || (e && (h = c, g = h + b), f && (g = d, e || (h = Math.max(g - b, l && l.xData ? l.xData[0] : -Number.MAX_VALUE))), m && (e || f) && u(h) && (this.min = this.userMin = h, this.max = this.userMax = g));a.stickToMin = a.stickToMax = null;
	      }, updatedDataHandler: function updatedDataHandler() {
	        var a = this.chart.scroller,
	            b = this.navigatorSeries;a.stickToMin = u(this.xAxis.min) && this.xAxis.min <= this.xData[0];a.stickToMax = Math.round(a.zoomedMax) >= Math.round(a.navigatorWidth);
	        b && !a.hasNavigatorData && (b.options.pointStart = this.xData[0], b.setData(this.options.data, !1, null, !1));
	      }, destroy: function destroy() {
	        this.removeEvents();this.xAxis && (h(this.chart.xAxis, this.xAxis), h(this.chart.axes, this.xAxis));this.yAxis && (h(this.chart.yAxis, this.yAxis), h(this.chart.axes, this.yAxis));n(this.series || [], function (a) {
	          a.destroy && a.destroy();
	        });n("series xAxis yAxis leftShade rightShade outline scrollbarTrack scrollbarRifles scrollbarGroup scrollbar navigatorGroup rendered".split(" "), function (a) {
	          this[a] && this[a].destroy && this[a].destroy();this[a] = null;
	        }, this);n([this.handles, this.elementsToDestroy], function (a) {
	          x(a);
	        }, this);
	      } };a.Navigator = B;y(E.prototype, "zoom", function (a, b, c) {
	      var d = this.chart,
	          e = d.options,
	          f = e.chart.zoomType,
	          g = e.navigator,
	          e = e.rangeSelector,
	          h;this.isXAxis && (g && g.enabled || e && e.enabled) && ("x" === f ? d.resetZoomButton = "blocked" : "y" === f ? h = !1 : "xy" === f && (d = this.previousZoom, q(b) ? this.previousZoom = [this.min, this.max] : d && (b = d[0], c = d[1], delete this.previousZoom)));return void 0 !== h ? h : a.call(this, b, c);
	    });y(F.prototype, "init", function (a, b, c) {
	      C(this, "beforeRender", function () {
	        var a = this.options;if (a.navigator.enabled || a.scrollbar.enabled) this.scroller = this.navigator = new B(this);
	      });a.call(this, b, c);
	    });y(F.prototype, "getMargins", function (a) {
	      var b = this.legend,
	          c = b.options,
	          d = this.scroller,
	          e,
	          f;a.apply(this, [].slice.call(arguments, 1));d && (e = d.xAxis, f = d.yAxis, d.top = d.navigatorOptions.top || this.chartHeight - d.height - d.scrollbarHeight - this.spacing[2] - ("bottom" === c.verticalAlign && c.enabled && !c.floating ? b.legendHeight + r(c.margin, 10) : 0), e && f && (e.options.top = f.options.top = d.top, e.setAxisSize(), f.setAxisSize()));
	    });y(z.prototype, "addPoint", function (b, c, d, e, f) {
	      var g = this.options.turboThreshold;g && this.xData.length > g && p(c, !0) && this.chart.scroller && a.error(20, !0);b.call(this, c, d, e, f);
	    });y(F.prototype, "addSeries", function (a, b, c, d) {
	      a = a.call(this, b, !1, d);this.scroller && this.scroller.setBaseSeries();r(c, !0) && this.redraw();return a;
	    });y(z.prototype, "update", function (a, b, c) {
	      a.call(this, b, !1);this.chart.scroller && this.chart.scroller.setBaseSeries();
	      r(c, !0) && this.chart.redraw();
	    });
	  })(K);(function (a) {
	    function B(a) {
	      this.init(a);
	    }var C = a.addEvent,
	        E = a.Axis,
	        F = a.Chart,
	        v = a.css,
	        l = a.createElement,
	        q = a.dateFormat,
	        x = a.defaultOptions,
	        t = x.global.useUTC,
	        n = a.defined,
	        h = a.destroyObjectProperties,
	        b = a.discardElement,
	        g = a.each,
	        A = a.extend,
	        u = a.fireEvent,
	        p = a.Date,
	        m = a.isNumber,
	        d = a.merge,
	        r = a.pick,
	        G = a.pInt,
	        f = a.splat,
	        z = a.wrap;A(x, { rangeSelector: { buttonTheme: { "stroke-width": 0, width: 28, height: 18, padding: 2, zIndex: 7 }, height: 35, inputPosition: { align: "right" }, labelStyle: { color: "#666666" } } });
	    x.lang = d(x.lang, { rangeSelectorZoom: "Zoom", rangeSelectorFrom: "From", rangeSelectorTo: "To" });B.prototype = { clickButton: function clickButton(a, b) {
	        var c = this,
	            d = c.chart,
	            e = c.buttonOptions[a],
	            h = d.xAxis[0],
	            l = d.scroller && d.scroller.getUnionExtremes() || h || {},
	            k = l.dataMin,
	            n = l.dataMax,
	            p,
	            q = h && Math.round(Math.min(h.max, r(n, h.max))),
	            u = e.type,
	            v,
	            l = e._range,
	            x,
	            y,
	            z,
	            A = e.dataGrouping;if (null !== k && null !== n) {
	          d.fixedRange = l;A && (this.forcedDataGrouping = !0, E.prototype.setDataGrouping.call(h || { chart: this.chart }, A, !1));if ("month" === u || "year" === u) h ? (u = { range: e, max: q, dataMin: k, dataMax: n }, p = h.minFromRange.call(u), m(u.newMax) && (q = u.newMax)) : l = e;else if (l) p = Math.max(q - l, k), q = Math.min(p + l, n);else if ("ytd" === u) {
	            if (h) void 0 === n && (k = Number.MAX_VALUE, n = Number.MIN_VALUE, g(d.series, function (a) {
	              a = a.xData;k = Math.min(a[0], k);n = Math.max(a[a.length - 1], n);
	            }), b = !1), q = c.getYTDExtremes(n, k, t), p = x = q.min, q = q.max;else {
	              C(d, "beforeRender", function () {
	                c.clickButton(a);
	              });return;
	            }
	          } else "all" === u && h && (p = k, q = n);c.setSelected(a);h ? h.setExtremes(p, q, r(b, 1), null, { trigger: "rangeSelectorButton",
	            rangeSelectorButton: e }) : (v = f(d.options.xAxis)[0], z = v.range, v.range = l, y = v.min, v.min = x, C(d, "load", function () {
	            v.range = z;v.min = y;
	          }));
	        }
	      }, setSelected: function setSelected(a) {
	        this.selected = this.options.selected = a;
	      }, defaultButtons: [{ type: "month", count: 1, text: "1m" }, { type: "month", count: 3, text: "3m" }, { type: "month", count: 6, text: "6m" }, { type: "ytd", text: "YTD" }, { type: "year", count: 1, text: "1y" }, { type: "all", text: "All" }], init: function init(a) {
	        var b = this,
	            c = a.options.rangeSelector,
	            d = c.buttons || [].concat(b.defaultButtons),
	            e = c.selected,
	            f = function f() {
	          var a = b.minInput,
	              c = b.maxInput;a && a.blur && u(a, "blur");c && c.blur && u(c, "blur");
	        };b.chart = a;b.options = c;b.buttons = [];a.extraTopMargin = c.height;b.buttonOptions = d;this.unMouseDown = C(a.container, "mousedown", f);this.unResize = C(a, "resize", f);g(d, b.computeButtonRange);void 0 !== e && d[e] && this.clickButton(e, !1);C(a, "load", function () {
	          C(a.xAxis[0], "setExtremes", function (c) {
	            this.max - this.min !== a.fixedRange && "rangeSelectorButton" !== c.trigger && "updatedData" !== c.trigger && b.forcedDataGrouping && this.setDataGrouping(!1, !1);
	          });
	        });
	      },
	      updateButtonStates: function updateButtonStates() {
	        var a = this.chart,
	            b = a.xAxis[0],
	            c = Math.round(b.max - b.min),
	            d = !b.hasVisibleSeries,
	            a = a.scroller && a.scroller.getUnionExtremes() || b,
	            f = a.dataMin,
	            h = a.dataMax,
	            a = this.getYTDExtremes(h, f, t),
	            l = a.min,
	            k = a.max,
	            n = this.selected,
	            p = m(n),
	            q = this.options.allButtonsEnabled,
	            r = this.buttons;g(this.buttonOptions, function (a, e) {
	          var g = a._range,
	              m = a.type,
	              t = a.count || 1;a = r[e];var w = 0;e = e === n;var u = g > h - f,
	              v = g < b.minRange,
	              x = !1,
	              y = !1,
	              g = g === c;("month" === m || "year" === m) && c >= 864E5 * { month: 28, year: 365 }[m] * t && c <= 864E5 * { month: 31, year: 366 }[m] * t ? g = !0 : "ytd" === m ? (g = k - l === c, x = !e) : "all" === m && (g = b.max - b.min >= h - f, y = !e && p && g);m = !q && (u || v || y || d);g = e && g || g && !p && !x;m ? w = 3 : g && (p = !0, w = 2);a.state !== w && a.setState(w);
	        });
	      }, computeButtonRange: function computeButtonRange(a) {
	        var b = a.type,
	            c = a.count || 1,
	            d = { millisecond: 1, second: 1E3, minute: 6E4, hour: 36E5, day: 864E5, week: 6048E5 };if (d[b]) a._range = d[b] * c;else if ("month" === b || "year" === b) a._range = 864E5 * { month: 30, year: 365 }[b] * c;
	      }, setInputValue: function setInputValue(a, b) {
	        var c = this.chart.options.rangeSelector,
	            d = this[a + "Input"];n(b) && (d.previousValue = d.HCTime, d.HCTime = b);d.value = q(c.inputEditDateFormat || "%Y-%m-%d", d.HCTime);this[a + "DateBox"].attr({ text: q(c.inputDateFormat || "%b %e, %Y", d.HCTime) });
	      }, showInput: function showInput(a) {
	        var b = this.inputGroup,
	            c = this[a + "DateBox"];v(this[a + "Input"], { left: b.translateX + c.x + "px", top: b.translateY + "px", width: c.width - 2 + "px", height: c.height - 2 + "px", border: "2px solid silver" });
	      }, hideInput: function hideInput(a) {
	        v(this[a + "Input"], { border: 0, width: "1px", height: "1px" });this.setInputValue(a);
	      }, drawInput: function drawInput(a) {
	        function b() {
	          var a = p.value,
	              b = (h.inputDateParser || Date.parse)(a),
	              d = e.xAxis[0],
	              f = e.scroller && e.scroller.xAxis ? e.scroller.xAxis : d,
	              g = f.dataMin,
	              f = f.dataMax;b !== p.previousValue && (p.previousValue = b, m(b) || (b = a.split("-"), b = Date.UTC(G(b[0]), G(b[1]) - 1, G(b[2]))), m(b) && (t || (b += 6E4 * new Date().getTimezoneOffset()), n ? b > c.maxInput.HCTime ? b = void 0 : b < g && (b = g) : b < c.minInput.HCTime ? b = void 0 : b > f && (b = f), void 0 !== b && d.setExtremes(n ? b : d.min, n ? d.max : b, void 0, void 0, { trigger: "rangeSelectorInput" })));
	        }var c = this,
	            e = c.chart,
	            f = e.renderer.style || {},
	            g = e.renderer,
	            h = e.options.rangeSelector,
	            k = c.div,
	            n = "min" === a,
	            p,
	            q,
	            r = this.inputGroup;this[a + "Label"] = q = g.label(x.lang[n ? "rangeSelectorFrom" : "rangeSelectorTo"], this.inputGroup.offset).addClass("highcharts-range-label").attr({ padding: 2 }).add(r);r.offset += q.width + 5;this[a + "DateBox"] = g = g.label("", r.offset).addClass("highcharts-range-input").attr({ padding: 2, width: h.inputBoxWidth || 90, height: h.inputBoxHeight || 17, stroke: h.inputBoxBorderColor || "#cccccc", "stroke-width": 1, "text-align": "center" }).on("click", function () {
	          c.showInput(a);
	          c[a + "Input"].focus();
	        }).add(r);r.offset += g.width + (n ? 10 : 0);this[a + "Input"] = p = l("input", { name: a, className: "highcharts-range-selector", type: "text" }, { top: e.plotTop + "px" }, k);q.css(d(f, h.labelStyle));g.css(d({ color: "#333333" }, f, h.inputStyle));v(p, A({ position: "absolute", border: 0, width: "1px", height: "1px", padding: 0, textAlign: "center", fontSize: f.fontSize, fontFamily: f.fontFamily, left: "-9em" }, h.inputStyle));p.onfocus = function () {
	          c.showInput(a);
	        };p.onblur = function () {
	          c.hideInput(a);
	        };p.onchange = b;p.onkeypress = function (a) {
	          13 === a.keyCode && b();
	        };
	      }, getPosition: function getPosition() {
	        var a = this.chart,
	            b = a.options.rangeSelector,
	            a = r((b.buttonPosition || {}).y, a.plotTop - a.axisOffset[0] - b.height);return { buttonTop: a, inputTop: a - 10 };
	      }, getYTDExtremes: function getYTDExtremes(a, b, c) {
	        var d = new p(a),
	            e = d[p.hcGetFullYear]();c = c ? p.UTC(e, 0, 1) : +new p(e, 0, 1);b = Math.max(b || 0, c);d = d.getTime();return { max: Math.min(a || d, d), min: b };
	      }, render: function render(a, b) {
	        var c = this,
	            d = c.chart,
	            e = d.renderer,
	            f = d.container,
	            h = d.options,
	            k = h.exporting && !1 !== h.exporting.enabled && h.navigation && h.navigation.buttonOptions,
	            m = h.rangeSelector,
	            p = c.buttons,
	            h = x.lang,
	            q = c.div,
	            q = c.inputGroup,
	            t = m.buttonTheme,
	            u = m.buttonPosition || {},
	            v = m.inputEnabled,
	            y = t && t.states,
	            z = d.plotLeft,
	            B,
	            C = this.getPosition(),
	            E = c.group,
	            F = c.rendered;!1 !== m.enabled && (F || (c.group = E = e.g("range-selector-buttons").add(), c.zoomText = e.text(h.rangeSelectorZoom, r(u.x, z), 15).css(m.labelStyle).add(E), B = r(u.x, z) + c.zoomText.getBBox().width + 5, g(c.buttonOptions, function (a, b) {
	          p[b] = e.button(a.text, B, 0, function () {
	            c.clickButton(b);c.isActive = !0;
	          }, t, y && y.hover, y && y.select, y && y.disabled).attr({ "text-align": "center" }).add(E);B += p[b].width + r(m.buttonSpacing, 5);
	        }), !1 !== v && (c.div = q = l("div", null, { position: "relative", height: 0, zIndex: 1 }), f.parentNode.insertBefore(q, f), c.inputGroup = q = e.g("input-group").add(), q.offset = 0, c.drawInput("min"), c.drawInput("max"))), c.updateButtonStates(), E[F ? "animate" : "attr"]({ translateY: C.buttonTop }), !1 !== v && (q.align(A({ y: C.inputTop, width: q.offset, x: k && C.inputTop < (k.y || 0) + k.height - d.spacing[0] ? -40 : 0 }, m.inputPosition), !0, d.spacingBox), n(v) || (d = E.getBBox(), q[q.alignAttr.translateX < d.x + d.width + 10 ? "hide" : "show"]()), c.setInputValue("min", a), c.setInputValue("max", b)), c.rendered = !0);
	      }, update: function update(a) {
	        var b = this.chart;d(!0, b.options.rangeSelector, a);this.destroy();this.init(b);
	      }, destroy: function destroy() {
	        var a = this.minInput,
	            d = this.maxInput,
	            c;this.unMouseDown();this.unResize();h(this.buttons);a && (a.onfocus = a.onblur = a.onchange = null);d && (d.onfocus = d.onblur = d.onchange = null);for (c in this) {
	          this[c] && "chart" !== c && (this[c].destroy ? this[c].destroy() : this[c].nodeType && b(this[c])), this[c] !== B.prototype[c] && (this[c] = null);
	        }
	      } };E.prototype.toFixedRange = function (a, b, c, d) {
	      var e = this.chart && this.chart.fixedRange;a = r(c, this.translate(a, !0));b = r(d, this.translate(b, !0));c = e && (b - a) / e;.7 < c && 1.3 > c && (d ? a = b - e : b = a + e);m(a) || (a = b = void 0);return { min: a, max: b };
	    };E.prototype.minFromRange = function () {
	      var a = this.range,
	          b = { month: "Month", year: "FullYear" }[a.type],
	          c,
	          d = this.max,
	          f,
	          g,
	          h = function h(a, c) {
	        var d = new Date(a);d["set" + b](d["get" + b]() + c);return d.getTime() - a;
	      };m(a) ? (c = d - a, g = a) : (c = d + h(d, -a.count), this.chart && (this.chart.fixedRange = d - c));f = r(this.dataMin, Number.MIN_VALUE);m(c) || (c = f);c <= f && (c = f, void 0 === g && (g = h(c, a.count)), this.newMax = Math.min(c + g, this.dataMax));m(d) || (c = void 0);return c;
	    };z(F.prototype, "init", function (a, b, c) {
	      C(this, "init", function () {
	        this.options.rangeSelector.enabled && (this.rangeSelector = new B(this));
	      });a.call(this, b, c);
	    });a.RangeSelector = B;
	  })(K);(function (a) {
	    var B = a.addEvent,
	        C = a.isNumber;a.Chart.prototype.callbacks.push(function (a) {
	      function E() {
	        v = a.xAxis[0].getExtremes();C(v.min) && q.render(v.min, v.max);
	      }var v,
	          l = a.scroller,
	          q = a.rangeSelector,
	          x,
	          t;l && (v = a.xAxis[0].getExtremes(), l.render(v.min, v.max));q && (t = B(a.xAxis[0], "afterSetExtremes", function (a) {
	        q.render(a.min, a.max);
	      }), x = B(a, "redraw", E), E());B(a, "destroy", function () {
	        q && (x(), t());
	      });
	    });
	  })(K);(function (a) {
	    var B = a.arrayMax,
	        C = a.arrayMin,
	        E = a.Axis,
	        F = a.Chart,
	        v = a.defined,
	        l = a.each,
	        q = a.extend,
	        x = a.format,
	        t = a.inArray,
	        n = a.isNumber,
	        h = a.isString,
	        b = a.map,
	        g = a.merge,
	        A = a.pick,
	        u = a.Point,
	        p = a.Renderer,
	        m = a.Series,
	        d = a.splat,
	        r = a.SVGRenderer,
	        G = a.VMLRenderer,
	        f = a.wrap,
	        z = m.prototype,
	        e = z.init,
	        y = z.processData,
	        c = u.prototype.tooltipFormatter;a.StockChart = a.stockChart = function (c, e, f) {
	      var l = h(c) || c.nodeName,
	          k = arguments[l ? 1 : 0],
	          m = k.series,
	          n = a.getOptions(),
	          p,
	          q = A(k.navigator && k.navigator.enabled, n.navigator.enabled, !0),
	          r = q ? { startOnTick: !1, endOnTick: !1 } : null,
	          t = { marker: { enabled: !1, radius: 2 } },
	          u = { shadow: !1, borderWidth: 0 };k.xAxis = b(d(k.xAxis || {}), function (a) {
	        return g({ minPadding: 0, maxPadding: 0, ordinal: !0, title: { text: null }, labels: { overflow: "justify" }, showLastLabel: !0 }, n.xAxis, a, { type: "datetime", categories: null }, r);
	      });k.yAxis = b(d(k.yAxis || {}), function (a) {
	        p = A(a.opposite, !0);return g({ labels: { y: -2 }, opposite: p, showLastLabel: !1, title: { text: null } }, n.yAxis, a);
	      });k.series = null;k = g({ chart: { panning: !0, pinchType: "x" }, navigator: { enabled: q }, scrollbar: { enabled: A(n.scrollbar.enabled, !0) }, rangeSelector: { enabled: A(n.rangeSelector.enabled, !0) }, title: { text: null }, tooltip: { shared: !0, crosshairs: !0 }, legend: { enabled: !1 }, plotOptions: { line: t, spline: t, area: t, areaspline: t, arearange: t, areasplinerange: t,
	          column: u, columnrange: u, candlestick: u, ohlc: u } }, k, { isStock: !0, chart: { inverted: !1 } });k.series = m;return l ? new F(c, k, f) : new F(k, e);
	    };f(E.prototype, "autoLabelAlign", function (a) {
	      var b = this.chart,
	          c = this.options,
	          b = b._labelPanes = b._labelPanes || {},
	          d = this.options.labels;return this.chart.options.isStock && "yAxis" === this.coll && (c = c.top + "," + c.height, !b[c] && d.enabled) ? (15 === d.x && (d.x = 0), void 0 === d.align && (d.align = "right"), b[c] = 1, "right") : a.call(this, [].slice.call(arguments, 1));
	    });f(E.prototype, "getPlotLinePath", function (a, c, d, e, f, g) {
	      var k = this,
	          m = this.isLinked && !this.series ? this.linkedParent.series : this.series,
	          p = k.chart,
	          q = p.renderer,
	          r = k.left,
	          u = k.top,
	          w,
	          x,
	          y,
	          z,
	          D = [],
	          B = [],
	          C,
	          E;if ("colorAxis" === k.coll) return a.apply(this, [].slice.call(arguments, 1));B = function (a) {
	        var c = "xAxis" === a ? "yAxis" : "xAxis";a = k.options[c];return n(a) ? [p[c][a]] : h(a) ? [p.get(a)] : b(m, function (a) {
	          return a[c];
	        });
	      }(k.coll);l(k.isXAxis ? p.yAxis : p.xAxis, function (a) {
	        if (v(a.options.id) ? -1 === a.options.id.indexOf("navigator") : 1) {
	          var b = a.isXAxis ? "yAxis" : "xAxis",
	              b = v(a.options[b]) ? p[b][a.options[b]] : p[b][0];k === b && B.push(a);
	        }
	      });C = B.length ? [] : [k.isXAxis ? p.yAxis[0] : p.xAxis[0]];l(B, function (a) {
	        -1 === t(a, C) && C.push(a);
	      });E = A(g, k.translate(c, null, null, e));n(E) && (k.horiz ? l(C, function (a) {
	        var b;x = a.pos;z = x + a.len;w = y = Math.round(E + k.transB);if (w < r || w > r + k.width) f ? w = y = Math.min(Math.max(r, w), r + k.width) : b = !0;b || D.push("M", w, x, "L", y, z);
	      }) : l(C, function (a) {
	        var b;w = a.pos;y = w + a.len;x = z = Math.round(u + k.height - E);if (x < u || x > u + k.height) f ? x = z = Math.min(Math.max(u, x), k.top + k.height) : b = !0;b || D.push("M", w, x, "L", y, z);
	      }));return 0 < D.length ? q.crispPolyLine(D, d || 1) : null;
	    });E.prototype.getPlotBandPath = function (a, b) {
	      b = this.getPlotLinePath(b, null, null, !0);a = this.getPlotLinePath(a, null, null, !0);var c = [],
	          d;if (a && b && a.toString() !== b.toString()) for (d = 0; d < a.length; d += 6) {
	        c.push("M", a[d + 1], a[d + 2], "L", a[d + 4], a[d + 5], b[d + 4], b[d + 5], b[d + 1], b[d + 2], "z");
	      } else c = null;return c;
	    };r.prototype.crispPolyLine = function (a, b) {
	      var c;for (c = 0; c < a.length; c += 6) {
	        a[c + 1] === a[c + 4] && (a[c + 1] = a[c + 4] = Math.round(a[c + 1]) - b % 2 / 2), a[c + 2] === a[c + 5] && (a[c + 2] = a[c + 5] = Math.round(a[c + 2]) + b % 2 / 2);
	      }return a;
	    };p === G && (G.prototype.crispPolyLine = r.prototype.crispPolyLine);f(E.prototype, "hideCrosshair", function (a, b) {
	      a.call(this, b);this.crossLabel && (this.crossLabel = this.crossLabel.hide());
	    });f(E.prototype, "drawCrosshair", function (a, b, c) {
	      var d, e;a.call(this, b, c);if (v(this.crosshair.label) && this.crosshair.label.enabled && this.cross) {
	        a = this.chart;var f = this.options.crosshair.label,
	            g = this.horiz;d = this.opposite;e = this.left;var h = this.top,
	            l = this.crossLabel,
	            m,
	            n = f.format,
	            p = "",
	            r = "inside" === this.options.tickPosition,
	            t = !1 !== this.crosshair.snap,
	            u = 0;b || (b = this.cross && this.cross.e);m = g ? "center" : d ? "right" === this.labelAlign ? "right" : "left" : "left" === this.labelAlign ? "left" : "center";l || (l = this.crossLabel = a.renderer.label(null, null, null, f.shape || "callout").addClass("highcharts-crosshair-label" + (this.series[0] && " highcharts-color-" + this.series[0].colorIndex)).attr({ align: f.align || m, padding: A(f.padding, 8), r: A(f.borderRadius, 3), zIndex: 2 }).add(this.labelGroup), l.attr({ fill: f.backgroundColor || this.series[0] && this.series[0].color || "#666666", stroke: f.borderColor || "", "stroke-width": f.borderWidth || 0 }).css(q({ color: "#ffffff", fontWeight: "normal", fontSize: "11px", textAlign: "center" }, f.style)));g ? (m = t ? c.plotX + e : b.chartX, h += d ? 0 : this.height) : (m = d ? this.width + e : 0, h = t ? c.plotY + h : b.chartY);n || f.formatter || (this.isDatetimeAxis && (p = "%b %d, %Y"), n = "{value" + (p ? ":" + p : "") + "}");b = t ? c[this.isXAxis ? "x" : "y"] : this.toValue(g ? b.chartX : b.chartY);l.attr({ text: n ? x(n, { value: b }) : f.formatter.call(this, b), x: m, y: h, visibility: "visible" });
	        b = l.getBBox();if (g) {
	          if (r && !d || !r && d) h = l.y - b.height;
	        } else h = l.y - b.height / 2;g ? (d = e - b.x, e = e + this.width - b.x) : (d = "left" === this.labelAlign ? e : 0, e = "right" === this.labelAlign ? e + this.width : a.chartWidth);l.translateX < d && (u = d - l.translateX);l.translateX + b.width >= e && (u = -(l.translateX + b.width - e));l.attr({ x: m + u, y: h, anchorX: g ? m : this.opposite ? 0 : a.chartWidth, anchorY: g ? this.opposite ? a.chartHeight : 0 : h + b.height / 2 });
	      }
	    });z.init = function () {
	      e.apply(this, arguments);this.setCompare(this.options.compare);
	    };z.setCompare = function (a) {
	      this.modifyValue = "value" === a || "percent" === a ? function (b, c) {
	        var d = this.compareValue;if (void 0 !== b && void 0 !== d) return b = "value" === a ? b - d : b / d * 100 - (100 === this.options.compareBase ? 0 : 100), c && (c.change = b), b;
	      } : null;this.userOptions.compare = a;this.chart.hasRendered && (this.isDirty = !0);
	    };z.processData = function () {
	      var a,
	          b = -1,
	          c,
	          d,
	          e,
	          f;y.apply(this, arguments);if (this.xAxis && this.processedYData) for (c = this.processedXData, d = this.processedYData, e = d.length, this.pointArrayMap && (b = t("close", this.pointArrayMap), -1 === b && (b = t(this.pointValKey || "y", this.pointArrayMap))), a = 0; a < e - 1; a++) {
	        if (f = -1 < b ? d[a][b] : d[a], n(f) && c[a + 1] >= this.xAxis.min && 0 !== f) {
	          this.compareValue = f;break;
	        }
	      }
	    };f(z, "getExtremes", function (a) {
	      var b;a.apply(this, [].slice.call(arguments, 1));this.modifyValue && (b = [this.modifyValue(this.dataMin), this.modifyValue(this.dataMax)], this.dataMin = C(b), this.dataMax = B(b));
	    });E.prototype.setCompare = function (a, b) {
	      this.isXAxis || (l(this.series, function (b) {
	        b.setCompare(a);
	      }), A(b, !0) && this.chart.redraw());
	    };u.prototype.tooltipFormatter = function (b) {
	      b = b.replace("{point.change}", (0 < this.change ? "+" : "") + a.numberFormat(this.change, A(this.series.tooltipOptions.changeDecimals, 2)));return c.apply(this, [b]);
	    };f(m.prototype, "render", function (a) {
	      this.chart.is3d && this.chart.is3d() || this.chart.polar || !this.xAxis || (!this.clipBox && this.animate ? (this.clipBox = g(this.chart.clipBox), this.clipBox.width = this.xAxis.len, this.clipBox.height = this.yAxis.len) : this.chart[this.sharedClipKey] ? this.chart[this.sharedClipKey].attr({ width: this.xAxis.len, height: this.yAxis.len }) : this.clipBox && (this.clipBox.width = this.xAxis.len, this.clipBox.height = this.yAxis.len));a.call(this);
	    });
	  })(K);return K;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 163)(module)))

/***/ },
/* 163 */
/*!**************************************!*\
  !*** ../~/webpack/buildin/module.js ***!
  \**************************************/
/***/ function(module, exports) {

	"use strict";
	
	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map